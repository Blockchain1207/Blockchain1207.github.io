{"version":3,"sources":["views/Nft/market/components/ProfileCell.tsx","views/Nft/market/components/ProfileNftModal.tsx","views/Nft/market/components/BuySellModals/shared/ApproveAndConfirmStage.tsx","views/Nft/market/components/BuySellModals/shared/TransactionConfirmed.tsx","views/Nft/market/components/BuySellModals/shared/ConfirmStage.tsx","hooks/useApproveConfirmTransaction.ts","components/ApproveConfirmButtons.tsx","views/Nft/market/components/BuySellModals/shared/styles.tsx","../node_modules/lodash/isEmpty.js","views/Nft/market/Profile/hooks/useFetchUserNfts.tsx","views/Nft/market/components/BuySellModals/SellModal/types.ts","views/Nft/market/components/BuySellModals/SellModal/SellStage.tsx","views/Nft/market/components/BuySellModals/SellModal/styles.tsx","views/Nft/market/components/BuySellModals/SellModal/SetPriceStage.tsx","views/Nft/market/components/BuySellModals/SellModal/EditStage.tsx","views/Nft/market/components/BuySellModals/SellModal/RemoveStage.tsx","views/Nft/market/components/BuySellModals/SellModal/TransferStage.tsx","views/Nft/market/components/BuySellModals/SellModal/index.tsx","components/ProfileAvatarWithTeam.tsx","views/ProfileCreation/SelectionCard.tsx","views/Nft/market/Profile/components/EditProfileModal/reducer.ts","views/Nft/market/Profile/hooks/useGetProfileCosts.ts","views/Nft/market/Profile/components/EditProfileModal/StartView.tsx","views/Nft/market/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Nft/market/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Nft/market/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Nft/market/Profile/components/EditProfileModal/index.tsx","views/Nft/market/components/PaginationButtons.tsx"],"names":["Avatar","styled","img","theme","mediaQueries","md","StyledFlex","Flex","ProfileCell","accountAddress","useGetProfileAvatar","username","profileNft","nft","usernameFetchStatus","avatarFetchStatus","profileName","sellerProfilePicComponent","width","height","mr","ProfileAvatarFetchStatus","FETCHED","image","thumbnail","src","to","nftsBaseUrl","display","lineHeight","truncateHash","StyledModal","Modal","TextWrapper","colors","dropdown","ProfileNftModal","onDismiss","useModal","onEditProfileModal","t","useTranslation","useTheme","itemPageUrlId","collectionAddress","pancakeBunniesAddress","attributes","value","tokenId","title","headerBackground","gradients","cardHeader","flexDirection","maxWidth","p","flex","gridTemplateColumns","alignItems","bold","name","fontSize","color","textAlign","collectionName","justifyContent","px","mb","small","id","as","Link","external","variant","href","BASE_URL","getBscScanLinkForNft","py","onClick","ApproveAndConfirmStage","isApproved","isApproving","isConfirming","handleApprove","handleConfirm","success","mt","size","disabled","TransactionConfirmed","txHash","chainId","useActiveWeb3React","getBscScanLink","pb","ConfirmStage","initialState","approvalState","confirmState","reducer","state","actions","type","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","onApproveSuccess","account","useWeb3React","useReducer","dispatch","handlePreApprove","useRef","toastError","useToast","useEffect","current","then","result","isConfirmed","hasApproveFailed","hasConfirmFailed","a","tx","wait","receipt","status","params","ButtonArrangement","StyledApproveConfirmButtonRow","div","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","endIcon","undefined","isLoading","RoundedImage","Image","radii","Divider","cardBorder","HorizontalDivider","StepIndicator","secondary","textDisabled","baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","splice","length","tag","key","call","useFetchUserNfts","useAppDispatch","useProfile","profile","isProfileInitialized","isInitialized","isProfileLoading","userNftsInitializationState","useUserNfts","collections","useGetCollections","hasProfileNft","profileNftTokenId","toString","profileNftCollectionAddress","profileNftWithCollectionAddress","useMemo","nftLocation","NftLocation","PROFILE","previousProfileNftTokenId","usePreviousValue","shouldFetch","UserNftInitializationState","UNINITIALIZED","hasAccountSwitched","isEmpty","fetchUserNfts","SellingStage","SellStage","nftToSell","lowestPrice","continueToNextStage","continueToTransferStage","hasProfile","toLowerCase","EditProfileModal","toLocaleString","minimumFractionDigits","maximumFractionDigits","stagesWithBackButton","SET_PRICE","ADJUST_PRICE","APPROVE_AND_CONFIRM_SELL","CONFIRM_ADJUST_PRICE","REMOVE_FROM_MARKET","CONFIRM_REMOVE_FROM_MARKET","TRANSFER","CONFIRM_TRANSFER","stage","includes","textSubtle","GreyedOutContainer","Box","RightAlignedInput","Input","BnbAmountCell","bnbAmount","bnbBusdPrice","useBNBBusdPrice","usdAmount","multiplyPriceByAmount","FeeAmountCell","creatorFee","tradingFee","totalFee","feeAmount","SetPriceStage","currentPrice","price","setPrice","inputRef","adjustedPriceIsTheSame","parseFloat","priceIsValid","Number","isNaN","useGetCollection","creatorFeeAsNumber","tradingFeeAsNumber","bnbPrice","priceAsFloat","priceInUsd","priceIsOutOfRange","useTooltip","percentage","placement","tooltip","tooltipVisible","targetRef","focus","textTransform","scale","inputMode","ref","isWarning","onChange","e","target","minPrice","maxPrice","alignSelf","EditStage","continueToAdjustPriceStage","continueToRemoveFromMarketStage","marketData","currentAskPrice","RemoveStage","TransferStage","transferAddress","setTransferAddress","isInvalidTransferAddress","transferAddressEqualsConnectedAddress","pt","placeholder","modalTitles","SELL","EDIT","TX_CONFIRMED","getToastText","SellModal","useState","setStage","confirmedTxHash","setConfirmedTxHash","callWithGasPrice","useCallWithGasPrice","toastSuccess","collectionContract","useContractForCollection","nftMarketContract","useNftMarketContract","isAddress","useGetLowestPriceFromNft","dispatchSuccessAction","updateUserNft","location","WALLET","removeUserNft","FORSALE","isApprovedForAll","address","approvedForContract","Toast","transactionHash","methodName","askPrice","parseUnits","showBackButton","onBack","TeamAvatar","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatarWithTeam","isActive","team","images","alt","Label","label","isDisabled","Body","Children","StyledBackgroundImage","SelectionCard","isChecked","children","props","isSuccess","checked","style","Views","action","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","ethers","BigNumber","from","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","calls","map","method","getPancakeProfileAddress","multicallv2","profileABI","fetchCosts","DangerOutline","failure","StartPage","needsApproval","setNeedsApproval","minimumCakeRequired","useGetCakeBalance","cakeBalance","balance","hasMinimumCakeRequired","fetchStatus","FetchStatus","SUCCESS","gte","cakeContract","useCake","cost","allowance","response","lt","checkApprovalStatus","minimum","formatBigNumber","PauseProfilePage","isAcknowledged","setIsAcknowledged","setIsConfirming","pancakeProfileContract","useProfileContract","handleDeactivateProfile","fetchProfile","htmlFor","cursor","marginBottom","ml","ChangeProfilePicPage","selectedNft","setSelectedNft","nfts","profileContract","library","nftsInWallet","filter","contract","getErc721Contract","getSigner","maxHeight","overflowY","walletNft","ApproveCakePage","setIsApproving","approve","mul","viewTitle","translationKey","isStartView","handleBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","PageButtons","Arrow","primary"],"mappings":"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","file":"static/js/2.a32bfd88.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, BunnyPlaceholderIcon, Skeleton, Text } from 'gol-uikit'\nimport truncateHash from 'utils/truncateHash'\nimport { useGetProfileAvatar } from 'state/profile/hooks'\nimport { ProfileAvatarFetchStatus } from 'state/types'\nimport { Link } from 'react-router-dom'\nimport { nftsBaseUrl } from '../constants'\n\nconst Avatar = styled.img`\n  margin-right: 4px;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 12px;\n  }\n`\n\nconst StyledFlex = styled(Flex)`\n  align-items: center;\n  transition: opacity 200ms ease-in;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nconst ProfileCell: React.FC<{ accountAddress: string }> = ({ accountAddress }) => {\n  const { username, nft: profileNft, usernameFetchStatus, avatarFetchStatus } = useGetProfileAvatar(accountAddress)\n  const profileName = username || '-'\n\n  let sellerProfilePicComponent = <Skeleton width=\"32px\" height=\"32px\" mr={['4px', null, '12px']} />\n  if (avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED) {\n    if (profileNft?.image?.thumbnail) {\n      sellerProfilePicComponent = <Avatar src={profileNft?.image?.thumbnail} />\n    } else {\n      sellerProfilePicComponent = <BunnyPlaceholderIcon width=\"32px\" height=\"32px\" mr={['4px', null, '12px']} />\n    }\n  }\n\n  return (\n    <Link to={`${nftsBaseUrl}/profile/${accountAddress}`}>\n      <StyledFlex>\n        {sellerProfilePicComponent}\n        <Box display=\"inline\">\n          <Text lineHeight=\"1.25\">{truncateHash(accountAddress)}</Text>\n          {usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED ? (\n            <Skeleton />\n          ) : (\n            <Text lineHeight=\"1.25\">{profileName}</Text>\n          )}\n        </Box>\n      </StyledFlex>\n    </Link>\n  )\n}\n\nexport default ProfileCell\n","import React from 'react'\nimport { InjectedModalProps, Modal, Flex, Text, Button, useModal, Link, Grid, LinkExternal } from 'gol-uikit'\nimport { BASE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\nimport styled from 'styled-components'\nimport { NftToken } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLinkForNft } from 'utils'\nimport { HorizontalDivider, RoundedImage } from './BuySellModals/shared/styles'\nimport EditProfileModal from '../Profile/components/EditProfileModal'\nimport { nftsBaseUrl, pancakeBunniesAddress } from '../constants'\n\nexport const StyledModal = styled(Modal)`\n  & > div:last-child {\n    padding: 0;\n  }\n`\n\nconst TextWrapper = styled(Flex)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n\ninterface ProfileNftModalProps extends InjectedModalProps {\n  nft: NftToken\n}\n\nconst ProfileNftModal: React.FC<ProfileNftModalProps> = ({ nft, onDismiss }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  const itemPageUrlId = nft.collectionAddress === pancakeBunniesAddress ? nft.attributes[0].value : nft.tokenId\n\n  return (\n    <StyledModal title={t('Details')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Flex flexDirection=\"column\" maxWidth=\"350px\">\n        <Flex p=\"16px\">\n          <RoundedImage src={nft.image.thumbnail} height={68} width={68} mr=\"16px\" />\n          <Grid flex=\"1\" gridTemplateColumns=\"1fr 1fr\" alignItems=\"center\">\n            <Text bold>{nft.name}</Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n              {nft.collectionName}\n            </Text>\n            {/* TODO: Add lowestPrice when available */}\n          </Grid>\n        </Flex>\n        <Flex justifyContent=\"space-between\" px=\"16px\" mb=\"16px\">\n          <Flex flex=\"2\">\n            <Text small color=\"textSubtle\">\n              {t('Token ID: %id%', { id: nft.tokenId })}\n            </Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" flex=\"3\">\n            <Button\n              as={Link}\n              p=\"0px\"\n              height=\"16px\"\n              external\n              variant=\"text\"\n              href={`${BASE_URL}${nftsBaseUrl}/collections/${nft.collectionAddress}/${itemPageUrlId}`}\n            >\n              {t('View Item')}\n            </Button>\n            <HorizontalDivider />\n            <LinkExternal p=\"0px\" height=\"16px\" href={getBscScanLinkForNft(nft.collectionAddress, nft.tokenId)}>\n              BscScan\n            </LinkExternal>\n          </Flex>\n        </Flex>\n        <TextWrapper p=\"24px 16px\" flexDirection=\"column\">\n          <Text mb=\"16px\">{t(\"You're using this NFT as your Pancake Profile picture\")}</Text>\n          <Text color=\"textSubtle\" mb=\"16px\" fontSize=\"14px\">\n            {t(\n              'Removing it will suspend your profile, and you won’t be able to earn points, participate in team activities, or be eligible for new NFT drops.',\n            )}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {t('Go to your profile page to continue.')}\n          </Text>\n        </TextWrapper>\n        <Flex flexDirection=\"column\" py=\"16px\" px=\"16px\">\n          <Button onClick={onEditProfileModal} width=\"100%\" variant=\"secondary\">\n            {t('Remove Profile Pic')}\n          </Button>\n        </Flex>\n      </Flex>\n    </StyledModal>\n  )\n}\n\nexport default ProfileNftModal\n","import React from 'react'\nimport { Flex, Text, Button, Spinner } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { StepIndicator } from './styles'\n\ninterface ApproveAndConfirmStageProps {\n  variant: 'buy' | 'sell'\n  isApproved: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  handleApprove: () => void\n  handleConfirm: () => void\n}\n\n// Buy Flow:\n// Shown if user wants to pay with WBNB and contract isn't approved yet\n// Sell Flow:\n// Shown the first time user puts NFT for sale\nconst ApproveAndConfirmStage: React.FC<ApproveAndConfirmStageProps> = ({\n  variant,\n  isApproved,\n  isApproving,\n  isConfirming,\n  handleApprove,\n  handleConfirm,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex p=\"16px\" flexDirection=\"column\">\n      <Flex mb=\"8px\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\">\n            <StepIndicator success={isApproved}>\n              <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n                1\n              </Text>\n            </StepIndicator>\n            <Text fontSize=\"20px\" color={isApproved ? 'success' : 'secondary'} bold>\n              {isApproved ? t('Enabled') : t('Enable')}\n            </Text>\n          </Flex>\n          {!isApproved && (\n            <Text mt=\"8px\" maxWidth=\"275px\" small color=\"textSubtle\">\n              {variant === 'buy'\n                ? t('Please enable WBNB spending in your wallet')\n                : t('Please enable your NFT to be sent to the market')}\n            </Text>\n          )}\n        </Flex>\n        <Flex flex=\"0 0 64px\" width=\"64px\">\n          {isApproving && <Spinner size={64} />}\n        </Flex>\n      </Flex>\n      {!isApproved && (\n        <Button variant=\"secondary\" disabled={isApproving} onClick={handleApprove}>\n          {isApproving ? `${t('Enabling')}...` : t('Enable')}\n        </Button>\n      )}\n      <Flex alignItems=\"center\" mt=\"8px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mt=\"16px\">\n            <StepIndicator success={!!0} disabled={!isApproved}>\n              <Text fontSize=\"20px\" bold color={!isApproved ? 'textDisabled' : 'invertedContrast'}>\n                2\n              </Text>\n            </StepIndicator>\n            <Text fontSize=\"20px\" bold color={isApproved ? 'secondary' : 'textDisabled'}>\n              {t('Confirm')}\n            </Text>\n          </Flex>\n          <Text small color={isApproved ? 'textSubtle' : 'textDisabled'}>\n            {t('Please confirm the transaction in your wallet')}\n          </Text>\n        </Flex>\n        <Flex flex=\"0 0 64px\" width=\"64px\">\n          {isConfirming && <Spinner size={64} />}\n        </Flex>\n      </Flex>\n      <Button mt=\"16px\" disabled={!isApproved || isConfirming} onClick={handleConfirm} variant=\"secondary\">\n        {isConfirming ? t('Confirming') : t('Confirm')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveAndConfirmStage\n","import React from 'react'\nimport { Flex, Text, Button, ArrowUpIcon, LinkExternal } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Divider } from './styles'\n\ninterface TransactionConfirmedProps {\n  txHash: string\n  onDismiss: () => void\n}\n\nconst TransactionConfirmed: React.FC<TransactionConfirmedProps> = ({ txHash, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  return (\n    <>\n      <Flex p=\"16px\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-between\" height=\"150px\">\n        <ArrowUpIcon width=\"64px\" height=\"64px\" color=\"primary\" />\n        <Text bold>{t('Transaction Confirmed')}</Text>\n        <LinkExternal href={getBscScanLink(txHash, 'transaction', chainId)}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Divider />\n      <Flex px=\"16px\" pb=\"16px\" justifyContent=\"center\">\n        <Button onClick={onDismiss} variant=\"secondary\" width=\"100%\">\n          {t('Close')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default TransactionConfirmed\n","import React from 'react'\nimport { Flex, Text, Button, Spinner } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ConfirmStageProps {\n  isConfirming: boolean\n  handleConfirm: () => void\n}\n\n// Buy Flow:\n// Shown in case user wants to pay with BNB\n// or if user wants to pay with WBNB and it is already approved\n// Sell Flow:\n// Shown if user adjusts the price or removes NFT from the market\nconst ConfirmStage: React.FC<ConfirmStageProps> = ({ isConfirming, handleConfirm }) => {\n  const { t } = useTranslation()\n  return (\n    <Flex p=\"16px\" flexDirection=\"column\">\n      <Flex alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\">\n            <Text fontSize=\"20px\" bold color=\"secondary\">\n              {t('Confirm')}\n            </Text>\n          </Flex>\n          <Text small color=\"textSubtle\">\n            {t('Please confirm the transaction in your wallet')}\n          </Text>\n        </Flex>\n        <Flex flex=\"0 0 64px\" height=\"72px\" width=\"64px\">\n          {isConfirming && <Spinner size={64} />}\n        </Flex>\n      </Flex>\n      <Button mt=\"24px\" disabled={isConfirming} onClick={handleConfirm} variant=\"secondary\">\n        {isConfirming ? `${t('Confirming')}...` : t('Confirm')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ConfirmStage\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    hasApproveFailed: state.approvalState === 'fail',\n    hasConfirmFailed: state.confirmState === 'fail',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async (params = {}) => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm(params)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import styled from 'styled-components'\nimport { Flex, Image } from 'gol-uikit'\n\nexport const RoundedImage = styled(Image)`\n  border-radius: ${({ theme }) => theme.radii.small};\n  overflow: hidden;\n`\n\nexport const Divider = styled.div`\n  margin: 16px 0;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nexport const HorizontalDivider = styled.div`\n  border-right: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nexport const StepIndicator = styled(Flex)<{ success: boolean; disabled?: boolean }>`\n  border-radius: 50%;\n  background-color: ${({ theme, success, disabled }) => {\n    if (disabled) {\n      return 'none'\n    }\n    return success ? theme.colors.success : theme.colors.secondary\n  }};\n  border: ${({ theme, disabled }) => (disabled ? `1px solid ${theme.colors.textDisabled}` : 'none')};\n  height: 32px;\n  width: 32px;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n`\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import { useEffect, useMemo } from 'react'\nimport isEmpty from 'lodash/isEmpty'\nimport { useAppDispatch } from 'state'\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\nimport { useGetCollections, useUserNfts } from 'state/nftMarket/hooks'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { useProfile } from 'state/profile/hooks'\nimport { NftLocation, UserNftInitializationState } from 'state/nftMarket/types'\n\n// We need to fetch collectibles for non-connected accounts, hence this hook accepts an account string.\nconst useFetchUserNfts = (account: string) => {\n  const dispatch = useAppDispatch()\n  const { profile, isInitialized: isProfileInitialized, isLoading: isProfileLoading } = useProfile()\n  const { userNftsInitializationState } = useUserNfts()\n  const collections = useGetCollections()\n\n  const hasProfileNft = profile?.tokenId\n  const profileNftTokenId = profile?.tokenId?.toString()\n  const profileNftCollectionAddress = profile?.collectionAddress\n\n  const profileNftWithCollectionAddress = useMemo(() => {\n    if (hasProfileNft) {\n      return {\n        tokenId: profileNftTokenId,\n        collectionAddress: profileNftCollectionAddress,\n        nftLocation: NftLocation.PROFILE,\n      }\n    }\n    return null\n  }, [profileNftTokenId, profileNftCollectionAddress, hasProfileNft])\n\n  const previousProfileNftTokenId = usePreviousValue(profileNftTokenId)\n\n  // Fetch on first load when profile fetch is resolved\n  const shouldFetch =\n    account &&\n    userNftsInitializationState === UserNftInitializationState.UNINITIALIZED &&\n    isProfileInitialized &&\n    !isProfileLoading\n\n  // Fetch on account / profile change, once profile fetch is resolved\n  const hasAccountSwitched = previousProfileNftTokenId !== profileNftTokenId && !isProfileLoading\n\n  useEffect(() => {\n    if ((shouldFetch || hasAccountSwitched) && !isEmpty(collections)) {\n      dispatch(fetchUserNfts({ account, collections, profileNftWithCollectionAddress }))\n    }\n  }, [\n    dispatch,\n    account,\n    shouldFetch,\n    hasAccountSwitched,\n    profileNftTokenId,\n    collections,\n    profileNftWithCollectionAddress,\n  ])\n}\n\nexport default useFetchUserNfts\n","export enum SellingStage {\n  // Sell flow\n  SELL,\n  SET_PRICE,\n  APPROVE_AND_CONFIRM_SELL,\n  // Adjust price flow\n  EDIT,\n  ADJUST_PRICE,\n  CONFIRM_ADJUST_PRICE,\n  // Remove from market flow\n  REMOVE_FROM_MARKET,\n  CONFIRM_REMOVE_FROM_MARKET,\n  // Transfer flow\n  TRANSFER,\n  CONFIRM_TRANSFER,\n  // Common\n  TX_CONFIRMED,\n}\n","import React from 'react'\nimport { Flex, Grid, Text, Button, Link, BinanceIcon, LinkExternal, useModal } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_URL } from 'config'\nimport { nftsBaseUrl, pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getBscScanLinkForNft } from 'utils'\nimport EditProfileModal from 'views/Nft/market/Profile/components/EditProfileModal'\nimport { useProfile } from 'state/profile/hooks'\nimport { Divider, HorizontalDivider, RoundedImage } from '../shared/styles'\n\ninterface SellStageProps {\n  nftToSell: NftToken\n  lowestPrice: number\n  continueToNextStage: () => void\n  continueToTransferStage: () => void\n}\n\n// Initial stage when user wants to put their NFT for sale or transfer to another wallet\nconst SellStage: React.FC<SellStageProps> = ({\n  nftToSell,\n  lowestPrice,\n  continueToNextStage,\n  continueToTransferStage,\n}) => {\n  const { t } = useTranslation()\n  const { hasProfile } = useProfile()\n  const itemPageUrlId =\n    nftToSell.collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n      ? nftToSell.attributes[0].value\n      : nftToSell.tokenId\n\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <>\n      <Flex p=\"16px\">\n        <RoundedImage src={nftToSell.image.thumbnail} height={68} width={68} mr=\"8px\" />\n        <Grid flex=\"1\" gridTemplateColumns=\"1fr 1fr\" alignItems=\"center\">\n          <Text bold>{nftToSell.name}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n            {nftToSell.collectionName}\n          </Text>\n          {lowestPrice && (\n            <>\n              <Text small color=\"textSubtle\">\n                {t('Lowest price')}\n              </Text>\n              <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n                <BinanceIcon width={16} height={16} mr=\"4px\" />\n                <Text small>\n                  {lowestPrice.toLocaleString(undefined, {\n                    minimumFractionDigits: 3,\n                    maximumFractionDigits: 3,\n                  })}\n                </Text>\n              </Flex>\n            </>\n          )}\n        </Grid>\n      </Flex>\n      <Flex justifyContent=\"space-between\" px=\"16px\" mt=\"8px\">\n        <Flex flex=\"2\">\n          <Text small color=\"textSubtle\">\n            {t('Token ID: %id%', { id: nftToSell.tokenId })}\n          </Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" flex=\"3\">\n          <Button\n            as={Link}\n            p=\"0px\"\n            height=\"16px\"\n            external\n            variant=\"text\"\n            href={`${BASE_URL}${nftsBaseUrl}/collections/${nftToSell.collectionAddress}/${itemPageUrlId}`}\n          >\n            {t('View Item')}\n          </Button>\n          <HorizontalDivider />\n          <LinkExternal\n            p=\"0px\"\n            height=\"16px\"\n            href={getBscScanLinkForNft(nftToSell.collectionAddress, nftToSell.tokenId)}\n          >\n            BscScan\n          </LinkExternal>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex flexDirection=\"column\" px=\"16px\" pb=\"16px\">\n        <Button mb=\"8px\" onClick={continueToNextStage}>\n          {t('Sell')}\n        </Button>\n        <Button mb=\"8px\" variant=\"secondary\" onClick={continueToTransferStage}>\n          {t('Transfer')}\n        </Button>\n        {hasProfile && (\n          <Button variant=\"secondary\" onClick={onEditProfileModal}>\n            {t('Set as Profile Pic')}\n          </Button>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default SellStage\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Box, Flex, Text, BinanceIcon, Input } from 'gol-uikit'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { SellingStage } from './types'\n\nexport const stagesWithBackButton = [\n  SellingStage.SET_PRICE,\n  SellingStage.ADJUST_PRICE,\n  SellingStage.APPROVE_AND_CONFIRM_SELL,\n  SellingStage.CONFIRM_ADJUST_PRICE,\n  SellingStage.REMOVE_FROM_MARKET,\n  SellingStage.CONFIRM_REMOVE_FROM_MARKET,\n  SellingStage.TRANSFER,\n  SellingStage.CONFIRM_TRANSFER,\n]\n\nexport const StyledModal = styled(Modal)<{ stage: SellingStage }>`\n  width: 360px;\n  & > div:last-child {\n    padding: 0;\n  }\n  & h2:first-of-type {\n    ${({ stage, theme }) => (stagesWithBackButton.includes(stage) ? `color: ${theme.colors.textSubtle}` : null)};\n  }\n  & svg:first-of-type {\n    ${({ stage, theme }) => (stagesWithBackButton.includes(stage) ? `fill: ${theme.colors.textSubtle}` : null)};\n  }\n`\n\nexport const GreyedOutContainer = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  padding: 16px;\n`\n\nexport const RightAlignedInput = styled(Input)`\n  text-align: right;\n`\n\ninterface BnbAmountCellProps {\n  bnbAmount: number\n}\n\nexport const BnbAmountCell: React.FC<BnbAmountCellProps> = ({ bnbAmount }) => {\n  const bnbBusdPrice = useBNBBusdPrice()\n  if (!bnbAmount || bnbAmount === 0) {\n    return (\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <BinanceIcon width={16} height={16} mr=\"4px\" />\n        <Text bold mr=\"4px\">\n          -\n        </Text>\n      </Flex>\n    )\n  }\n  const usdAmount = multiplyPriceByAmount(bnbBusdPrice, bnbAmount)\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n      <BinanceIcon width={16} height={16} mr=\"4px\" />\n      <Text bold mr=\"4px\">{`${bnbAmount.toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`}</Text>\n      <Text small color=\"textSubtle\" textAlign=\"right\">\n        {`($${usdAmount.toLocaleString(undefined, {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })})`}\n      </Text>\n    </Flex>\n  )\n}\n\ninterface FeeAmountCellProps {\n  bnbAmount: number\n  creatorFee: number\n  tradingFee: number\n}\n\nexport const FeeAmountCell: React.FC<FeeAmountCellProps> = ({ bnbAmount, creatorFee, tradingFee }) => {\n  if (!bnbAmount || bnbAmount === 0) {\n    return (\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <BinanceIcon width={16} height={16} mr=\"4px\" />\n        <Text bold mr=\"4px\">\n          -\n        </Text>\n      </Flex>\n    )\n  }\n\n  const totalFee = creatorFee + tradingFee\n  const totalFeeAsDecimal = totalFee / 100\n  const feeAmount = bnbAmount * totalFeeAsDecimal\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n      <BinanceIcon width={16} height={16} mr=\"4px\" />\n      <Text bold mr=\"4px\">{`${feeAmount.toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 6,\n      })}`}</Text>\n      <Text small color=\"textSubtle\" textAlign=\"right\">\n        ({totalFee}%)\n      </Text>\n    </Flex>\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { Flex, Grid, Box, Text, Button, BinanceIcon, ErrorIcon, useTooltip } from 'gol-uikit'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { useTranslation } from 'contexts/Localization'\nimport { NftToken } from 'state/nftMarket/types'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { Divider } from '../shared/styles'\nimport { GreyedOutContainer, BnbAmountCell, RightAlignedInput, FeeAmountCell } from './styles'\n\ninterface SetPriceStageProps {\n  nftToSell: NftToken\n  variant: 'set' | 'adjust'\n  currentPrice?: string\n  lowestPrice?: number\n  price: string\n  setPrice: React.Dispatch<React.SetStateAction<string>>\n  continueToNextStage: () => void\n}\n\nconst MIN_PRICE = 0.005\nconst MAX_PRICE = 10000\n\n// Stage where user puts price for NFT they're about to put on sale\n// Also shown when user wants to adjust the price of already listed NFT\nconst SetPriceStage: React.FC<SetPriceStageProps> = ({\n  nftToSell,\n  variant,\n  lowestPrice,\n  currentPrice,\n  price,\n  setPrice,\n  continueToNextStage,\n}) => {\n  const { t } = useTranslation()\n  const inputRef = useRef<HTMLInputElement>()\n  const adjustedPriceIsTheSame = variant === 'adjust' && parseFloat(currentPrice) === parseFloat(price)\n  const priceIsValid = !price || Number.isNaN(parseFloat(price)) || parseFloat(price) <= 0\n\n  const { creatorFee, tradingFee } = useGetCollection(nftToSell.collectionAddress)\n  const creatorFeeAsNumber = parseFloat(creatorFee)\n  const tradingFeeAsNumber = parseFloat(tradingFee)\n  const bnbPrice = useBNBBusdPrice()\n  const priceAsFloat = parseFloat(price)\n  const priceInUsd = multiplyPriceByAmount(bnbPrice, priceAsFloat)\n\n  const priceIsOutOfRange = priceAsFloat > MAX_PRICE || priceAsFloat < MIN_PRICE\n\n  const { tooltip, tooltipVisible, targetRef } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'When selling NFTs from this collection, a portion of the BNB paid will be diverted before reaching the seller:',\n        )}\n      </Text>\n      {creatorFeeAsNumber > 0 && (\n        <Text>{t('%percentage%% royalties to the collection owner', { percentage: creatorFee })}</Text>\n      )}\n      <Text>{t('%percentage%% trading fee will be used to buy & burn GOL', { percentage: tradingFee })}</Text>\n    </>,\n    { placement: 'auto' },\n  )\n\n  useEffect(() => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [inputRef])\n\n  const getButtonText = () => {\n    if (variant === 'adjust') {\n      if (adjustedPriceIsTheSame || priceIsValid) {\n        return t('Input New Sale Price')\n      }\n      return t('Confirm')\n    }\n    return t('Enable Listing')\n  }\n  return (\n    <>\n      <Text fontSize=\"24px\" bold p=\"16px\">\n        {variant === 'set' ? t('Set Price') : t('Adjust Sale Price')}\n      </Text>\n      <GreyedOutContainer>\n        <Text fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\" bold>\n          {t('Set Price')}\n        </Text>\n        <Flex>\n          <Flex flex=\"1\" alignItems=\"center\">\n            <BinanceIcon width={24} height={24} mr=\"4px\" />\n            <Text bold>WBNB</Text>\n          </Flex>\n          <Flex flex=\"2\">\n            <RightAlignedInput\n              scale=\"sm\"\n              type=\"number\"\n              inputMode=\"decimal\"\n              value={price}\n              ref={inputRef}\n              isWarning={priceIsOutOfRange}\n              onChange={(e) => setPrice(e.target.value)}\n            />\n          </Flex>\n        </Flex>\n        <Flex alignItems=\"center\" height=\"21px\" justifyContent=\"flex-end\">\n          {!Number.isNaN(priceInUsd) && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {`$${priceInUsd.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\n            </Text>\n          )}\n        </Flex>\n        {priceIsOutOfRange && (\n          <Text fontSize=\"12px\" color=\"failure\">\n            {t('Allowed price range is between %minPrice% and %maxPrice% WBNB', {\n              minPrice: MIN_PRICE,\n              maxPrice: MAX_PRICE,\n            })}\n          </Text>\n        )}\n        <Flex mt=\"8px\">\n          <Text small color=\"textSubtle\" mr=\"8px\">\n            {t('Seller pays %percentage%% platform fee on sale', {\n              percentage: creatorFeeAsNumber + tradingFeeAsNumber,\n            })}\n          </Text>\n          <span ref={targetRef}>\n            <ErrorIcon />\n          </span>\n          {tooltipVisible && tooltip}\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mt=\"16px\">\n          <Text small color=\"textSubtle\">\n            {t('Platform fee if sold')}\n          </Text>\n          <FeeAmountCell bnbAmount={priceAsFloat} creatorFee={creatorFeeAsNumber} tradingFee={tradingFeeAsNumber} />\n        </Flex>\n        {lowestPrice && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mt=\"16px\">\n            <Text small color=\"textSubtle\">\n              {t('Lowest price on market')}\n            </Text>\n            <BnbAmountCell bnbAmount={lowestPrice} />\n          </Flex>\n        )}\n      </GreyedOutContainer>\n      <Grid gridTemplateColumns=\"32px 1fr\" p=\"16px\" maxWidth=\"360px\">\n        <Flex alignSelf=\"flex-start\">\n          <ErrorIcon width={24} height={24} color=\"textSubtle\" />\n        </Flex>\n        <Box>\n          <Text small color=\"textSubtle\">\n            {t('The NFT will be removed from your wallet and put on sale at this price.')}\n          </Text>\n          <Text small color=\"textSubtle\">\n            {t('Sales are in WBNB. You can swap WBNB to BNB 1:1 for free with PancakeSwap.')}\n          </Text>\n        </Box>\n      </Grid>\n      <Divider />\n      <Flex flexDirection=\"column\" px=\"16px\" pb=\"16px\">\n        <Button\n          mb=\"8px\"\n          onClick={continueToNextStage}\n          disabled={priceIsValid || adjustedPriceIsTheSame || priceIsOutOfRange}\n        >\n          {getButtonText()}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default SetPriceStage\n","import React from 'react'\nimport { Flex, Grid, Text, Button, Link, LinkExternal, BinanceIcon } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_URL } from 'config'\nimport { nftsBaseUrl, pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getBscScanLinkForNft } from 'utils'\nimport { Divider, HorizontalDivider, RoundedImage } from '../shared/styles'\n\ninterface EditStageProps {\n  nftToSell: NftToken\n  lowestPrice: number\n  continueToAdjustPriceStage: () => void\n  continueToRemoveFromMarketStage: () => void\n}\n\n// Initial stage when user wants to edit already listed NFT (i.e. adjust price or remove from sale)\nconst EditStage: React.FC<EditStageProps> = ({\n  nftToSell,\n  lowestPrice,\n  continueToAdjustPriceStage,\n  continueToRemoveFromMarketStage,\n}) => {\n  const { t } = useTranslation()\n  const itemPageUrlId =\n    nftToSell.collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n      ? nftToSell.attributes[0].value\n      : nftToSell.tokenId\n\n  return (\n    <>\n      <Flex p=\"16px\">\n        <RoundedImage src={nftToSell.image.thumbnail} height={68} width={68} mr=\"8px\" />\n        <Grid flex=\"1\" gridTemplateColumns=\"1fr 1fr\" alignItems=\"center\">\n          <Text bold>{nftToSell.name}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n            {nftToSell.collectionName}\n          </Text>\n          {lowestPrice && (\n            <>\n              <Text small color=\"textSubtle\">\n                {t('Lowest price')}\n              </Text>\n\n              <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n                <BinanceIcon width={16} height={16} mr=\"4px\" />\n                <Text small>{lowestPrice}</Text>\n              </Flex>\n            </>\n          )}\n          <Text small color=\"textSubtle\">\n            {t('Your price')}\n          </Text>\n          <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n            <BinanceIcon width={16} height={16} mr=\"4px\" />\n            <Text small>{nftToSell.marketData.currentAskPrice}</Text>\n          </Flex>\n        </Grid>\n      </Flex>\n      <Flex justifyContent=\"space-between\" px=\"16px\" mt=\"8px\">\n        <Flex flex=\"2\">\n          <Text small color=\"textSubtle\">\n            {t('Token ID: %id%', { id: nftToSell.tokenId })}\n          </Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" flex=\"3\">\n          <Button\n            as={Link}\n            p=\"0px\"\n            height=\"16px\"\n            external\n            variant=\"text\"\n            href={`${BASE_URL}${nftsBaseUrl}/collections/${nftToSell.collectionAddress}/${itemPageUrlId}`}\n          >\n            {t('View Item')}\n          </Button>\n          <HorizontalDivider />\n          <LinkExternal\n            p=\"0px\"\n            height=\"16px\"\n            href={getBscScanLinkForNft(nftToSell.collectionAddress, nftToSell.tokenId)}\n          >\n            BscScan\n          </LinkExternal>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex flexDirection=\"column\" px=\"16px\" pb=\"16px\">\n        <Button mb=\"8px\" onClick={continueToAdjustPriceStage}>\n          {t('Adjust Sale Price')}\n        </Button>\n        <Button variant=\"danger\" onClick={continueToRemoveFromMarketStage}>\n          {t('Remove from Market')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default EditStage\n","import React from 'react'\nimport { Flex, Box, Text, Button } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Divider } from '../shared/styles'\n\ninterface RemoveStageProps {\n  continueToNextStage: () => void\n}\n\nconst RemoveStage: React.FC<RemoveStageProps> = ({ continueToNextStage }) => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Box p=\"16px\" maxWidth=\"360px\">\n        <Text fontSize=\"24px\" bold>\n          {t('Remove from Market')}\n        </Text>\n        <Text mt=\"24px\" color=\"textSubtle\">\n          {t('Removing this NFT from the marketplace will return it to your wallet.')}\n        </Text>\n        <Text mt=\"16px\" color=\"textSubtle\">\n          {t('Continue?')}\n        </Text>\n      </Box>\n      <Divider />\n      <Flex flexDirection=\"column\" px=\"16px\" pb=\"16px\">\n        <Button mb=\"8px\" onClick={continueToNextStage}>\n          {t('Confirm')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default RemoveStage\n","import React from 'react'\nimport { Flex, Grid, Text, Button, Input, BinanceIcon, ErrorIcon } from 'gol-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { NftToken } from 'state/nftMarket/types'\nimport { Divider, RoundedImage } from '../shared/styles'\nimport { GreyedOutContainer } from './styles'\n\ninterface TransferStageProps {\n  nftToSell: NftToken\n  lowestPrice: number\n  transferAddress: string\n  setTransferAddress: React.Dispatch<React.SetStateAction<string>>\n  isInvalidTransferAddress: boolean\n  continueToNextStage: () => void\n}\n\nconst TransferStage: React.FC<TransferStageProps> = ({\n  nftToSell,\n  lowestPrice,\n  transferAddress,\n  setTransferAddress,\n  isInvalidTransferAddress,\n  continueToNextStage,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const transferAddressEqualsConnectedAddress = transferAddress.toLowerCase() === account.toLowerCase()\n  const getErrorText = () => {\n    if (isInvalidTransferAddress) {\n      return t('That’s not a Binance Smart Chain wallet address.')\n    }\n    if (transferAddressEqualsConnectedAddress) {\n      return t('This address is the one that is currently connected')\n    }\n    return null\n  }\n  return (\n    <>\n      <Text fontSize=\"24px\" bold px=\"16px\" pt=\"16px\">\n        {t('Transfer to New Wallet')}\n      </Text>\n      <Flex p=\"16px\">\n        <RoundedImage src={nftToSell.image.thumbnail} height={68} width={68} mr=\"8px\" />\n        <Grid flex=\"1\" gridTemplateColumns=\"1fr 1fr\" alignItems=\"center\">\n          <Text bold>{nftToSell.name}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n            {nftToSell.collectionName}\n          </Text>\n          <Text small color=\"textSubtle\">\n            {t('Lowest price')}\n          </Text>\n          <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n            <BinanceIcon width={16} height={16} mr=\"4px\" />\n            <Text small>{lowestPrice}</Text>\n          </Flex>\n        </Grid>\n      </Flex>\n      <GreyedOutContainer>\n        <Text fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\" bold>\n          {t('Receiving address')}\n        </Text>\n        <Input\n          scale=\"sm\"\n          isWarning={isInvalidTransferAddress || transferAddressEqualsConnectedAddress}\n          placeholder={t('Paste BSC address')}\n          value={transferAddress}\n          onChange={(e) => setTransferAddress(e.target.value)}\n        />\n        {isInvalidTransferAddress ||\n          (transferAddressEqualsConnectedAddress && (\n            <Text fontSize=\"12px\" color=\"failure\" mt=\"4px\">\n              {getErrorText()}\n            </Text>\n          ))}\n      </GreyedOutContainer>\n      <Grid gridTemplateColumns=\"32px 1fr\" p=\"16px\" maxWidth=\"360px\">\n        <Flex alignSelf=\"flex-start\">\n          <ErrorIcon width={24} height={24} color=\"textSubtle\" />\n        </Flex>\n        <Text small color=\"textSubtle\">\n          {t('This action will send your wallet to the address you have indicated above. Make sure it’s the correct')}\n        </Text>\n      </Grid>\n      <Divider />\n      <Flex flexDirection=\"column\" px=\"16px\" pb=\"16px\">\n        <Button\n          mb=\"8px\"\n          onClick={continueToNextStage}\n          disabled={isInvalidTransferAddress || transferAddress.length === 0 || transferAddressEqualsConnectedAddress}\n        >\n          Confirm\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default TransferStage\n","import React, { useState } from 'react'\nimport { InjectedModalProps } from 'gol-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport useTheme from 'hooks/useTheme'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useToast from 'hooks/useToast'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useTranslation } from 'contexts/Localization'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { isAddress } from 'utils'\nimport { useContractForCollection, useNftMarketContract } from 'hooks/useContract'\nimport { useAppDispatch } from 'state'\nimport { removeUserNft, updateUserNft } from 'state/nftMarket/reducer'\nimport { NftLocation, NftToken } from 'state/nftMarket/types'\nimport { useGetLowestPriceFromNft } from 'views/Nft/market/hooks/useGetLowestPrice'\nimport SellStage from './SellStage'\nimport SetPriceStage from './SetPriceStage'\nimport EditStage from './EditStage'\nimport ApproveAndConfirmStage from '../shared/ApproveAndConfirmStage'\nimport TransactionConfirmed from '../shared/TransactionConfirmed'\nimport { StyledModal, stagesWithBackButton } from './styles'\nimport { SellingStage } from './types'\nimport ConfirmStage from '../shared/ConfirmStage'\nimport RemoveStage from './RemoveStage'\nimport TransferStage from './TransferStage'\n\nexport const modalTitles = (stage: SellingStage, t: ContextApi['t']) => {\n  switch (stage) {\n    // Sell flow\n    case SellingStage.SELL:\n      return t('Details')\n    case SellingStage.SET_PRICE:\n    case SellingStage.APPROVE_AND_CONFIRM_SELL:\n      return t('Back')\n    // Adjust price flow\n    case SellingStage.EDIT:\n      return t('Details')\n    case SellingStage.ADJUST_PRICE:\n      return t('Back')\n    case SellingStage.CONFIRM_ADJUST_PRICE:\n      return t('Confirm transaction')\n    // Remove from market flow\n    case SellingStage.REMOVE_FROM_MARKET:\n      return t('Back')\n    case SellingStage.CONFIRM_REMOVE_FROM_MARKET:\n      return t('Confirm transaction')\n    // Transfer flow\n    case SellingStage.TRANSFER:\n      return t('Back')\n    case SellingStage.CONFIRM_TRANSFER:\n      return t('Confirm transaction')\n    // Common\n    case SellingStage.TX_CONFIRMED:\n      return t('Transaction Confirmed')\n    default:\n      return ''\n  }\n}\n\nconst getToastText = (variant: string, stage: SellingStage, t: ContextApi['t']) => {\n  if (stage === SellingStage.CONFIRM_REMOVE_FROM_MARKET) {\n    return t('Your NFT has been returned to your wallet')\n  }\n  if (stage === SellingStage.CONFIRM_TRANSFER) {\n    return t('Your NFT has been transferred to another wallet')\n  }\n  if (variant === 'sell') {\n    return t('Your NFT has been listed for sale!')\n  }\n  return t('Your NFT listing has been changed.')\n}\n\ninterface SellModalProps extends InjectedModalProps {\n  variant: 'sell' | 'edit'\n  nftToSell: NftToken\n}\n\nconst SellModal: React.FC<SellModalProps> = ({ variant, nftToSell, onDismiss }) => {\n  const [stage, setStage] = useState(variant === 'sell' ? SellingStage.SELL : SellingStage.EDIT)\n  const [price, setPrice] = useState(variant === 'sell' ? '' : nftToSell.marketData.currentAskPrice)\n  const [transferAddress, setTransferAddress] = useState('')\n  const [confirmedTxHash, setConfirmedTxHash] = useState('')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { toastSuccess } = useToast()\n  const collectionContract = useContractForCollection(nftToSell.collectionAddress)\n  const nftMarketContract = useNftMarketContract()\n  const dispatch = useAppDispatch()\n\n  const isInvalidTransferAddress = transferAddress.length > 0 && !isAddress(transferAddress)\n\n  const { lowestPrice } = useGetLowestPriceFromNft(nftToSell)\n\n  const goBack = () => {\n    switch (stage) {\n      case SellingStage.SET_PRICE:\n        setStage(SellingStage.SELL)\n        break\n      case SellingStage.APPROVE_AND_CONFIRM_SELL:\n        setStage(SellingStage.SET_PRICE)\n        break\n      case SellingStage.ADJUST_PRICE:\n        setPrice(nftToSell.marketData.currentAskPrice)\n        setStage(SellingStage.EDIT)\n        break\n      case SellingStage.CONFIRM_ADJUST_PRICE:\n        setStage(SellingStage.ADJUST_PRICE)\n        break\n      case SellingStage.REMOVE_FROM_MARKET:\n        setStage(SellingStage.EDIT)\n        break\n      case SellingStage.CONFIRM_REMOVE_FROM_MARKET:\n        setStage(SellingStage.REMOVE_FROM_MARKET)\n        break\n      case SellingStage.TRANSFER:\n        setStage(SellingStage.SELL)\n        break\n      case SellingStage.CONFIRM_TRANSFER:\n        setStage(SellingStage.TRANSFER)\n        break\n      default:\n        break\n    }\n  }\n\n  const continueToNextStage = () => {\n    switch (stage) {\n      case SellingStage.SELL:\n        setStage(SellingStage.SET_PRICE)\n        break\n      case SellingStage.SET_PRICE:\n        setStage(SellingStage.APPROVE_AND_CONFIRM_SELL)\n        break\n      case SellingStage.EDIT:\n        setStage(SellingStage.ADJUST_PRICE)\n        break\n      case SellingStage.ADJUST_PRICE:\n        setStage(SellingStage.CONFIRM_ADJUST_PRICE)\n        break\n      case SellingStage.REMOVE_FROM_MARKET:\n        setStage(SellingStage.CONFIRM_REMOVE_FROM_MARKET)\n        break\n      case SellingStage.TRANSFER:\n        setStage(SellingStage.CONFIRM_TRANSFER)\n        break\n      default:\n        break\n    }\n  }\n\n  const continueToRemoveFromMarketStage = () => {\n    setStage(SellingStage.REMOVE_FROM_MARKET)\n  }\n\n  const continueToTransferStage = () => {\n    setStage(SellingStage.TRANSFER)\n  }\n\n  const dispatchSuccessAction = () => {\n    switch (stage) {\n      // Remove from sale\n      case SellingStage.CONFIRM_REMOVE_FROM_MARKET:\n        dispatch(\n          updateUserNft({\n            tokenId: nftToSell.tokenId,\n            collectionAddress: nftToSell.collectionAddress,\n            location: NftLocation.WALLET,\n          }),\n        )\n        break\n      // Transfer NFT\n      case SellingStage.CONFIRM_TRANSFER:\n        dispatch(\n          removeUserNft({\n            tokenId: nftToSell.tokenId,\n          }),\n        )\n        break\n      default:\n        // Modify listing OR list for sale\n        dispatch(\n          updateUserNft({\n            tokenId: nftToSell.tokenId,\n            collectionAddress: nftToSell.collectionAddress,\n            location: NftLocation.FORSALE,\n          }),\n        )\n        break\n    }\n  }\n\n  const { isApproving, isApproved, isConfirming, handleApprove, handleConfirm } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const approvedForContract = await collectionContract.isApprovedForAll(account, nftMarketContract.address)\n        return approvedForContract\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(collectionContract, 'setApprovalForAll', [nftMarketContract.address, true])\n    },\n    onApproveSuccess: async ({ receipt }) => {\n      toastSuccess(\n        t('Contract approved - you can now put your NFT for sale!'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n      )\n    },\n    onConfirm: () => {\n      if (stage === SellingStage.CONFIRM_REMOVE_FROM_MARKET) {\n        return callWithGasPrice(nftMarketContract, 'cancelAskOrder', [nftToSell.collectionAddress, nftToSell.tokenId])\n      }\n      if (stage === SellingStage.CONFIRM_TRANSFER) {\n        return callWithGasPrice(collectionContract, 'safeTransferFrom(address,address,uint256)', [\n          account,\n          transferAddress,\n          nftToSell.tokenId,\n        ])\n      }\n      const methodName = variant === 'sell' ? 'createAskOrder' : 'modifyAskOrder'\n      const askPrice = parseUnits(price)\n      return callWithGasPrice(nftMarketContract, methodName, [nftToSell.collectionAddress, nftToSell.tokenId, askPrice])\n    },\n    onSuccess: async ({ receipt }) => {\n      toastSuccess(getToastText(variant, stage, t), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      dispatchSuccessAction()\n      setConfirmedTxHash(receipt.transactionHash)\n      setStage(SellingStage.TX_CONFIRMED)\n    },\n  })\n\n  const showBackButton = stagesWithBackButton.includes(stage) && !isConfirming && !isApproving\n\n  return (\n    <StyledModal\n      title={modalTitles(stage, t)}\n      stage={stage}\n      onDismiss={onDismiss}\n      onBack={showBackButton ? goBack : null}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stage === SellingStage.SELL && (\n        <SellStage\n          nftToSell={nftToSell}\n          lowestPrice={lowestPrice}\n          continueToNextStage={continueToNextStage}\n          continueToTransferStage={continueToTransferStage}\n        />\n      )}\n      {stage === SellingStage.SET_PRICE && (\n        <SetPriceStage\n          nftToSell={nftToSell}\n          variant=\"set\"\n          continueToNextStage={continueToNextStage}\n          lowestPrice={lowestPrice}\n          price={price}\n          setPrice={setPrice}\n        />\n      )}\n      {stage === SellingStage.APPROVE_AND_CONFIRM_SELL && (\n        <ApproveAndConfirmStage\n          variant=\"sell\"\n          isApproved={isApproved}\n          isApproving={isApproving}\n          isConfirming={isConfirming}\n          handleApprove={handleApprove}\n          handleConfirm={handleConfirm}\n        />\n      )}\n      {stage === SellingStage.TX_CONFIRMED && <TransactionConfirmed txHash={confirmedTxHash} onDismiss={onDismiss} />}\n      {stage === SellingStage.EDIT && (\n        <EditStage\n          nftToSell={nftToSell}\n          lowestPrice={lowestPrice}\n          continueToAdjustPriceStage={continueToNextStage}\n          continueToRemoveFromMarketStage={continueToRemoveFromMarketStage}\n        />\n      )}\n      {stage === SellingStage.ADJUST_PRICE && (\n        <SetPriceStage\n          nftToSell={nftToSell}\n          variant=\"adjust\"\n          continueToNextStage={continueToNextStage}\n          currentPrice={nftToSell.marketData.currentAskPrice}\n          lowestPrice={lowestPrice}\n          price={price}\n          setPrice={setPrice}\n        />\n      )}\n      {stage === SellingStage.CONFIRM_ADJUST_PRICE && (\n        <ConfirmStage isConfirming={isConfirming} handleConfirm={handleConfirm} />\n      )}\n      {stage === SellingStage.REMOVE_FROM_MARKET && <RemoveStage continueToNextStage={continueToNextStage} />}\n      {stage === SellingStage.CONFIRM_REMOVE_FROM_MARKET && (\n        <ConfirmStage isConfirming={isConfirming} handleConfirm={handleConfirm} />\n      )}\n      {stage === SellingStage.TRANSFER && (\n        <TransferStage\n          nftToSell={nftToSell}\n          lowestPrice={lowestPrice}\n          continueToNextStage={continueToNextStage}\n          transferAddress={transferAddress}\n          setTransferAddress={setTransferAddress}\n          isInvalidTransferAddress={isInvalidTransferAddress}\n        />\n      )}\n      {stage === SellingStage.CONFIRM_TRANSFER && (\n        <ConfirmStage isConfirming={isConfirming} handleConfirm={handleConfirm} />\n      )}\n    </StyledModal>\n  )\n}\n\nexport default SellModal\n","import React from 'react'\nimport { NoProfileAvatarIcon } from 'gol-uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatarWithTeam: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={profile.nft?.image.thumbnail}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatarWithTeam\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from 'gol-uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </Card>\n  )\n}\n\nexport default SelectionCard\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport { useTranslation } from 'contexts/Localization'\nimport { multicallv2 } from 'utils/multicall'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useToast from 'hooks/useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: ethers.BigNumber.from(0),\n    numberCakeToRegister: ethers.BigNumber.from(0),\n    numberCakeToUpdate: ethers.BigNumber.from(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\n          address: getPancakeProfileAddress(),\n          name: method,\n        }))\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2<\n          [[ethers.BigNumber], [ethers.BigNumber], [ethers.BigNumber]]\n        >(profileABI, calls)\n\n        setCosts({\n          numberCakeToReactivate,\n          numberCakeToRegister,\n          numberCakeToUpdate,\n        })\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve GOL costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from 'gol-uikit'\nimport { formatBigNumber } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Nft/market/Profile/hooks/useGetProfileCosts'\nimport { useProfile } from 'state/profile/hooks'\nimport ProfileAvatarWithTeam from 'components/ProfileAvatarWithTeam'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(minimumCakeRequired)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required GOL allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.allowance(account, getPancakeProfileAddress())\n      setNeedsApproval(response.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatarWithTeam profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            t('%minimum% GOL required to change profile pic', { minimum: formatBigNumber(minimumCakeRequired) })}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Nft/market/Profile/hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/profile/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { formatBigNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = async () => {\n    const tx = await callWithGasPrice(pancakeProfileContract, 'pauseProfile')\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess(t('Profile Paused!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      onDismiss()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsConfirming(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Cost to reactivate in the future: %cost% GOL', { cost: formatBigNumber(numberCakeToReactivate) })}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, Box, InjectedModalProps, Text } from 'gol-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\nimport SelectionCard from 'views/ProfileCreation/SelectionCard'\nimport { useUserNfts } from 'state/nftMarket/hooks'\nimport { NftLocation } from 'state/nftMarket/types'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    collectionAddress: null,\n  })\n  const { t } = useTranslation()\n  const { nfts } = useUserNfts()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const nftsInWallet = nfts.filter((nft) => nft.location === NftLocation.WALLET)\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\n        return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return callWithGasPrice(profileContract, 'reactivateProfile', [\n            selectedNft.collectionAddress,\n            selectedNft.tokenId,\n          ])\n        }\n\n        return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.collectionAddress, selectedNft.tokenId])\n      },\n      onSuccess: async ({ receipt }) => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      <Box maxHeight=\"300px\" overflowY=\"scroll\">\n        {nftsInWallet.map((walletNft) => {\n          const handleChange = (tokenId: string) => {\n            setSelectedNft({\n              tokenId,\n              collectionAddress: walletNft.collectionAddress,\n            })\n          }\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.tokenId}\n              value={selectedNft.tokenId}\n              image={walletNft.image.thumbnail}\n              isChecked={walletNft.tokenId === selectedNft.tokenId}\n              onChange={() => handleChange(walletNft.tokenId)}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })}\n      </Box>\n      {nfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button mt=\"8px\" variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useProfile } from 'state/profile/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { formatBigNumber } from 'utils/formatBalance'\nimport useGetProfileCosts from 'views/Nft/market/Profile/hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.mul(2).toString())\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      goToChange()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{formatBigNumber(cost)} GOL</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Enable')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: 'Edit Profile',\n  [Views.CHANGE]: 'Change Profile Pic',\n  [Views.REMOVE]: 'Remove Profile Pic',\n  [Views.APPROVE]: 'Enable GOL',\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n  const translationKey = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import styled from 'styled-components'\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`\n\nexport const Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n"],"sourceRoot":""}