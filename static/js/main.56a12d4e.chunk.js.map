{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/mint/actions.ts","components/Layout/Row.tsx","state/swap/actions.ts","utils/bigNumber.ts","config/constants/tokens.ts","utils/formatBalance.ts","config/constants/contracts.ts","utils/addressHelpers.ts","components/Layout/Column.tsx","utils/index.ts","state/types.ts","config/constants/index.ts","utils/contractHelpers.ts","state/user/actions.ts","hooks/useContract.ts","components/Balance.tsx","state/user/hooks/index.tsx","utils/multicall.ts","utils/wrappedCurrency.ts","config/constants/endpoints.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/user/hooks/helpers.ts","state/multicall/hooks.ts","config/index.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/nftMarket/helpers.ts","state/nftMarket/queries.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","state/nftMarket/types.ts","hooks/useTheme.ts","config/constants/types.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","state/farms/hooks.ts","components/ConnectWalletButton.tsx","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/block/hooks.ts","state/transactions/actions.ts","state/wallet/hooks.ts","state/transactions/hooks.tsx","hooks/usePairs.ts","state/predictions/config.ts","state/info/actions.ts","config/constants/nftsCollections/types.ts","config/constants/nftsCollections/index.ts","views/Nft/market/constants.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","state/profile/index.tsx","hooks/useRefresh.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","state/lottery/helpers.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/truncateHash.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","hooks/usePreviousValue.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Loader/CircleLoader.tsx","components/Tags.tsx","utils/web3React.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","state/profile/helpers.ts","config/constants/campaigns.ts","components/SearchModal/filtering.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","state/profile/hooks.ts","components/Layout/Container.tsx","hooks/useLastUpdated.ts","components/TokenImage/index.tsx","components/Menu/Footer.tsx","views/Page.tsx","routerHistory.ts","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","state/achievements/helpers.ts","state/lottery/getUserLotteryData.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/nftMarket/reducer.ts","hooks/useBUSDPrice.ts","components/Loader/PageLoader.tsx","components/PageHeader/PageHeader.tsx","state/lottery/index.ts","utils/getTimePeriods.ts","components/Select/Select.tsx","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","state/achievements/index.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","components/Loading.tsx","utils/farmHelpers.ts","utils/apr.ts","hooks/useIntersectionObserver.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","hooks/useUserAgent.ts","hooks/useScrollOnRouteChange.ts","style/Global.tsx","components/Menu/config/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/utils.ts","components/Menu/config/footerConfig.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/GlobalCheckClaimStatus/AnniversaryAchievementModal.tsx","components/GlobalCheckClaimStatus/index.tsx","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setProvider","current","parseInt","process","Field","typeInput","createAction","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","MAINNET","ChainId","TESTNET","mainnetTokens","wbnb","Token","bnb","gol","milk","bflux","cake","tlos","nft","stephero","pros","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","testnetTokens","golv2","tokens","reduce","accum","serializeTokens","unserializedTokens","serializeToken","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","getAddress","address","getMasterChefAddress","addresses","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","getNftSaleAddress","getPancakeSquadAddress","Column","ColumnCenter","AutoColumn","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","getBscScanLinkForNft","collectionAddress","tokenId","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","ProfileAvatarFetchStatus","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","golAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","getAnniversaryAchievementContract","anniversaryAchievementAbi","getNftMarketContract","nftMarketAbi","getNftSaleContract","nftSaleAbi","getPancakeSquadContract","pancakeSquadAbi","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useTradingCompetitionContract","useCakeVaultContract","usePredictionsContract","useAnniversaryAchievementContract","useNftSaleContract","useFarmAuctionContract","useNftMarketContract","useContractForCollection","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","useWatchlistTokens","watchlistTokens","useWatchlistPools","watchlistPools","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","GRAPH_API_PROFILE","REACT_APP_GRAPH_API_PROFILE","GRAPH_API_PREDICTION","REACT_APP_GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","REACT_APP_GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","REACT_APP_SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","REACT_APP_SNAPSHOT_BASE_URL","API_PROFILE","API_NFT","REACT_APP_API_NFT","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","INFO_CLIENT","BLOCKS_CLIENT","GRAPH_API_NFTMARKET","REACT_APP_GRAPH_API_NFT_MARKET","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","hash","block","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getBetHistory","where","first","skip","request","gql","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","GAS_PRICE","projectLink","default","parseUnits","fast","instant","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","results","inputs","callData","useBlock","useMultipleContractSingleData","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","IPFS_GATEWAY","PANCAKE_BUNNIES_UPDATE_FREQUENCY","protocol","overview","chartData","transactions","pools","byAddress","createReducer","builder","addCase","updateProtocolData","protocolData","payload","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","TABLE","userUsernameVisibility","lastUpdateVersionTimestamp","action","tokenAAddress","tokenBAddress","tokenWatchlist","newTokens","poolsWatchlist","newPools","now","addTransaction","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","voting","votingReducer","lottery","lotteryReducer","info","infoReducer","nftMarket","nftMarketReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","getCollectionsApi","fetch","ok","json","statusText","getCollectionApi","getNftsFromCollectionApi","page","isPBCollection","pancakeBunniesAddress","requestPath","getNftApi","getNftsFromDifferentCollectionsApi","promises","Promise","all","responses","resp","collectionName","collection","description","attributes","image","original","thumbnail","getCollectionSg","getCollectionsSg","collections","getNftsFromCollectionSg","nfts","getNftsByBunnyIdSg","bunnyId","existingTokenIds","orderDirection","otherId","isTradable","tokenId_not_in","getMarketDataForTokenIds","tokenId_in","getNftsMarketData","getAllPancakeBunniesLowestPrice","bunnyIds","singlePancakeBunnySubQueries","rawResponse","lowestPricesData","subQueryKey","currentAskPrice","getAllPancakeBunniesRecentUpdatedAt","updatedAtData","getLowestPriceInCollection","nftSg","getUserActivity","askOrderHistory","buyTradeHistory","sellTradeHistory","getLatestListedNfts","getMetadataWithFallback","apiMetadata","getPancakeBunniesAttributesField","traitType","displayType","combineApiAndSgResponseToNftToken","marketData","fetchWalletTokenIdsForCollections","walletNftPromises","balanceOf","balanceOfResponse","getTokenId","tokenOfOwnerByIndex","tokenIdBn","tokenIdPromises","tokenIds","nftLocation","NftLocation","WALLET","tokensWithCollectionAddress","walletNfts","flat","combineCollectionData","collectionApiData","collectionSgData","collectionsMarketObj","prev","collectionMarket","attachMarketDataToWalletNfts","marketDataForWalletNfts","walletNft","marketNft","metadataUrl","transactionHistory","currentSeller","latestTradedPriceInBNB","tradeVolumeBNB","totalTrades","combineNftMarketAndMetadata","nftsWithMetadata","nftsForSale","tokenIdsInWallet","tokenIdsForSale","profileNftId","forSaleNft","location","PROFILE","FORSALE","getNftLocationForMarketNft","getCompleteAccountNftData","profileNftWithCollectionAddress","walletNftIds","walletNftsWithMarketData","marketDataForSaleNfts","forSaleNftIds","metadataForAllNfts","completeNftData","getCollectionDistributionApi","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingGol","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","isLoading","lastDepositedTime","lastUserActionTime","golAtLastUserAction","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","createAsyncThunk","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","multiplyPriceByAmount","price","significantDigits","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","NFTMarketInitializationState","UserNftInitializationState","AskOrderType","useTheme","theme","StyledThemeContext","PoolIds","LotteryStatus","AuctionStatus","serializedTokens","CORE","harvest","sortOrder","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","deserializedFarmsData","loadArchivedFarmsData","useFarmFromPid","f","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","usePriceCakeBusd","cakePriceBusdAsString","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","ttl","timer","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","usePollBlockNumber","refreshTime","isWindowVisible","useIsWindowVisible","setInterval","getBlockNumber","setBlock","clearInterval","useInitialBlock","initialBlock","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","useAllTransactions","isTransactionRecent","allTransactions","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","CollectionKey","PANCAKE","slug","SQUAD","nftsBaseUrl","TMP_SEE_ALL_LINK","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","isInitialized","hasRegistered","profileAvatars","fetchProfileAvatar","getProfileAvatar","fetchProfileUsername","username","getUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","points","meta","arg","usernameFetchStatus","FETCHING","avatarFetchStatus","FETCHED","NOT_FETCHED","fetchProfile","getProfile","RefreshContext","slow","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","FAILED","fetchStatus","balanceState","setBalanceState","fetchBalance","useTotalSupply","totalSupply","setTotalSupply","golContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","useGetBnbBalance","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","refresh","useGetCakeBalance","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","getTokenLogoURL","StyledLogo","uriLocations","isZero","hexNumberString","getItem","startLength","endLength","substring","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","useDebounce","delay","debouncedValue","setDebouncedValue","handler","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenAdded","uriToHttp","uri","substr","usePreviousValue","teamsList","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","teamId","getTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","DEFAULT_META","StyledPage","Container","lg","PageMeta","pathname","cakePriceUsd","useCakeBusdPrice","cakePriceUsdDisplay","pageMeta","startsWith","getCustomMeta","pageTitle","join","property","Page","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","deposit","wait","unstakeFarm","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","StyledSVG","svg","stroke","CircleLoader","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","TransactionState","IconWrapper","failure","Transaction","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","GlobalSettings","BodyWrapper","AppBody","blockSlice","REACT_APP_NODE_ALT","sample","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","inputRegex","Input","React","nextUserInput","target","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","val","transformProfileResponse","profileResponse","userId","numberPoints","profileContract","getUserProfile","apiRes","nftToken","Cookies","avatar","domain","secure","expires","campaigns","badge","campaignMap","campaign","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubstrings","trim","Dots","span","images","md","ipfs","textColor","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","useFetchProfile","useProfileForAddress","profileState","setProfileState","hasAddressChanged","fetchProfileForAddress","useAchievementsForAddress","getAchievements","hasProfile","useGetProfileAvatar","maxWidth","setStateLastUpdated","previousLastUpdated","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","BubbleWrapper","flexGrow","xs","history","createBrowserHistory","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","getUserPointIncreaseEvents","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","userSelect","maxAmountSpend","greaterThan","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","setSingleHopOnly","pb","borderTop","TransactionSettings","onPresentSettingsModal","ens","resolvedContentHash","useENSContentHash","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","selectedAddress","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","setSelectedAddress","IDLE","newestRound","maxBy","futureRound","futureRounds","currentRound","initializationState","UNINITIALIZED","isUpdatingPancakeBunnies","latestPancakeBunniesUpdateAt","userNftsInitializationState","activity","fetchCollections","collectionsMarket","fetchCollection","fetchNftsFromCollections","nftsMarket","fetchNewPBAndUpdateExisting","existingTokensWithBunnyId","allExistingPBTokenIds","existingMetadata","updatedNfts","updatedNftsMarket","updatedTokens","newNfts","moreTokensWithRequestedBunnyId","fetchUserNfts","updateUserNft","marketDataForNft","metadataForNft","removeUserNft","addUserNft","fetchUserActivity","userActivity","NftMarket","INITIALIZED","existingNfts","ERROR","INITIALIZING","userNftsState","nftToUpdate","indexInState","copyOfState","nftToRemove","BUSD_MAINNET","WBNB","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","ethBusdPrice","currencyEthPrice","busdPrice","useBNBBusdPrice","PageLoader","Outer","Inner","PageHeader","isTransitioning","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","Loading","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","NaN","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","rootMargin","threshold","observe","disconnect","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useUserAgent","documentElement","setAttribute","navigator","userAgent","useScrollOnRouteChange","unlisten","listen","scroll","left","behavior","GlobalStyle","createGlobalStyle","icon","showItemsOnMobile","hideSubNav","DropdownMenuItemType","EXTERNAL_LINK","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","cakeFetchStatus","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","getActiveSubMenuItem","menuItem","activeSubMenuItems","subMenuItem","subMenuItem1","subMenuItem2","footerLinks","Menu","activeMenuItem","menuConfig","getActiveMenuItem","activeSubMenuItem","userMenu","globalMenu","currentLang","langs","setLang","links","subLinks","activeItem","activeSubItem","buyCakeLabel","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","AnniversaryImage","img","showConfetti","confetti","particleCount","startVelocity","gravity","spread","origin","y","AnniversaryAchievementModal","setIsLoading","claimAnniversaryPoints","handleClick","endIcon","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","canClaimAnniversaryPoints","setCanClaimAnniversaryPoints","onPresentAnniversaryModal","canClaim","canClaimAnniversary","fetchClaimAnniversaryStatus","matchesSomeLocations","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","useFetchUserPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","word","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Teams","Team","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Info","ProfileCreation","PancakeSquad","Global","exact","strict","iterations","ThemeProviderWrapper","dark","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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,IAAK,IAAId,QACPL,EACA,6CACA,GACA,MACA,iBACA,6BAEFoB,KAAM,IAAIf,QACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFqB,KAAM,IAAIhB,QACRL,EACA,6CACA,GACA,OACA,cACA,wBAEFsB,IAAK,IAAIjB,QACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEFuB,IAAK,IAAIlB,QACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFwB,KAAM,IAAInB,QACRL,EACA,6CACA,GACA,OACA,uBACA,8BAEFyB,KAAM,IAAIpB,QACRL,EACA,6CACA,GACA,OACA,eACA,sBAEF0B,SAAU,IAAIrB,QACZL,EACA,6CACA,GACA,WACA,iBACA,6BAEF2B,KAAM,IAAItB,QACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF4B,MAAO,IAAIvB,QACTL,EACA,6CACA,GACA,QACA,mBACA,2BAEF6B,IAAK,IAAIxB,QACPL,EACA,6CACA,GACA,MACA,cACA,yBAEF8B,MAAO,IAAIzB,QACTL,EACA,6CACA,GACA,QACA,gBACA,4BAEF+B,OAAQ,IAAI1B,QACVL,EACA,6CACA,GACA,SACA,eACA,8BAEFgC,IAAK,IAAI3B,QACPL,EACA,6CACA,GACA,MACA,cACA,2BAEFiC,MAAO,IAAI5B,QACTL,EACA,6CACA,EACA,QACA,cACA,wBAEFkC,MAAO,IAAI7B,QACTL,EACA,6CACA,EACA,QACA,cACA,0BAEFmC,MAAO,IAAI9B,QACTL,EACA,6CACA,GACA,QACA,iBACA,gCAEFoC,IAAK,IAAI/B,QACPL,EACA,6CACA,GACA,MACA,cACA,yBAEFqC,SAAU,IAAIhC,QACZL,EACA,6CACA,GACA,WACA,kBACA,yBAEFsC,KAAM,IAAIjC,QACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFuC,KAAM,IAAIlC,QACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFwC,IAAK,IAAInC,QACPL,EACA,6CACA,GACA,MACA,0BACA,mBAEFyC,KAAM,IAAIpC,QACRL,EACA,6CACA,GACA,OACA,oBACA,oCAEF0C,KAAM,IAAIrC,QACRL,EACA,6CACA,GACA,OACA,aACA,+BAEF2C,MAAO,IAAItC,QACTL,EACA,6CACA,GACA,QACA,qBACA,gCAEF4C,GAAI,IAAIvC,QACNL,EACA,6CACA,GACA,KACA,2BACA,+BAEF6C,IAAK,IAAIxC,QACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEF8C,MAAO,IAAIzC,QACTL,EACA,6CACA,GACA,QACA,cACA,0BAEF+C,MAAO,IAAI1C,QACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEFgD,QAAS,IAAI3C,QACXL,EACA,6CACA,GACA,MACA,oBACA,4BAEFiD,KAAM,IAAI5C,QAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGkD,IAAK,IAAI7C,QACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFmD,IAAK,IAAI9C,QACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEFoD,OAAQ,IAAI/C,QACVL,EACA,6CACA,GACA,SACA,eACA,uBAEFqD,OAAQ,IAAIhD,QACVL,EACA,6CACA,GACA,SACA,uBACA,iCAEFsD,KAAM,IAAIjD,QACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFuD,IAAK,IAAIlD,QAAML,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/FwD,KAAM,IAAInD,QACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFyD,IAAK,IAAIpD,QACPL,EACA,6CACA,GACA,MACA,kBACA,6BAEF0D,MAAO,IAAIrD,QACTL,EACA,6CACA,GACA,QACA,qBACA,iCAEF2D,MAAO,IAAItD,QACTL,EACA,6CACA,EACA,QACA,0BACA,oCAEF4D,IAAK,IAAIvD,QACPL,EACA,6CACA,GACA,MACA,gBACA,6BAEF6D,IAAK,IAAIxD,QACPL,EACA,6CACA,GACA,MACA,mBACA,kCAEF8D,KAAM,IAAIzD,QACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF+D,KAAM,IAAI1D,QACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFgE,IAAK,IAAI3D,QACPL,EACA,6CACA,GACA,MACA,iBACA,qBAEFiE,KAAM,IAAI5D,QACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFkE,IAAK,IAAI7D,QACPL,EACA,6CACA,GACA,MACA,uBACA,qBAEFmE,IAAK,IAAI9D,QACPL,EACA,6CACA,EACA,MACA,oBACA,gCAEFoE,MAAO,IAAI/D,QACTL,EACA,6CACA,EACA,QACA,2BACA,sCAEFqE,KAAM,IAAIhE,QACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFsE,KAAM,IAAIjE,QACRL,EACA,6CACA,GACA,OACA,kCACA,qBAEFuE,IAAK,IAAIlE,QACPL,EACA,6CACA,GACA,MACA,kBACA,8BAEFwE,MAAO,IAAInE,QACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFyE,KAAM,IAAIpE,QACRL,EACA,6CACA,GACA,OACA,aACA,sBAEF0E,QAAS,IAAIrE,QACXL,EACA,6CACA,GACA,UACA,wBACA,4BAEF2E,IAAK,IAAItE,QACPL,EACA,6CACA,GACA,MACA,iBACA,wBAEF4E,KAAM,IAAIvE,QACRL,EACA,6CACA,GACA,OACA,aACA,0BAEF6E,IAAK,IAAIxE,QACPL,EACA,6CACA,GACA,MACA,YACA,0BAEF8E,IAAK,IAAIzE,QACPL,EACA,6CACA,GACA,MACA,gBACA,2BAEF+E,KAAM,IAAI1E,QACRL,EACA,6CACA,GACA,OACA,uBACA,2BAEFgF,IAAK,IAAI3E,QACPL,EACA,6CACA,GACA,MACA,iBACA,6BAEFiF,KAAM,IAAI5E,QACRL,EACA,6CACA,EACA,OACA,eACA,2BAEFkF,IAAK,IAAI7E,QACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFmF,KAAM,IAAI9E,QACRL,EACA,6CACA,GACA,OACA,eACA,uBAEFoF,MAAO,IAAI/E,QACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFqF,MAAO,IAAIhF,QACTL,EACA,6CACA,GACA,QACA,4BACA,uBAEFsF,KAAM,IAAIjF,QACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFuF,MAAO,IAAIlF,QACTL,EACA,6CACA,GACA,QACA,sBACA,6BAEFwF,IAAK,IAAInF,QACPL,EACA,6CACA,EACA,MACA,gBACA,0BAEFyF,IAAK,IAAIpF,QACPL,EACA,6CACA,EACA,MACA,yBACA,0BAEF0F,GAAI,IAAIrF,QACNL,EACA,6CACA,EACA,KACA,gBACA,0BAEF2F,KAAM,IAAItF,QACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF4F,IAAK,IAAIvF,QACPL,EACA,6CACA,EACA,MACA,iBACA,0BAEF6F,IAAK,IAAIxF,QACPL,EACA,6CACA,EACA,MACA,4BACA,0BAEF8F,IAAK,IAAIzF,QACPL,EACA,6CACA,GACA,MACA,iBACA,8CAEF+F,KAAM,IAAI1F,QACRL,EACA,6CACA,GACA,OACA,aACA,6BAEFgG,IAAK,IAAI3F,QACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEFiG,KAAM,IAAI5F,QACRL,EACA,6CACA,EACA,OACA,aACA,wBAEFkG,QAAS,IAAI7F,QACXL,EACA,6CACA,GACA,UACA,eACA,sBAEFmG,KAAM,IAAI9F,QACRL,EACA,6CACA,GACA,OACA,gBACA,4BAEFoG,IAAK,IAAI/F,QACPL,EACA,6CACA,GACA,MACA,oBACA,4BAEFqG,IAAK,IAAIhG,QACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFsG,IAAK,IAAIjG,QACPL,EACA,6CACA,EACA,MACA,eACA,kCAEFuG,IAAK,IAAIlG,QACPL,EACA,6CACA,GACA,MACA,2BACA,kCAEFwG,IAAK,IAAInG,QAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGyG,MAAO,IAAIpG,QACTL,EACA,6CACA,GACA,QACA,sBACA,4BAEF0G,IAAK,IAAIrG,QAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChG2G,MAAO,IAAItG,QACTL,EACA,6CACA,GACA,QACA,yBACA,sBAEF4G,KAAM,IAAIvG,QACRL,EACA,6CACA,GACA,OACA,yBACA,6BAEF6G,KAAM,IAAIxG,QACRL,EACA,6CACA,GACA,OACA,sBACA,0BAEF8G,KAAM,IAAIzG,QACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF+G,KAAM,IAAI1G,QACRL,EACA,6CACA,GACA,OACA,qBACA,8CAEFgH,MAAO,IAAI3G,QACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFiH,OAAQ,IAAI5G,QACVL,EACA,6CACA,GACA,SACA,6BACA,2BAEFkH,MAAO,IAAI7G,QACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFmH,MAAO,IAAI9G,QACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFoH,IAAK,IAAI/G,QACPL,EACA,6CACA,GACA,MACA,6BACA,yBAEFqH,IAAK,IAAIhH,QACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFsH,KAAM,IAAIjH,QACRL,EACA,6CACA,GACA,OACA,kCACA,6BAEFuH,IAAK,IAAIlH,QACPL,EACA,6CACA,GACA,MACA,6BACA,6BAEFwH,IAAK,IAAInH,QACPL,EACA,6CACA,GACA,MACA,wBACA,mBAEFyH,KAAM,IAAIpH,QACRL,EACA,6CACA,GACA,OACA,8BACA,uBAEF0H,IAAK,IAAIrH,QACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEF2H,KAAM,IAAItH,QACRL,EACA,6CACA,GACA,OACA,2BACA,2BAEF4H,KAAM,IAAIvH,QACRL,EACA,6CACA,GACA,OACA,iCACA,wBAEF6H,IAAK,IAAIxH,QACPL,EACA,6CACA,GACA,MACA,0BACA,0BAEF8H,IAAK,IAAIzH,QACPL,EACA,6CACA,GACA,MACA,iCACA,qBAEF+H,IAAK,IAAI1H,QACPL,EACA,6CACA,GACA,MACA,kCACA,0BAEFgI,IAAK,IAAI3H,QACPL,EACA,6CACA,GACA,MACA,4BACA,wBAEFiI,IAAK,IAAI5H,QACPL,EACA,6CACA,GACA,MACA,6BACA,wBAEFkI,KAAM,IAAI7H,QACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFmI,OAAQ,IAAI9H,QACVL,EACA,6CACA,GACA,SACA,mBACA,2BAEFoI,MAAO,IAAI/H,QACTL,EACA,6CACA,GACA,QACA,yBACA,2BAEFqI,QAAS,IAAIhI,QACXL,EACA,6CACA,GACA,UACA,2BACA,2BAEFsI,MAAO,IAAIjI,QACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFuI,IAAK,IAAIlI,QACPL,EACA,6CACA,GACA,MACA,iBACA,uBAEFwI,IAAK,IAAInI,QACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFyI,KAAM,IAAIpI,QACRL,EACA,6CACA,GACA,OACA,oBACA,uBAEF0I,IAAK,IAAIrI,QACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEF2I,KAAM,IAAItI,QACRL,EACA,6CACA,GACA,OACA,mBACA,kCAEF4I,IAAK,IAAIvI,QACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEF6I,KAAM,IAAIxI,QACRL,EACA,6CACA,EACA,OACA,qBACA,yBAEF8I,KAAM,IAAIzI,QACRL,EACA,6CACA,EACA,OACA,yBACA,6BAEF+I,IAAK,IAAI1I,QACPL,EACA,6CACA,GACA,MACA,gBACA,gCAEFgJ,IAAK,IAAI3I,QACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEFiJ,KAAM,IAAI5I,QACRL,EACA,6CACA,GACA,OACA,qBACA,iCAEFkJ,IAAK,IAAI7I,QACPL,EACA,6CACA,GACA,MACA,sBACA,qBAEFmJ,KAAM,IAAI9I,QACRL,EACA,6CACA,GACA,OACA,aACA,2BAEFoJ,KAAM,IAAI/I,QAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGqJ,IAAK,IAAIhJ,QAAML,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FsJ,KAAM,IAAIjJ,QACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFuJ,OAAQ,IAAIlJ,QACVL,EACA,6CACA,GACA,SACA,eACA,+BAEFwJ,IAAK,IAAInJ,QACPL,EACA,6CACA,GACA,MACA,mBACA,+BAEFyJ,KAAM,IAAIpJ,QACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF0J,KAAM,IAAIrJ,QACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEF2J,IAAK,IAAItJ,QACPL,EACA,6CACA,GACA,MACA,yBACA,6BAEF4J,IAAK,IAAIvJ,QACPL,EACA,6CACA,GACA,MACA,wBACA,wBAEF6J,IAAK,IAAIxJ,QACPL,EACA,6CACA,EACA,MACA,6BACA,2BAEF8J,KAAM,IAAIzJ,QACRL,EACA,6CACA,GACA,OACA,SACA,4BAEF+J,KAAM,IAAI1J,QACRL,EACA,6CACA,GACA,OACA,YACA,4BAEFgK,IAAK,IAAI3J,QACPL,EACA,6CACA,GACA,MACA,yBACA,gCAEFiK,MAAO,IAAI5J,QACTL,EACA,6CACA,GACA,QACA,iBACA,+BAEFkK,IAAK,IAAI7J,QACPL,EACA,6CACA,GACA,MACA,oBACA,8BAEFmK,IAAK,IAAI9J,QACPL,EACA,6CACA,GACA,MACA,YACA,oCAEFoK,MAAO,IAAI/J,QACTL,EACA,6CACA,GACA,QACA,cACA,0BAEFqK,IAAK,IAAIhK,QACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEFsK,YAAM,IAAIjK,QACRL,EACA,6CACA,EACA,YACA,sBACA,8BAEFuK,OAAQ,IAAIlK,QACVL,EACA,6CACA,GACA,SACA,cACA,kCAEFwK,IAAK,IAAInK,QACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFyK,IAAK,IAAIpK,QACPL,EACA,6CACA,GACA,MACA,qBACA,yBAEF0K,IAAK,IAAIrK,QACPL,EACA,6CACA,GACA,MACA,+BACA,+BAEF2K,IAAK,IAAItK,QACPL,EACA,6CACA,GACA,MACA,aACA,yBAEF4K,IAAK,IAAIvK,QACPL,EACA,6CACA,GACA,MACA,YACA,yBAEF6K,MAAO,IAAIxK,QACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF8K,KAAM,IAAIzK,QACRL,EACA,6CACA,GACA,OACA,aACA,2BAEF+K,IAAK,IAAI1K,QACPL,EACA,6CACA,GACA,MACA,wBACA,0BAEFgL,IAAK,IAAI3K,QACPL,EACA,6CACA,GACA,MACA,gCACA,0BAEFiL,KAAM,IAAI5K,QACRL,EACA,6CACA,GACA,OACA,aACA,uBAEFkL,IAAK,IAAI7K,QACPL,EACA,6CACA,EACA,MACA,mBACA,wBAEFmL,KAAM,IAAI9K,QACRL,EACA,6CACA,EACA,OACA,uBACA,yBAEFoL,KAAM,IAAI/K,QACRL,EACA,6CACA,GACA,OACA,kBACA,0BAEFqL,IAAK,IAAIhL,QACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFsL,KAAM,IAAIjL,QACRL,EACA,6CACA,GACA,OACA,iBACA,yBAEFuL,aAAO,IAAIlL,QACTL,EACA,6CACA,EACA,aACA,iBACA,8BAEFwL,IAAK,IAAInL,QACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFyL,KAAM,IAAIpL,QACRL,EACA,6CACA,GACA,OACA,eACA,uBAEF0L,MAAO,IAAIrL,QACTL,EACA,6CACA,EACA,QACA,qBACA,2BAEF2L,KAAM,IAAItL,QACRL,EACA,6CACA,GACA,OACA,aACA,8BAEF4L,KAAM,IAAIvL,QACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF6L,IAAK,IAAIxL,QAAML,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9F8L,IAAK,IAAIzL,QACPL,EACA,6CACA,EACA,MACA,eACA,wBAEF+L,KAAM,IAAI1L,QACRL,EACA,6CACA,GACA,OACA,aACA,gCAEFgM,KAAM,IAAI3L,QACRL,EACA,6CACA,GACA,OACA,gBACA,8BAEFiM,IAAK,IAAI5L,QACPL,EACA,6CACA,GACA,MACA,kBACA,0BAEFkM,OAAQ,IAAI7L,QACVL,EACA,6CACA,GACA,SACA,cACA,0BAEFmM,MAAO,IAAI9L,QACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFoM,GAAI,IAAI/L,QACNL,EACA,6CACA,GACA,KACA,gBACA,2BAEFqM,IAAK,IAAIhM,QACPL,EACA,6CACA,GACA,MACA,qBACA,qBAEFsM,KAAM,IAAIjM,QACRL,EACA,6CACA,GACA,OACA,4BACA,4BAEFuM,KAAM,IAAIlM,QACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFwM,IAAK,IAAInM,QACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFyM,IAAK,IAAIpM,QACPL,EACA,6CACA,GACA,MACA,mBACA,0BAEF0M,KAAM,IAAIrM,QACRL,EACA,6CACA,GACA,OACA,oBACA,mCAEF2M,GAAI,IAAItM,QAAML,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3F4M,IAAK,IAAIvM,QACPL,EACA,6CACA,GACA,MACA,iBACA,4BAEF6M,KAAM,IAAIxM,QACRL,EACA,6CACA,GACA,OACA,cACA,2BAEF8M,OAAQ,IAAIzM,QACVL,EACA,6CACA,GACA,SACA,kBACA,8BAEF+M,MAAO,IAAI1M,QACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEFgN,KAAM,IAAI3M,QACRL,EACA,6CACA,EACA,OACA,aACA,+BAEFiN,GAAI,IAAI5M,QACNL,EACA,6CACA,GACA,KACA,gBACA,uBAEFkN,IAAK,IAAI7M,QAAML,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChGmN,IAAK,IAAI9M,QACPL,EACA,6CACA,GACA,MACA,eACA,0BAEFoN,IAAK,IAAI/M,QACPL,EACA,6CACA,GACA,MACA,yBACA,wBAEFqN,IAAK,IAAIhN,QACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFsN,SAAU,IAAIjN,QACZL,EACA,6CACA,EACA,WACA,iBACA,yBAEFuN,IAAK,IAAIlN,QACPL,EACA,6CACA,GACA,MACA,qCACA,6BAEFwN,IAAK,IAAInN,QACPL,EACA,6CACA,GACA,MACA,eACA,uBAEFyN,KAAM,IAAIpN,QACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEF0N,IAAK,IAAIrN,QACPL,EACA,6CACA,GACA,MACA,mBACA,oCAEF2N,KAAM,IAAItN,QACRL,EACA,6CACA,GACA,OACA,aACA,iCAEF4N,GAAI,IAAIvN,QACNL,EACA,6CACA,GACA,KACA,kBACA,8BAEF6N,MAAO,IAAIxN,QACTL,EACA,6CACA,GACA,QACA,qBACA,yBAEF8N,KAAM,IAAIzN,QACRL,EACA,6CACA,GACA,OACA,YACA,0BAIS+N,EAAgB,CAC3B3N,KAAM,IAAIC,QACRH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Y,SACAtuD,UACAm1C,WACAp1C,oBACA2O,WACA/gB,IAAKkyE,EACL9R,QAtDoB,kBAyDf,CAAEjZ,gBAAevjB,YAzDF,yCA2DtBjmB,QAAQD,MAAR,MA3DsB,kBA4Df,MA5De,0DAAH,uD,6BCnFvB,kCASA,IAAM80D,EAAwB,CAC5B,CACEv7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,SACPwyB,MAAO,gBAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,WACPwyB,MAAO,oBAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,mBACPwyB,MAAO,eAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,OACPwyB,MAAO,gBAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,aACPwyB,MAAO,iBAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,QACPwyB,MAAO,eAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,UACPwyB,MAAO,iBAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,SACPwyB,MAAO,kBAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,QACPwyB,MAAO,eAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,QACPwyB,MAAO,iBAET,CACEx7D,GAAI,YACJhF,KAAM,MACNguC,MAAO,QACPwyB,MAAO,eAET,CACEx7D,GAAI,YACJhF,KAAM,aACNguC,MAAO,wBACPwyB,MAAO,4BAET,CACEx7D,GAAI,YACJhF,KAAM,aACNguC,MAAO,uBACPwyB,MAAO,2BAET,CACEx7D,GAAI,YACJhF,KAAM,aACNguC,MAAO,uBACPwyB,MAAO,2BAET,CACEx7D,GAAI,YACJhF,KAAM,aACNguC,MAAO,uBACPwyB,MAAO,2BAET,CACEx7D,GAAI,YACJhF,KAAM,aACNguC,MAAO,2BACPwyB,MAAO,+BAET,CACEx7D,GAAI,YACJhF,KAAM,aACNguC,MAAO,0BACPwyB,MAAO,8BAET,CACEx7D,GAAI,YACJhF,KAAM,aACNguC,MAAO,yBACPwyB,MAA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","file":"static/js/main.56a12d4e.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from 'gol-uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import styled from 'styled-components'\nimport { Box } from 'gol-uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { ChainId, Token } from 'golswap-sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  wbnb: new Token(\n    MAINNET,\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\n  \n  gol: new Token(\n    MAINNET,\n    '0x52f6A03a53840C01470f33A0b016E4C3E3DFe796',\n    18,\n    'GOL',\n    'GOLToken',\n    'https://gol.finance/',\n  \n  ),\n  \n  milk: new Token(\n    MAINNET,\n    '0xe5bd6c5b1c2df8f499847a545838c09e45f4a262',\n    18,\n    'MILK',\n    'MILK Token',\n    'https://app.cashcowprotocol.com/',\n  ),\n  \n  bflux: new Token(\n    MAINNET,\n    '0x1aB6478B47270fF05Af11A012Ac17b098758e193',\n    18,\n    'bFLUX',\n    'FLUX Token',\n    'https://flux.01.finance/',\n  ),\n\n\n\n\n  cake: new Token(\n    MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\n  nft: new Token(MAINNET, '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 6, 'NFT', 'APENFT', 'https://apenft.org'),\n  stephero: new Token(\n    MAINNET,\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\n    18,\n    'HERO',\n    'StepHero',\n    'https://stephero.io/',\n  ),\n  pros: new Token(MAINNET, '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405', 18, 'PROS', 'Prosper', 'https://prosper.so/'),\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\n  cvp: new Token(\n    MAINNET,\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\n    18,\n    'CVP',\n    'Concentrated Voting Power Token',\n    'https://powerpool.finance/',\n  ),\n  bscdefi: new Token(\n    MAINNET,\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\n    18,\n    'BSCDEFI',\n    'BSC Defi blue chips token',\n    'https://powerpool.finance/',\n  ),\n  busd: new Token(\n    MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  dai: new Token(\n    MAINNET,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  usdt: new Token(\n    MAINNET,\n    '0x55d398326f99059fF775485246999027B3197955',\n    18,\n    'USDT',\n    'Tether USD',\n    'https://tether.to/',\n  ),\n  btcb: new Token(\n    MAINNET,\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    18,\n    'BTCB',\n    'Binance BTC',\n    'https://bitcoin.org/',\n  ),\n  ust: new Token(\n    MAINNET,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  eth: new Token(\n    MAINNET,\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    18,\n    'ETH',\n    'Binance-Peg Ethereum Token',\n    'https://ethereum.org/en/',\n  ),\n  usdc: new Token(\n    MAINNET,\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  kalm: new Token(\n    MAINNET,\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n    18,\n    'KALM',\n    'Kalmar Token',\n    'https://kalmar.io/',\n  ),\n  hotcross: new Token(\n    MAINNET,\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n    18,\n    'HOTCROSS',\n    'Hotcross Token',\n    'https://www.hotcross.com/',\n  ),\n  belt: new Token(\n    MAINNET,\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n    18,\n    'BELT',\n    'Belt Token',\n    'https://beta.belt.fi/',\n  ),\n  watch: new Token(\n    MAINNET,\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    18,\n    'WATCH',\n    'Yieldwatch Token',\n    'https://yieldwatch.net/',\n  ),\n  bry: new Token(\n    MAINNET,\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n    18,\n    'BRY',\n    'Berry Token',\n    'https://berrydata.co/',\n  ),\n  wsote: new Token(\n    MAINNET,\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n    18,\n    'wSOTE',\n    'Soteria Token',\n    'https://soteria.finance/',\n  ),\n  helmet: new Token(\n    MAINNET,\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n    18,\n    'Helmet',\n    'Helmet Token',\n    'https://www.helmet.insure/',\n  ),\n  ten: new Token(\n    MAINNET,\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n    18,\n    'TEN',\n    'Tenet Token',\n    'https://www.tenet.farm/',\n  ),\n  ditto: new Token(\n    MAINNET,\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n    9,\n    'DITTO',\n    'Ditto Token',\n    'https://ditto.money/',\n  ),\n  blink: new Token(\n    MAINNET,\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n    6,\n    'BLINK',\n    'Blink Token',\n    'https://blink.wink.org',\n  ),\n  syrup: new Token(\n    MAINNET,\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  pha: new Token(\n    MAINNET,\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\n    18,\n    'PHA',\n    'Phala Token',\n    'https://phala.network',\n  ),\n  babycake: new Token(\n    MAINNET,\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    18,\n    'BABYCAKE',\n    'Baby Cake Token',\n    'https://babycake.app/',\n  ),\n  bmon: new Token(\n    MAINNET,\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    18,\n    'BMON',\n    'Binamon Token',\n    'https://binamon.org/',\n  ),\n  hero: new Token(\n    MAINNET,\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    18,\n    'HERO',\n    'Metahero Token',\n    'https://metahero.io/',\n  ),\n  wsg: new Token(\n    MAINNET,\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    18,\n    'WSG',\n    'Wall Street Games Token',\n    'https://wsg.gg/',\n  ),\n  mcrn: new Token(\n    MAINNET,\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    18,\n    'MCRN',\n    'Macaronswap Token',\n    'https://www.macaronswap.finance/',\n  ),\n  revv: new Token(\n    MAINNET,\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\n    18,\n    'REVV',\n    'REVV Token',\n    'https://revvmotorsport.com/',\n  ),\n  skill: new Token(\n    MAINNET,\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n    18,\n    'SKILL',\n    'Cryptoblades Token',\n    'https://www.cryptoblades.io/',\n  ),\n  if: new Token(\n    MAINNET,\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n    18,\n    'IF',\n    'Impossible Finance Token',\n    'https://impossible.finance/',\n  ),\n  sps: new Token(\n    MAINNET,\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n    18,\n    'SPS',\n    'Splinterlands Token',\n    'https://splinterlands.com',\n  ),\n  chess: new Token(\n    MAINNET,\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n    18,\n    'CHESS',\n    'Chess Token',\n    'https://tranchess.com/',\n  ),\n  titan: new Token(\n    MAINNET,\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n    18,\n    'TITAN',\n    'Titanswap Token',\n    'https://titanswap.org',\n  ),\n  harmony: new Token(\n    MAINNET,\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\n    18,\n    'ONE',\n    'Harmony ONE Token',\n    'https://www.harmony.one/',\n  ),\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\n  dvi: new Token(\n    MAINNET,\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    18,\n    'DVI',\n    'Dvision Network Token',\n    'https://dvision.network/',\n  ),\n  adx: new Token(\n    MAINNET,\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n    18,\n    'ADX',\n    'Adex Network Token',\n    'https://www.adex.network',\n  ),\n  bscpad: new Token(\n    MAINNET,\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    18,\n    'BSCPAD',\n    'Bscpad Token',\n    'https://bscpad.com/',\n  ),\n  rabbit: new Token(\n    MAINNET,\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    18,\n    'RABBIT',\n    'Rabbit Finance Token',\n    'https://rabbitfinance.io/earn',\n  ),\n  form: new Token(\n    MAINNET,\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n    18,\n    'FORM',\n    'Formation Token',\n    'https://formation.fi/',\n  ),\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\n  orbs: new Token(\n    MAINNET,\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n    18,\n    'ORBS',\n    'Orbs Token',\n    'https://www.orbs.com/',\n  ),\n  cos: new Token(\n    MAINNET,\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n    18,\n    'COS',\n    'Contentos Token',\n    'https://www.contentos.io/',\n  ),\n  bunny: new Token(\n    MAINNET,\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n    18,\n    'BUNNY',\n    'Pancakebunny Token',\n    'https://pancakebunny.finance/',\n  ),\n  alice: new Token(\n    MAINNET,\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n    6,\n    'ALICE',\n    'My Neighbor Alice Token',\n    'https://www.myneighboralice.com/',\n  ),\n  for: new Token(\n    MAINNET,\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\n    18,\n    'FOR',\n    'Fortube Token',\n    'https://www.for.tube/home',\n  ),\n  bux: new Token(\n    MAINNET,\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\n    18,\n    'BUX',\n    'Bux Crypto Token',\n    'https://getbux.com/bux-crypto/',\n  ),\n  nuls: new Token(\n    MAINNET,\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n    8,\n    'NULS',\n    'Nuls Token',\n    'https://www.nuls.io/',\n  ),\n  ramp: new Token(\n    MAINNET,\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n    18,\n    'RAMP',\n    'RAMP DEFI Token',\n    'https://rampdefi.com/',\n  ),\n  bfi: new Token(\n    MAINNET,\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n    18,\n    'BFI',\n    'bearn.fi Token',\n    'https://bearn.fi/',\n  ),\n  dexe: new Token(\n    MAINNET,\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n    18,\n    'DEXE',\n    'DeXe Token',\n    'https://dexe.network/',\n  ),\n  bel: new Token(\n    MAINNET,\n    '0x8443f091997f06a61670B735ED92734F5628692F',\n    18,\n    'BEL',\n    'Bella Protocol Token',\n    'https://bella.fi/',\n  ),\n  tpt: new Token(\n    MAINNET,\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\n    4,\n    'TPT',\n    'Tokenpocket Token',\n    'https://www.tokenpocket.pro/',\n  ),\n  xmark: new Token(\n    MAINNET,\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n    9,\n    'xMARK',\n    'Benchmark Protocol Token',\n    'https://benchmarkprotocol.finance/',\n  ),\n  bmxx: new Token(\n    MAINNET,\n    '0x4131b87F74415190425ccD873048C708F8005823',\n    18,\n    'bMXX',\n    'Multiplier Token',\n    'https://multiplier.finance/',\n  ),\n  iotx: new Token(\n    MAINNET,\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n    18,\n    'IOTX',\n    'Binance-Peg IoTeX Network Token',\n    'https://iotex.io/',\n  ),\n  bor: new Token(\n    MAINNET,\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n    18,\n    'BOR',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  bopen: new Token(\n    MAINNET,\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n    18,\n    'bOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  dodo: new Token(\n    MAINNET,\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n    18,\n    'DODO',\n    'Dodo Token',\n    'https://dodoex.io/',\n  ),\n  swingby: new Token(\n    MAINNET,\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n    18,\n    'SWINGBY',\n    'Swingby Network Token',\n    'https://swingby.network/',\n  ),\n  zee: new Token(\n    MAINNET,\n    '0x44754455564474A89358B2C2265883DF993b12F0',\n    18,\n    'ZEE',\n    'Zeroswap Token',\n    'https://zeroswap.io/',\n  ),\n  swgb: new Token(\n    MAINNET,\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\n    18,\n    'SWGb',\n    'SWGb Token',\n    'https://swirgepay.com/',\n  ),\n  swg: new Token(\n    MAINNET,\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    18,\n    'SWG',\n    'SWG Token',\n    'https://swirgepay.com/',\n  ),\n  sfp: new Token(\n    MAINNET,\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n    18,\n    'SFP',\n    'Safepal Token',\n    'https://www.safepal.io/',\n  ),\n  lina: new Token(\n    MAINNET,\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n    18,\n    'LINA',\n    'Linear Finance Token',\n    'https://linear.finance/',\n  ),\n  lit: new Token(\n    MAINNET,\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n    18,\n    'LIT',\n    'Litentry Token',\n    'https://www.litentry.com/',\n  ),\n  hget: new Token(\n    MAINNET,\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    6,\n    'HGET',\n    'Hedget Token',\n    'https://www.hedget.com/',\n  ),\n  bdo: new Token(\n    MAINNET,\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n    18,\n    'BDO',\n    'Bdollar Token',\n    'https://bdollar.fi/',\n  ),\n  egld: new Token(\n    MAINNET,\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n    18,\n    'EGLD',\n    'Elrond Token',\n    'https://elrond.com/',\n  ),\n  front: new Token(\n    MAINNET,\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n    18,\n    'FRONT',\n    'Frontier Token',\n    'https://frontier.xyz/',\n  ),\n  btcst: new Token(\n    MAINNET,\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n    17,\n    'BTCST',\n    'StandardBTCHashrate Token',\n    'https://www.1-b.tc/',\n  ),\n  bscx: new Token(\n    MAINNET,\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n    18,\n    'BSCX',\n    'BSCX Token',\n    'https://bscex.org/',\n  ),\n  balbt: new Token(\n    MAINNET,\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n    18,\n    'bALBT',\n    'AllianceBlock Token',\n    'https://allianceblock.io/',\n  ),\n  asr: new Token(\n    MAINNET,\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\n    2,\n    'ASR',\n    'AS Roma Token',\n    'https://www.chiliz.com',\n  ),\n  atm: new Token(\n    MAINNET,\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n    2,\n    'ATM',\n    'Athletico Madrid Token',\n    'https://www.chiliz.com',\n  ),\n  og: new Token(\n    MAINNET,\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n    2,\n    'OG',\n    'OG Nice Token',\n    'https://www.chiliz.com',\n  ),\n  reef: new Token(\n    MAINNET,\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n    18,\n    'REEF',\n    'Reef.finance Token',\n    'https://reef.finance/',\n  ),\n  juv: new Token(\n    MAINNET,\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n    2,\n    'JUV',\n    'Juventus Token',\n    'https://www.chiliz.com',\n  ),\n  psg: new Token(\n    MAINNET,\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n    2,\n    'PSG',\n    'Paris Saint-Germain Token',\n    'https://www.chiliz.com',\n  ),\n  vai: new Token(\n    MAINNET,\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n    18,\n    'VAI',\n    'VAI Stablecoin',\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n  ),\n  unfi: new Token(\n    MAINNET,\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n    18,\n    'UNFI',\n    'UNFI Token',\n    'https://unifiprotocol.com',\n  ),\n  twt: new Token(\n    MAINNET,\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n    18,\n    'TWT',\n    'Trust Wallet Token',\n    'https://trustwallet.com/',\n  ),\n  hard: new Token(\n    MAINNET,\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n    6,\n    'HARD',\n    'HARD Token',\n    'https://hard.kava.io',\n  ),\n  broobee: new Token(\n    MAINNET,\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n    18,\n    'bROOBEE',\n    'ROOBEE Token',\n    'https://roobee.io/',\n  ),\n  stax: new Token(\n    MAINNET,\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n    18,\n    'STAX',\n    'StableX Token',\n    'https://stablexswap.com/',\n  ),\n  nar: new Token(\n    MAINNET,\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\n    18,\n    'NAR',\n    'Narwhalswap Token',\n    'https://narwhalswap.org/',\n  ),\n  nya: new Token(\n    MAINNET,\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n    18,\n    'NYA',\n    'Nyanswop Token',\n    'https://nyanswop.org/',\n  ),\n  ctk: new Token(\n    MAINNET,\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n    6,\n    'CTK',\n    'Certik Token',\n    'https://www.certik.foundation/',\n  ),\n  inj: new Token(\n    MAINNET,\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n    18,\n    'INJ',\n    'Injective Protocol Token',\n    'https://injectiveprotocol.com/',\n  ),\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\n  alpha: new Token(\n    MAINNET,\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n    18,\n    'ALPHA',\n    'Alpha Finance Token',\n    'https://alphafinance.io/',\n  ),\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\n  sushi: new Token(\n    MAINNET,\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n    18,\n    'SUSHI',\n    'Binance-Peg SushiToken',\n    'https://sushi.com/',\n  ),\n  comp: new Token(\n    MAINNET,\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n    18,\n    'COMP',\n    'Compound Finance Token',\n    'https://compound.finance/',\n  ),\n  bifi: new Token(\n    MAINNET,\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    18,\n    'BIFI',\n    'Beefy Finance Token',\n    'https://beefy.finance/',\n  ),\n  dusk: new Token(\n    MAINNET,\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n    18,\n    'DUSK',\n    'Dusk Network Token',\n    'https://dusk.network/',\n  ),\n  beth: new Token(\n    MAINNET,\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n    18,\n    'BETH',\n    'Binance Beacon ETH',\n    'https://ethereum.org/en/eth2/beacon-chain/',\n  ),\n  mamzn: new Token(\n    MAINNET,\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\n    18,\n    'mAMZN',\n    'Wrapped Mirror AMZN Token',\n    'https://mirror.finance/',\n  ),\n  mgoogl: new Token(\n    MAINNET,\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n    18,\n    'mGOOGL',\n    'Wrapped Mirror GOOGL Token',\n    'https://mirror.finance/',\n  ),\n  mnflx: new Token(\n    MAINNET,\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n    18,\n    'mNFLX',\n    'Wrapped Mirror NFLX Token',\n    'https://mirror.finance/',\n  ),\n  mtsla: new Token(\n    MAINNET,\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n    18,\n    'mTSLA',\n    'Wrapped Mirror TSLA Token',\n    'https://mirror.finance/',\n  ),\n  ltc: new Token(\n    MAINNET,\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n    18,\n    'LTC',\n    'Binance-Peg Litecoin Token',\n    'https://litecoin.org/',\n  ),\n  ada: new Token(\n    MAINNET,\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n    18,\n    'ADA',\n    ' Binance-Peg Cardano Token',\n    'https://www.cardano.org/',\n  ),\n  band: new Token(\n    MAINNET,\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n    18,\n    'BAND',\n    'Binance-Peg Band Protocol Token',\n    'https://bandprotocol.com/',\n  ),\n  dot: new Token(\n    MAINNET,\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    18,\n    'DOT',\n    'Binance-Peg Polkadot Token',\n    'https://polkadot.network/',\n  ),\n  eos: new Token(\n    MAINNET,\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n    18,\n    'EOS',\n    'Binance-Peg EOS Token',\n    'https://eos.io/',\n  ),\n  link: new Token(\n    MAINNET,\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n    18,\n    'LINK',\n    'Binance-Peg Chainlink Token',\n    'https://chain.link/',\n  ),\n  xrp: new Token(\n    MAINNET,\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n    18,\n    'XRP',\n    'Binance-Peg XRP Token',\n    'https://ripple.com/xrp/',\n  ),\n  atom: new Token(\n    MAINNET,\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n    18,\n    'ATOM',\n    'Binance-Peg Cosmos Token',\n    'https://cosmos.network/',\n  ),\n  yfii: new Token(\n    MAINNET,\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n    18,\n    'YFII',\n    'Binance-Peg YFII.finance Token',\n    'https://dfi.money/#/',\n  ),\n  xtz: new Token(\n    MAINNET,\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n    18,\n    'XTZ',\n    'Binance-Peg Tezos Token',\n    'https://www.tezos.com/',\n  ),\n  bch: new Token(\n    MAINNET,\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n    18,\n    'BCH',\n    'Binance-Peg Bitcoin Cash Token',\n    'https://bch.info/',\n  ),\n  yfi: new Token(\n    MAINNET,\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n    18,\n    'YFI',\n    'Binance-Peg yearn.finance Token',\n    'https://yearn.finance/',\n  ),\n  uni: new Token(\n    MAINNET,\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    18,\n    'UNI',\n    'Binance-Peg Uniswap Token',\n    'https://uniswap.org/',\n  ),\n  fil: new Token(\n    MAINNET,\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n    18,\n    'FIL',\n    'Binance-Peg Filecoin Token',\n    'https://filecoin.io/',\n  ),\n  bake: new Token(\n    MAINNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  burger: new Token(\n    MAINNET,\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n    18,\n    'BURGER',\n    'Burgerswap Token',\n    'https://burgerswap.org/',\n  ),\n  bdigg: new Token(\n    MAINNET,\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n    18,\n    'bDIGG',\n    'Badger Sett Digg Token',\n    'https://badger.finance/',\n  ),\n  bbadger: new Token(\n    MAINNET,\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n    18,\n    'bBadger',\n    'Badger Sett Badger Token',\n    'https://badger.finance/',\n  ),\n  trade: new Token(\n    MAINNET,\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n    18,\n    'TRADE',\n    'Unitrade Token',\n    'https://unitrade.app/',\n  ),\n  pnt: new Token(\n    MAINNET,\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n    18,\n    'PNT',\n    'pNetwork Token',\n    'https://ptokens.io/',\n  ),\n  mir: new Token(\n    MAINNET,\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n    18,\n    'MIR',\n    'Mirror Protocol Token',\n    'https://mirror.finance/',\n  ),\n  pbtc: new Token(\n    MAINNET,\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n    18,\n    'pBTC',\n    'pTokens BTC Token',\n    'https://ptokens.io/',\n  ),\n  lto: new Token(\n    MAINNET,\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n    18,\n    'LTO',\n    'LTO Network Token',\n    'https://ltonetwork.com/',\n  ),\n  pcws: new Token(\n    MAINNET,\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n    18,\n    'pCWS',\n    'PolyCrowns Token',\n    'https://game.seascape.network/',\n  ),\n  zil: new Token(\n    MAINNET,\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n    12,\n    'ZIL',\n    'Zilliqa Token',\n    'https://www.zilliqa.com/',\n  ),\n  lien: new Token(\n    MAINNET,\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n    8,\n    'LIEN',\n    'Lien Finance Token',\n    'https://lien.finance/',\n  ),\n  swth: new Token(\n    MAINNET,\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n    8,\n    'SWTH',\n    'Switcheo Network Token',\n    'https://switcheo.network/',\n  ),\n  dft: new Token(\n    MAINNET,\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\n    18,\n    'DFT',\n    'Dfuture Token',\n    'https://www.dfuture.com/home',\n  ),\n  gum: new Token(\n    MAINNET,\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n    18,\n    'GUM',\n    'GourmetGalaxy Token',\n    'https://gourmetgalaxy.io/',\n  ),\n  dego: new Token(\n    MAINNET,\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n    18,\n    'DEGO',\n    'Dego Finance Token',\n    'https://bsc.dego.finance/home',\n  ),\n  nrv: new Token(\n    MAINNET,\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n    18,\n    'NRV',\n    'Nerve Finance Token',\n    'https://nerve.fi/',\n  ),\n  easy: new Token(\n    MAINNET,\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n    18,\n    'EASY',\n    'EASY Token',\n    'https://easyfi.network/',\n  ),\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\n  apys: new Token(\n    MAINNET,\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n    18,\n    'APYS',\n    'APY Swap Token',\n    'https://apyswap.com/',\n  ),\n  bondly: new Token(\n    MAINNET,\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n    18,\n    'BONDLY',\n    'Bondly Token',\n    'https://www.bondly.finance/',\n  ),\n  tko: new Token(\n    MAINNET,\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n    18,\n    'TKO',\n    'Tokocrypto Token',\n    'https://www.tokocrypto.com/',\n  ),\n  itam: new Token(\n    MAINNET,\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n    18,\n    'ITAM',\n    'Itam Network Token',\n    'https://itam.network/',\n  ),\n  arpa: new Token(\n    MAINNET,\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n    18,\n    'ARPA',\n    'Arpachain Token',\n    'https://arpachain.io/',\n  ),\n  eps: new Token(\n    MAINNET,\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\n    18,\n    'EPS',\n    'Ellipsis Finance Token',\n    'https://ellipsis.finance/',\n  ),\n  jgn: new Token(\n    MAINNET,\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n    18,\n    'JGN',\n    'Juggernaut DeFi Token',\n    'https://jgndefi.com/',\n  ),\n  tlm: new Token(\n    MAINNET,\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n    4,\n    'TLM',\n    'Alien Worlds Trilium Token',\n    'https://alienworlds.io/',\n  ),\n  perl: new Token(\n    MAINNET,\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n    18,\n    'PERL',\n    'Perlin',\n    'https://perlinx.finance/',\n  ),\n  alpa: new Token(\n    MAINNET,\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n    18,\n    'ALPA',\n    'AlpaToken',\n    'https://bsc.alpaca.city/',\n  ),\n  hzn: new Token(\n    MAINNET,\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n    18,\n    'HZN',\n    'Horizon Protocol Token',\n    'https://horizonprotocol.com/',\n  ),\n  suter: new Token(\n    MAINNET,\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n    18,\n    'SUTER',\n    'Suterusu Token',\n    'https://shield.suterusu.io/',\n  ),\n  cgg: new Token(\n    MAINNET,\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n    18,\n    'CGG',\n    'pTokens CGG Token',\n    'https://chainguardians.io/',\n  ),\n  mix: new Token(\n    MAINNET,\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n    18,\n    'MIX',\n    'Mix Token',\n    'https://mixie.chainguardians.io/',\n  ),\n  hakka: new Token(\n    MAINNET,\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n    18,\n    'HAKKA',\n    'Hakka Token',\n    'https://hakka.finance/',\n  ),\n  xed: new Token(\n    MAINNET,\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n    18,\n    'XED',\n    'Exeedme Token',\n    'https://www.exeedme.com/',\n  ),\n  τbtc: new Token(\n    MAINNET,\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n    9,\n    'τBTC',\n    'τBitcoin Token',\n    'https://www.btcst.finance/',\n  ),\n  alpaca: new Token(\n    MAINNET,\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n    18,\n    'ALPACA',\n    'AlpacaToken',\n    'https://www.alpacafinance.org/',\n  ),\n  dfd: new Token(\n    MAINNET,\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n    18,\n    'DFD',\n    'DefiDollar DAO',\n    'https://dusd.finance/',\n  ),\n  lmt: new Token(\n    MAINNET,\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n    18,\n    'LMT',\n    'Lympo Market Token',\n    'https://lympo.io/lmt/',\n  ),\n  btt: new Token(\n    MAINNET,\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n    18,\n    'BTT',\n    'Binance-Peg BitTorrent Token',\n    'https://www.bittorrent.com/',\n  ),\n  trx: new Token(\n    MAINNET,\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n    18,\n    'TRX',\n    'TRON Token',\n    'https://tron.network/',\n  ),\n  win: new Token(\n    MAINNET,\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n    18,\n    'WIN',\n    'WIN Token',\n    'https://winklink.org/',\n  ),\n  mcoin: new Token(\n    MAINNET,\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n    18,\n    'MCOIN',\n    'Wrapped Mirror COIN Token',\n    'https://mirror.finance/',\n  ),\n  math: new Token(\n    MAINNET,\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n    18,\n    'MATH',\n    'MATH Token',\n    'https://mathwallet.org/',\n  ),\n  kun: new Token(\n    MAINNET,\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n    18,\n    'KUN',\n    'QIAN governance token',\n    'https://chemix.io/home',\n  ),\n  qsd: new Token(\n    MAINNET,\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n    18,\n    'QSD',\n    'QIAN second generation dollar',\n    'https://chemix.io/home',\n  ),\n  hyfi: new Token(\n    MAINNET,\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\n    18,\n    'HYFI',\n    'HYFI Token',\n    'https://hyfi.pro/#/',\n  ),\n  oin: new Token(\n    MAINNET,\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n    8,\n    'OIN',\n    'oinfinance Token',\n    'https://oin.finance/',\n  ),\n  doge: new Token(\n    MAINNET,\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    8,\n    'DOGE',\n    'Binance-Peg Dogecoin',\n    'https://dogecoin.com/',\n  ),\n  fine: new Token(\n    MAINNET,\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\n    18,\n    'FINE',\n    'Refinable Token',\n    'https://refinable.com/',\n  ),\n  one: new Token(\n    MAINNET,\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n    18,\n    'ONE',\n    'BigONE Token',\n    'https://www.bigone.com/',\n  ),\n  pmon: new Token(\n    MAINNET,\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n    18,\n    'PMON',\n    'Polkamon Token',\n    'https://polkamon.com/',\n  ),\n  τdoge: new Token(\n    MAINNET,\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n    8,\n    'τDOGE',\n    'τDogecoin',\n    'https://www.btcst.finance/',\n  ),\n  btr: new Token(\n    MAINNET,\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n    18,\n    'BTR',\n    'Bitrue Token',\n    'https://www.bitrue.com/',\n  ),\n  ubxt: new Token(\n    MAINNET,\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    18,\n    'UBXT',\n    'UpBots Token',\n    'https://upbots.com/',\n  ),\n  wmass: new Token(\n    MAINNET,\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n    8,\n    'WMASS',\n    'Wrapped MASS Token',\n    'https://massnet.org/en/',\n  ),\n  rfox: new Token(\n    MAINNET,\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n    18,\n    'RFOX',\n    'RFOX Token',\n    'https://www.redfoxlabs.io/',\n  ),\n  xend: new Token(\n    MAINNET,\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n    18,\n    'XEND',\n    'XEND Token',\n    'https://xend.finance/',\n  ),\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\n  chr: new Token(\n    MAINNET,\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n    6,\n    'CHR',\n    'Chroma Token',\n    'https://chromia.com/',\n  ),\n  deri: new Token(\n    MAINNET,\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n    18,\n    'DERI',\n    'Deri Token',\n    'https://deri.finance/#/index',\n  ),\n  well: new Token(\n    MAINNET,\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n    18,\n    'WELL',\n    'BitWell Token',\n    'https://www.bitwellex.com/',\n  ),\n  wex: new Token(\n    MAINNET,\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n    18,\n    'WEX',\n    'WaultSwap Token',\n    'https://wault.finance/',\n  ),\n  waultx: new Token(\n    MAINNET,\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n    18,\n    'WAULTx',\n    'Wault Token',\n    'https://wault.finance/',\n  ),\n  popen: new Token(\n    MAINNET,\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n    18,\n    'pOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  ez: new Token(\n    MAINNET,\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n    18,\n    'EZ',\n    'Easy V2 Token',\n    'https://easyfi.network/',\n  ),\n  vrt: new Token(\n    MAINNET,\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\n    18,\n    'VRT',\n    'Venus Reward Token',\n    'https://venus.io/',\n  ),\n  tusd: new Token(\n    MAINNET,\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n    18,\n    'TUSD',\n    'Binance-Peg TrueUSD Token',\n    'https://www.trueusd.com/',\n  ),\n  mtrg: new Token(\n    MAINNET,\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n    18,\n    'MTRG',\n    'Wrapped MTRG Token',\n    'https://www.meter.io/',\n  ),\n  ktn: new Token(\n    MAINNET,\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n    18,\n    'KTN',\n    'Kattana Token',\n    'https://kattana.io/',\n  ),\n  qkc: new Token(\n    MAINNET,\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n    18,\n    'QKC',\n    'QuarkChain Token',\n    'https://quarkchain.io/',\n  ),\n  bcfx: new Token(\n    MAINNET,\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n    18,\n    'bCFX',\n    'BSC Conflux Token',\n    'https://www.confluxnetwork.org/',\n  ),\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\n  ata: new Token(\n    MAINNET,\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n    18,\n    'ATA',\n    'Automata Token',\n    'https://www.ata.network/',\n  ),\n  mbox: new Token(\n    MAINNET,\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n    18,\n    'MBOX',\n    'Mobox Token',\n    'https://www.mobox.io/#/',\n  ),\n  boring: new Token(\n    MAINNET,\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n    18,\n    'BORING',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  marsh: new Token(\n    MAINNET,\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n    18,\n    'MARSH',\n    'Unmarshal Token',\n    'https://unmarshal.io/',\n  ),\n  ampl: new Token(\n    MAINNET,\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n    9,\n    'AMPL',\n    'AMPL Token',\n    'https://www.ampleforth.org/',\n  ),\n  o3: new Token(\n    MAINNET,\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\n    18,\n    'O3',\n    'O3 Swap Token',\n    'https://o3swap.com/',\n  ),\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\n  htb: new Token(\n    MAINNET,\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n    18,\n    'HTB',\n    'Hotbit Token',\n    'https://www.hotbit.io/',\n  ),\n  woo: new Token(\n    MAINNET,\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n    18,\n    'WOO',\n    'Wootrade Network Token',\n    'https://woo.network/',\n  ),\n  $dg: new Token(\n    MAINNET,\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n    18,\n    '$DG',\n    'Decentral Games Token',\n    'https://decentral.games/',\n  ),\n  safemoon: new Token(\n    MAINNET,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n  axs: new Token(\n    MAINNET,\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n    18,\n    'AXS',\n    'Binance-Pegged Axie Infinity Shard',\n    'https://axieinfinity.com/',\n  ),\n  c98: new Token(\n    MAINNET,\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\n    18,\n    'c98',\n    'Coin98 Token',\n    'https://coin98.com/',\n  ),\n  pots: new Token(\n    MAINNET,\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n    18,\n    'POTS',\n    'Moonpot Token',\n    'https://moonpot.com/',\n  ),\n  gnt: new Token(\n    MAINNET,\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    18,\n    'GNT',\n    'GreenTrust Token',\n    'https://www.greentrusttoken.com/',\n  ),\n  rusd: new Token(\n    MAINNET,\n    '0x07663837218A003e66310a01596af4bf4e44623D',\n    18,\n    'rUSD',\n    'rUSD Token',\n    'https://appv2.rampdefi.com/#/',\n  ),\n  bp: new Token(\n    MAINNET,\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    18,\n    'BP',\n    'BunnyPark Token',\n    'https://www.bunnypark.com/',\n  ),\n  sfund: new Token(\n    MAINNET,\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\n    18,\n    'SFUND',\n    'Seedify Fund Token',\n    'https://seedify.fund/',\n  ),\n  naos: new Token(\n    MAINNET,\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\n    18,\n    'NAOS',\n    'NAOSToken',\n    'https://naos.finance/',\n  ),\n}\n\nexport const testnetTokens = {\n  wbnb: new Token(\n    TESTNET,\n    '0x094616F0BdFB0b526bD735Bf66Eca0Ad254ca81F',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  cake: new Token(\n    TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe', // MockCake\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  \n  ),\n  gol: new Token(\n    TESTNET,\n    '0xBC16DF9309D7997bD5EeD62169BFd4d34666F196',\n    18,\n    'GOL',\n    'GOLToken',\n    'https://gol.finance/',\n  \n  ),\n  golv2: new Token(\n    TESTNET,\n    '0xF4073d05dBE7de995E7b4762C1645519b0f5D609',\n    18,\n    'GOL',\n    'GOLToken',\n    'https://gol.finance/',\n  \n  ),\n  busd: new Token(\n    TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  syrup: new Token(\n    TESTNET,\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  bake: new Token(\n    TESTNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n}\n\nconst tokens = (): TokenList => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {})\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x2F1281A9f84CF6f551dB39156D32A5D6153F25a5',\n  },\n  cakeVault: {\n    56: '0x994cFb1Ea386e73C0E7Ef5c6846E7AE32d7E9428',\n    97: '',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '',\n  },\n  // //////////////////////\n  sousChef: {\n    97: '',\n    56: '0x2F1281A9f84CF6f551dB39156D32A5D6153F25a5',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  AnniversaryAchievement: {\n    56: '0x787980da5491118C3cB33B21aB50c8c379D2C552',\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\n  },\n  nftMarket: {\n    56: '0x17539cCa21C7933Df5c980172d22659B8C345C5A',\n    97: '0x7f9f37ddcaa33893f9beb3d8748c8d6bfbde6ab2',\n  },\n  nftSale: {\n    56: '0x1',\n    97: '0x2',\n  },\n  pancakeSquad: {\n    56: '0x3',\n    97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\n  },\n}\n","import { ChainId } from 'golswap-sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\nexport const getNftSaleAddress = () => {\n  return getAddress(addresses.nftSale)\n}\nexport const getPancakeSquadAddress = () => {\n  return getAddress(addresses.pancakeSquad)\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from 'golswap-sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\nexport function getBscScanLinkForNft(\n  collectionAddress: string,\n  tokenId: string,\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  return `${BASE_BSC_SCAN_URLS[chainId]}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n} from 'config/constants/types'\nimport { NftToken, State as NftMarketState } from './nftMarket/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  collectionAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: NftToken\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport enum ProfileAvatarFetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: NftToken\n      hasRegistered: boolean\n      usernameFetchStatus: ProfileAvatarFetchStatus\n      avatarFetchStatus: ProfileAvatarFetchStatus\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    selectedAddress: string\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  voting: VotingState\n  lottery: LotteryState\n  nftMarket: NftMarketState\n}\n","import { ChainId, JSBI, Percent, Token } from 'golswap-sdk'\nimport { mainnetTokens, testnetTokens } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10C22079c1D0388056e54Be5bf6751D9320F54D1'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.gol,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [\n        testnetTokens.wbnb, \n        testnetTokens.cake, \n        testnetTokens.gol, \n        testnetTokens.busd,\n        testnetTokens.golv2,\n  ],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.gol, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake,  testnetTokens.golv2,  testnetTokens.gol, testnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.golv2,  testnetTokens.gol, testnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.gol, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n  getAnniversaryAchievement,\n  getNftMarketAddress,\n  getNftSaleAddress,\n  getPancakeSquadAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport golAbi from 'config/abi/gol.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/golVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\nimport nftMarketAbi from 'config/abi/nftMarket.json'\nimport nftSaleAbi from 'config/abi/nftSale.json'\nimport pancakeSquadAbi from 'config/abi/pancakeSquad.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(golAbi, tokens.gol.address, signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\nexport const getAnniversaryAchievementContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(anniversaryAchievementAbi, getAnniversaryAchievement(), signer)\n}\nexport const getNftMarketContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftMarketAbi, getNftMarketAddress(), signer)\n}\nexport const getNftSaleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftSaleAbi, getNftSaleAddress(), signer)\n}\nexport const getPancakeSquadContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeSquadAbi, getPancakeSquadAddress(), signer)\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n  getAnniversaryAchievementContract,\n  getNftMarketContract,\n  getNftSaleContract,\n  getPancakeSquadContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress, getPancakeRabbitsAddress, getPancakeSquadAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from 'golswap-sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useAnniversaryAchievementContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getAnniversaryAchievementContract(library.getSigner()), [library])\n}\n\nexport const useNftSaleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftSaleContract(library.getSigner()), [library])\n}\n\nexport const usePancakeSquadContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeSquadContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\nexport const useNftMarketContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftMarketContract(library.getSigner()), [library])\n}\n\nexport const useContractForCollection = (collectionAddress: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => {\n    if (collectionAddress === getPancakeRabbitsAddress()) {\n      return getPancakeRabbitContract(library.getSigner())\n    }\n    if (collectionAddress === getPancakeSquadAddress()) {\n      return getPancakeSquadContract(library.getSigner())\n    }\n    return null\n  }, [library, collectionAddress])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from 'gol-uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ChainId, Pair, Token } from 'golswap-sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Gol-LP', 'Gol LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from 'golswap-sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const API_NFT = process.env.REACT_APP_API_NFT\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\n/**\n * subgrafico de pancake de volumen y liquidez\n * export const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\n*/\n\n/**\n * subgrafico de gol finance de volumen y liquidez\n */\nexport const INFO_CLIENT = 'https://api.thegraph.com/subgraphs/name/golfinance/gol-exchange'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\nexport const GRAPH_API_NFTMARKET = process.env.REACT_APP_GRAPH_API_NFT_MARKET\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from 'golswap-sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from 'golswap-sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Token } from 'golswap-sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { ChainId } from 'golswap-sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 GOL is minted per block\n// 20 GOL per block is sent to Burn pool (A farm just for burning cake)\n// 10 GOL per block goes to GOL syrup pool\n// 9 GOL per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// GOL/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = 0.579 // 40\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365 // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\nexport const BASE_URL = 'https://gol.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n// In reality its 10000 because of fast refresh, a bit less here to cover for possible long request times\nexport const PANCAKE_BUNNIES_UPDATE_FREQUENCY = 8000\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport nftMarketReducer from './nftMarket/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n    nftMarket: nftMarketReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { Token, TokenAmount } from 'golswap-sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from 'golswap-sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_NFTMARKET, API_NFT } from 'config/constants/endpoints'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { ethers } from 'ethers'\nimport map from 'lodash/map'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  TokenMarketData,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NftToken,\n  NftLocation,\n  Collection,\n  ApiResponseCollectionTokens,\n  ApiResponseSpecificToken,\n  ApiCollection,\n  CollectionMarketDataBaseFields,\n  Transaction,\n  AskOrder,\n  ApiSingleTokenData,\n  NftAttribute,\n} from './types'\nimport { getBaseNftFields, getBaseTransactionFields, getCollectionBaseFields } from './queries'\n\n/**\n * API HELPERS\n */\n\n/**\n * Fetch static data from all collections using the API\n * @returns\n */\nexport const getCollectionsApi = async (): Promise<ApiCollection[]> => {\n  const res = await fetch(`${API_NFT}/collections`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error('Failed to fetch NFT collections', res.statusText)\n  return []\n}\n\n/**\n * Fetch static data from a collection using the API\n * @returns\n */\nexport const getCollectionApi = async (collectionAddress: string): Promise<ApiCollection> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * Fetch static data for all nfts in a collection using the API\n * @param collectionAddress\n * @param size\n * @param page\n * @returns\n */\nexport const getNftsFromCollectionApi = async (\n  collectionAddress: string,\n  size = 100,\n  page = 1,\n): Promise<ApiResponseCollectionTokens> => {\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n  const requestPath = `${API_NFT}/collections/${collectionAddress}/tokens${\n    !isPBCollection ? `?page=${page}&size=${size}` : ``\n  }`\n\n  const res = await fetch(requestPath)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT tokens for ${collectionAddress} collection`, res.statusText)\n  return null\n}\n\n/**\n * Fetch a single NFT using the API\n * @param collectionAddress\n * @param tokenId\n * @returns NFT from API\n */\nexport const getNftApi = async (\n  collectionAddress: string,\n  tokenId: string,\n): Promise<ApiResponseSpecificToken['data']> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n\n  console.error(`API: Can't fetch NFT token ${tokenId} in ${collectionAddress}`, res.status)\n  return null\n}\n\n/**\n * Fetch a list of NFT from different collections\n * @param from Array of { collectionAddress: string; tokenId: string }\n * @returns Array of NFT from API\n */\nexport const getNftsFromDifferentCollectionsApi = async (\n  from: { collectionAddress: string; tokenId: string }[],\n): Promise<NftToken[]> => {\n  const promises = from.map((nft) => getNftApi(nft.collectionAddress, nft.tokenId))\n  const responses = await Promise.all(promises)\n  // Sometimes API can't find some tokens (e.g. 404 response)\n  // at least return the ones that returned successfully\n  return responses\n    .filter((resp) => resp)\n    .map((res, index) => ({\n      tokenId: res.tokenId,\n      name: res.name,\n      collectionName: res.collection.name,\n      collectionAddress: from[index].collectionAddress,\n      description: res.description,\n      attributes: res.attributes,\n      createdAt: res.createdAt,\n      updatedAt: res.updatedAt,\n      image: {\n        original: res.image?.original,\n        thumbnail: res.image?.thumbnail,\n      },\n    }))\n}\n\n/**\n * SUBGRAPH HELPERS\n */\n\n/**\n * Fetch market data from a collection using the Subgraph\n * @returns\n */\nexport const getCollectionSg = async (collectionAddress: string): Promise<CollectionMarketDataBaseFields> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection\n  } catch (error) {\n    console.error('Failed to fetch collection', error)\n    return null\n  }\n}\n\n/**\n * Fetch market data from all collections using the Subgraph\n * @returns\n */\nexport const getCollectionsSg = async (): Promise<CollectionMarketDataBaseFields[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        {\n          collections {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n    )\n    return res.collections\n  } catch (error) {\n    console.error('Failed to fetch NFT collections', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for nfts in a collection using the Subgraph\n * @param collectionAddress\n * @param first\n * @param skip\n * @returns\n */\nexport const getNftsFromCollectionSg = async (\n  collectionAddress: string,\n  first = 1000,\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  // Squad to be sorted by tokenId as this matches the order of the paginated API return. For PBs - get the most recent,\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftCollectionMarketData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            id\n            nfts(orderBy:${isPBCollection ? 'updatedAt' : 'tokenId'}, skip: $skip, first: $first) {\n             ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase(), skip, first },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs from collection', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getNftsByBunnyIdSg = async (\n  bunnyId: string,\n  existingTokenIds: string[],\n  orderDirection: 'asc' | 'desc',\n): Promise<TokenMarketData[]> => {\n  try {\n    const where =\n      existingTokenIds.length > 0\n        ? { otherId: bunnyId, isTradable: true, tokenId_not_in: existingTokenIds }\n        : { otherId: bunnyId, isTradable: true }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsByBunnyIdSg($collectionAddress: String!, $where: NFT_filter, $orderDirection: String!) {\n          nfts(first: 30, where: $where, orderBy: currentAskPrice, orderDirection: $orderDirection) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: pancakeBunniesAddress.toLowerCase(),\n        where,\n        orderDirection,\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getMarketDataForTokenIds = async (\n  collectionAddress: string,\n  existingTokenIds: string[],\n): Promise<TokenMarketData[]> => {\n  try {\n    if (existingTokenIds.length === 0) {\n      return []\n    }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getMarketDataForTokenIds($collectionAddress: String!, $where: NFT_filter) {\n          nfts(first: 1000, where: $where) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: collectionAddress.toLowerCase(),\n        where: { tokenId_in: existingTokenIds },\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch market data for NFTs stored tokens`, error)\n    return []\n  }\n}\n\nexport const getNftsMarketData = async (\n  where = {},\n  first = 1000,\n  orderBy = 'id',\n  orderDirection: 'asc' | 'desc' = 'desc',\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsMarketData($first: Int, $skip: Int!, $where: NFT_filter, $orderBy: NFT_orderBy, $orderDirection: OrderDirection) {\n          nfts(where: $where, orderBy: $orderBy, orderDirection: $orderDirection, skip: $skip) {\n            ${getBaseNftFields()}\n            transactionHistory {\n              ${getBaseTransactionFields()}\n            }\n          }\n        }\n      `,\n      { where, first, skip, orderBy, orderDirection },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\nexport const getAllPancakeBunniesLowestPrice = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: currentAskPrice, orderDirection: asc) {\n        currentAskPrice\n      }\n    `,\n    )\n    const rawResponse: Record<string, { currentAskPrice: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((lowestPricesData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...lowestPricesData,\n        [bunnyId]:\n          rawResponse[subQueryKey].length > 0 ? parseFloat(rawResponse[subQueryKey][0].currentAskPrice) : Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies lowest prices', error)\n    return {}\n  }\n}\n\nexport const getAllPancakeBunniesRecentUpdatedAt = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: updatedAt, orderDirection: desc) {\n        updatedAt\n      }\n    `,\n    )\n    const rawResponse: Record<string, { updatedAt: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((updatedAtData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...updatedAtData,\n        [bunnyId]: rawResponse[subQueryKey].length > 0 ? Number(rawResponse[subQueryKey][0].updatedAt) : -Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies latest market updates', error)\n    return {}\n  }\n}\n\n/**\n * Returns the lowest price of any NFT in a collection\n */\nexport const getLowestPriceInCollection = async (collectionAddress: string) => {\n  try {\n    const response = await getNftsMarketData(\n      { collection: collectionAddress.toLowerCase(), isTradable: true },\n      1,\n      'currentAskPrice',\n      'asc',\n    )\n\n    if (response.length === 0) {\n      return 0\n    }\n\n    const [nftSg] = response\n    return parseFloat(nftSg.currentAskPrice)\n  } catch (error) {\n    console.error(`Failed to lowest price NFTs in collection ${collectionAddress}`, error)\n    return 0\n  }\n}\n\n/**\n * Fetch user trading data for buyTradeHistory, sellTradeHistory and askOrderHistory from the Subgraph\n * @param where a User_filter where condition\n * @returns a UserActivity object\n */\nexport const getUserActivity = async (\n  address: string,\n): Promise<{ askOrderHistory: AskOrder[]; buyTradeHistory: Transaction[]; sellTradeHistory: Transaction[] }> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getUserActivity($address: String!) {\n          user(id: $address) {\n            buyTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            sellTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            askOrderHistory(first: 500, orderBy: timestamp, orderDirection: desc) {\n              id\n              block\n              timestamp\n              orderType\n              askPrice\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n          }\n        }\n      `,\n      { address },\n    )\n\n    return res.user || { askOrderHistory: [], buyTradeHistory: [], sellTradeHistory: [] }\n  } catch (error) {\n    console.error('Failed to fetch user Activity', error)\n    return {\n      askOrderHistory: [],\n      buyTradeHistory: [],\n      sellTradeHistory: [],\n    }\n  }\n}\n\n/**\n * Get the most recently listed NFTs\n * @param first Number of nfts to retrieve\n * @returns NftTokenSg[]\n */\nexport const getLatestListedNfts = async (first: number): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getLatestNftMarketData($first: Int) {\n          nfts(where: { isTradable: true }, orderBy: updatedAt , orderDirection: desc, first: $first) {\n            ${getBaseNftFields()}\n            collection {\n              id\n            }\n          }\n        }\n      `,\n      { first },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\n/**\n * OTHER HELPERS\n */\n\nexport const getMetadataWithFallback = (apiMetadata: ApiResponseCollectionTokens['data'], bunnyId: string) => {\n  // The fallback is just for the testnet where some bunnies don't exist\n  return (\n    apiMetadata[bunnyId] ?? {\n      name: '',\n      description: '',\n      collection: { name: 'Pancake Bunnies' },\n      image: {\n        original: '',\n        thumbnail: '',\n      },\n    }\n  )\n}\n\nexport const getPancakeBunniesAttributesField = (bunnyId: string) => {\n  // Generating attributes field that is not returned by API\n  // but can be \"faked\" since objects are keyed with bunny id\n  return [\n    {\n      traitType: 'bunnyId',\n      value: bunnyId,\n      displayType: null,\n    },\n  ]\n}\n\nexport const combineApiAndSgResponseToNftToken = (\n  apiMetadata: ApiSingleTokenData,\n  marketData: TokenMarketData,\n  attributes: NftAttribute[],\n) => {\n  return {\n    tokenId: marketData.tokenId,\n    name: apiMetadata.name,\n    description: apiMetadata.description,\n    collectionName: apiMetadata.collection.name,\n    collectionAddress: pancakeBunniesAddress,\n    image: apiMetadata.image,\n    marketData,\n    attributes,\n  }\n}\n\nexport const fetchWalletTokenIdsForCollections = async (\n  account: string,\n  collections: ApiCollections,\n): Promise<TokenIdWithCollectionAddress[]> => {\n  const walletNftPromises = map(collections, async (collection): Promise<TokenIdWithCollectionAddress[]> => {\n    const { address: collectionAddress } = collection\n    const contract = getErc721Contract(collectionAddress)\n    let balanceOfResponse\n\n    try {\n      balanceOfResponse = await contract.balanceOf(account)\n    } catch (e) {\n      console.error(e)\n      return []\n    }\n\n    const balanceOf = balanceOfResponse.toNumber()\n\n    // User has no NFTs for this collection\n    if (balanceOfResponse.eq(0)) {\n      return []\n    }\n\n    const getTokenId = async (index: number) => {\n      try {\n        const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n        const tokenId = tokenIdBn.toString()\n        return tokenId\n      } catch (error) {\n        console.error('getTokenIdAndData', error)\n        return null\n      }\n    }\n\n    const tokenIdPromises = []\n\n    // For each index get the tokenId\n    for (let i = 0; i < balanceOf; i++) {\n      tokenIdPromises.push(getTokenId(i))\n    }\n\n    const tokenIds = await Promise.all(tokenIdPromises)\n    const nftLocation = NftLocation.WALLET\n    const tokensWithCollectionAddress = tokenIds.map((tokenId) => {\n      return { tokenId, collectionAddress, nftLocation }\n    })\n\n    return tokensWithCollectionAddress\n  })\n\n  const walletNfts = await Promise.all(walletNftPromises)\n  return walletNfts.flat()\n}\n\n/**\n * Helper to combine data from the collections' API and subgraph\n */\nexport const combineCollectionData = (\n  collectionApiData: ApiCollection[],\n  collectionSgData: CollectionMarketDataBaseFields[],\n): Record<string, Collection> => {\n  const collectionsMarketObj: Record<string, CollectionMarketDataBaseFields> = collectionSgData.reduce(\n    (prev, current) => ({ ...prev, [current.id]: { ...current } }),\n    {},\n  )\n\n  return collectionApiData.reduce((accum, current) => {\n    const collectionMarket = collectionsMarketObj[current.address.toLowerCase()]\n    const collection: Collection = {\n      ...current,\n      ...collectionMarket,\n    }\n\n    return {\n      ...accum,\n      [current.address]: collection,\n    }\n  }, {})\n}\n\n/**\n * Evaluate whether a market NFT is in a users wallet, their profile picture, or on sale\n * @param tokenId string\n * @param tokenIdsInWallet array of tokenIds in wallet\n * @param tokenIdsForSale array of tokenIds on sale\n * @param profileNftId Optional tokenId of users' profile picture\n * @returns NftLocation enum value\n */\nexport const getNftLocationForMarketNft = (\n  tokenId: string,\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftLocation => {\n  if (tokenId === profileNftId) {\n    return NftLocation.PROFILE\n  }\n  if (tokenIdsForSale.includes(tokenId)) {\n    return NftLocation.FORSALE\n  }\n  if (tokenIdsInWallet.includes(tokenId)) {\n    return NftLocation.WALLET\n  }\n  console.error(`Cannot determine location for tokenID ${tokenId}, defaulting to NftLocation.WALLET`)\n  return NftLocation.WALLET\n}\n\n/**\n * Construct complete TokenMarketData entities with a users' wallet NFT ids and market data for their wallet NFTs\n * @param walletNfts TokenIdWithCollectionAddress\n * @param marketDataForWalletNfts TokenMarketData[]\n * @returns TokenMarketData[]\n */\nexport const attachMarketDataToWalletNfts = (\n  walletNfts: TokenIdWithCollectionAddress[],\n  marketDataForWalletNfts: TokenMarketData[],\n): TokenMarketData[] => {\n  const walletNftsWithMarketData = walletNfts.map((walletNft) => {\n    const marketData = marketDataForWalletNfts.find((marketNft) => marketNft.tokenId === walletNft.tokenId)\n    return (\n      marketData ?? {\n        tokenId: walletNft.tokenId,\n        collection: {\n          id: walletNft.collectionAddress.toLowerCase(),\n        },\n        nftLocation: walletNft.nftLocation,\n        metadataUrl: null,\n        transactionHistory: null,\n        currentSeller: null,\n        isTradable: null,\n        currentAskPrice: null,\n        latestTradedPriceInBNB: null,\n        tradeVolumeBNB: null,\n        totalTrades: null,\n        otherId: null,\n      }\n    )\n  })\n  return walletNftsWithMarketData\n}\n\n/**\n * Attach TokenMarketData and location to NftToken\n * @param nftsWithMetadata NftToken[] with API metadata\n * @param nftsForSale  market data for nfts that are on sale (i.e. not in a user's wallet)\n * @param walletNfts makret data for nfts in a user's wallet\n * @param tokenIdsInWallet array of token ids in user's wallet\n * @param tokenIdsForSale array of token ids of nfts that are on sale\n * @param profileNftId profile picture token id\n * @returns NFT[]\n */\nexport const combineNftMarketAndMetadata = (\n  nftsWithMetadata: NftToken[],\n  nftsForSale: TokenMarketData[],\n  walletNfts: TokenMarketData[],\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftToken[] => {\n  const completeNftData = nftsWithMetadata.map<NftToken>((nft) => {\n    // Get metadata object\n    const isOnSale = nftsForSale.filter((forSaleNft) => forSaleNft.tokenId === nft.tokenId).length > 0\n    let marketData\n    if (isOnSale) {\n      marketData = nftsForSale.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    } else {\n      marketData = walletNfts.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    }\n    const location = getNftLocationForMarketNft(nft.tokenId, tokenIdsInWallet, tokenIdsForSale, profileNftId)\n    return { ...nft, marketData, location }\n  })\n  return completeNftData\n}\n\n/**\n * Get in-wallet, on-sale & profile pic NFT metadata, complete with market data for a given account\n * @param account\n * @param collections\n * @param profileNftWithCollectionAddress\n * @returns Promise<NftToken[]>\n */\nexport const getCompleteAccountNftData = async (\n  account: string,\n  collections: ApiCollections,\n  profileNftWithCollectionAddress?: TokenIdWithCollectionAddress,\n): Promise<NftToken[]> => {\n  const walletNftIds = await fetchWalletTokenIdsForCollections(account, collections)\n  if (profileNftWithCollectionAddress?.tokenId) {\n    walletNftIds.push(profileNftWithCollectionAddress)\n  }\n  const tokenIds = walletNftIds.map((nft) => nft.tokenId)\n\n  const marketDataForWalletNfts = await getNftsMarketData({ tokenId_in: tokenIds })\n  const walletNftsWithMarketData = attachMarketDataToWalletNfts(walletNftIds, marketDataForWalletNfts)\n\n  const tokenIdsInWallet = walletNftIds\n    .filter((walletNft) => {\n      // Profile Pic NFT is included in walletNftIds array, hence this filter\n      return profileNftWithCollectionAddress?.tokenId !== walletNft.tokenId\n    })\n    .map((nft) => nft.tokenId)\n\n  const marketDataForSaleNfts = await getNftsMarketData({ currentSeller: account.toLowerCase() })\n  const tokenIdsForSale = marketDataForSaleNfts.map((nft) => nft.tokenId)\n\n  const forSaleNftIds = marketDataForSaleNfts.map((nft) => {\n    return { collectionAddress: nft.collection.id, tokenId: nft.tokenId }\n  })\n\n  const metadataForAllNfts = await getNftsFromDifferentCollectionsApi([...walletNftIds, ...forSaleNftIds])\n\n  const completeNftData = combineNftMarketAndMetadata(\n    metadataForAllNfts,\n    marketDataForSaleNfts,\n    walletNftsWithMarketData,\n    tokenIdsInWallet,\n    tokenIdsForSale,\n    profileNftWithCollectionAddress?.tokenId,\n  )\n\n  return completeNftData\n}\n\n/**\n * Fetch distribution information for a collection\n * @returns\n */\nexport const getCollectionDistributionApi = async <T>(collectionAddress: string): Promise<T> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/distribution`)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress} distribution`, res.statusText)\n  return null\n}\n","export const getBaseNftFields = () => `\n  tokenId\n  metadataUrl\n  currentAskPrice\n  currentSeller\n  latestTradedPriceInBNB\n  tradeVolumeBNB\n  totalTrades\n  isTradable\n  updatedAt\n  otherId\n  collection {\n    id\n  }\n`\n\nexport const getBaseTransactionFields = () => `\n  id\n  block\n  timestamp\n  askPrice\n  netPrice\n  withBNB\n  buyer {\n    id\n  }\n  seller {\n    id\n  }\n`\n\nexport const getCollectionBaseFields = () => `\n  id\n  name\n  symbol\n  active\n  totalTrades\n  totalVolumeBNB\n  numberTokensListed\n  creatorAddress\n  tradingFee\n  creatorFee\n  whitelistChecker\n`\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from 'golswap-sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json' // Deploy Souschef Ojo Maradona\nimport cakeABI from 'config/abi/gol.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\nimport tokens from 'config/constants/tokens'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 11) // OjO Maradona\n  // Pools con final - \n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress), // SC souschef\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress), // SC souschef\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingToken.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: tokens.wbnb.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n  // console.log(\"TotalStakedNONBNB %o\",nonBnbPoolsTotalStaked)\n  // console.log(\"TotalStakedBNB %o\",bnbPoolsTotalStaked)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 11, GOL / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 11)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Gol / Gol pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('11', account) // Ojo Maradona\n\n  return { ...stakedBalances, 11: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Gol / Gol pool\n  const pendingReward = await masterChefContract.pendingGol('11', account) // Ojo Maradona\n\n  return { ...pendingRewards, 11: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/golVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestGolRewards',\n      'calculateTotalPendingGolRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.golAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n    // const apr = (apr1 / 100) * 5 // Maradona OjO con esto.\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) { // (index >= 0) Acá va 11? seguro que si.\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from 'gol-uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from 'golswap-sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { BigNumberish } from 'ethers'\n\n// Collections -> Nfts -> Transactions\n// Users -> Nft tokens IDs\n\n// TODO: Handle the error state on the UI\nexport enum NFTMarketInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum UserNftInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZING = 'INITIALIZING',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport interface State {\n  initializationState: NFTMarketInitializationState\n  data: {\n    collections: Record<string, Collection> // string is the address\n    nfts: Record<string, NftToken[]> // string is the collection address\n    loadingState: {\n      isUpdatingPancakeBunnies: boolean\n      latestPancakeBunniesUpdateAt: number\n    }\n    users: Record<string, User> // string is the address\n    user: UserNftsState\n  }\n}\n\nexport interface UserNftsState {\n  userNftsInitializationState: UserNftInitializationState\n  nfts: NftToken[]\n  activity: UserActivity\n}\n\nexport interface Transaction {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  netPrice: string\n  buyer: { id: string }\n  seller: { id: string }\n  withBNB: boolean\n  nft?: TokenMarketData\n}\n\nexport enum AskOrderType {\n  NEW = 'NEW',\n  MODIFY = 'MODIFY',\n  CANCEL = 'CANCEL',\n}\n\nexport interface AskOrder {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  orderType: AskOrderType\n  nft?: TokenMarketData\n}\n\nexport interface Image {\n  original: string\n  thumbnail: string\n  mp4?: string\n  webm?: string\n  gif?: string\n}\n\nexport enum NftLocation {\n  FORSALE = 'For Sale',\n  PROFILE = 'Profile Pic',\n  WALLET = 'In Wallet',\n}\n\n// Market data regarding specific token ID, acquired via subgraph\nexport interface TokenMarketData {\n  tokenId: string\n  metadataUrl: string\n  currentAskPrice: string\n  currentSeller: string\n  latestTradedPriceInBNB: string\n  tradeVolumeBNB: string\n  totalTrades: string\n  isTradable: boolean\n  otherId: string\n  collection?: {\n    id: string\n  }\n  updatedAt?: string\n  transactionHistory?: Transaction[]\n}\n\n// Represents single NFT token, either Squad-like NFT or single PancakeBunny.\nexport interface NftToken {\n  tokenId: string\n  name: string\n  description: string\n  collectionName: string\n  collectionAddress: string\n  image: Image\n  attributes?: NftAttribute[]\n  createdAt?: string // API createdAt\n  updatedAt?: string // API updatedAt\n  marketData?: TokenMarketData\n  location?: NftLocation\n  meta?: Record<string, string | number>\n}\n\nexport interface TokenIdWithCollectionAddress {\n  collectionAddress: string\n  tokenId: string\n  nftLocation?: NftLocation\n}\n\nexport interface NftAttribute {\n  traitType: string\n  value: string | number\n  displayType: string\n}\n\n// Internal type used to refer to a collection\n// Most fields are populated from API (via ApiCollection type)\nexport interface Collection {\n  id: string\n  address: string\n  name: string\n  description?: string\n  symbol: string\n  active: boolean\n  totalVolumeBNB: string\n  numberTokensListed: string\n  tradingFee: string\n  creatorFee: string\n  owner: string\n  totalSupply: string\n  verified: boolean\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[]\n}\n\nexport interface ApiCollections {\n  [key: string]: Collection\n}\n\nexport interface User {\n  address: string\n  numberTokensListed: BigNumberish\n  numberTokensPurchased: BigNumberish\n  numberTokensSold: BigNumberish\n  nfts: Record<string, BigNumberish> // String is an address, BigNumberish is a tokenID\n}\n\n/**\n * API RESPONSES\n */\n\nexport interface ApiCollection {\n  address: string\n  owner: string\n  name: string\n  description: string\n  symbol: string\n  totalSupply: string\n  verified: boolean\n  createdAt: string\n  updatedAt: string\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[] // returned for specific collection but not for all collections\n}\n\n// Get all collections\n// ${API_NFT}/collections/\nexport interface ApiCollectionsReponse {\n  total: number\n  data: ApiCollection[]\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiSingleCollectionResponse {\n  data: ApiCollection\n}\n\nexport interface ApiSingleTokenData {\n  name: string\n  description: string\n  image: Image\n  collection: {\n    name: string\n  }\n  attributes?: NftAttribute[]\n}\n\n// Get tokens within collection\n// ${API_NFT}/collections/${collectionAddress}/tokens\nexport interface ApiResponseCollectionTokens {\n  total: number\n  attributesDistribution: Record<string, number>\n  data: Record<string, ApiSingleTokenData>\n}\n\n// Get specific token data\n// ${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}\nexport interface ApiResponseSpecificToken {\n  data: {\n    tokenId: string\n    name: string\n    description: string\n    image: Image\n    createdAt: string\n    updatedAt: string\n    attributes: NftAttribute[]\n    collection: {\n      name: string\n    }\n  }\n}\n\n// ${API_NFT}/collections/${collectionAddress}/distribution\nexport interface ApiCollectionDistribution {\n  total: number\n  data: Record<string, Record<string, number>>\n}\n\nexport interface ApiCollectionDistributionPB {\n  total: number\n  data: Record<string, number>\n}\n\n/**\n * SUBGRAPH RESPONSES\n */\n\nexport interface CollectionMarketDataBaseFields {\n  id: string\n  name: string\n  symbol: string\n  active: boolean\n  totalTrades: string\n  totalVolumeBNB: string\n  numberTokensListed: string\n  creatorAddress: string\n  tradingFee: string\n  creatorFee: string\n  whitelistChecked: string\n}\n\nexport interface UserActivity {\n  askOrderHistory: AskOrder[]\n  buyTradeHistory: Transaction[]\n  sellTradeHistory: Transaction[]\n  initializationState: UserNftInitializationState\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import BigNumber from 'bignumber.js'\nimport { Token } from 'golswap-sdk'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] = [\n  {\n    sousId: 11,\n    stakingToken: serializedTokens.gol,\n    earningToken: serializedTokens.gol,\n    contractAddress: {\n      97: '',\n      56: '0x2F1281A9f84CF6f551dB39156D32A5D6153F25a5', // masterchef gol\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    // sortOrder: 999,\n    tokenPerBlock: '0.046386', // x8 (8*0.579/100)=0.046386\n    sortOrder: 1,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 0 = GOL-BNB LP\n * 3 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([0,3]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n  // console.log(lpTokenPrice)\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(0) // precio en la barra GOL-BNB LP\n\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n  // console.log(\"desde state/farms/hooks.ts 1 %o\", cakePriceBusdAsString) // Maradona\n  return cakePriceBusd // new BigNumber(25) price of Gol\n}\n","import React from 'react'\nimport { Button, useWalletModal } from 'gol-uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from 'gol-uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from 'gol-uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = (refreshTime = 6000) => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, refreshTime)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible, refreshTime])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from 'golswap-sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from 'golswap-sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { TokenAmount, Pair, Currency } from 'golswap-sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import { Address } from '../types'\n\nexport enum CollectionKey {\n  PANCAKE = 'pancake',\n  SQUAD = 'pancakeSquad',\n}\n\nexport type Collection = {\n  name: string\n  description?: string\n  slug: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.PANCAKE]: {\n    name: 'Pancake Bunnies',\n    slug: 'pancake-bunnies',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n  },\n  [CollectionKey.SQUAD]: {\n    name: 'Pancake Squad',\n    description: \"GolSwap's first official generative NFT collection.. Join the squad.\",\n    slug: 'pancake-squad',\n    address: {\n      56: '',\n      97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\n    },\n  },\n}\n\nexport default collections\n","import collections from 'config/constants/nftsCollections'\nimport { CollectionKey } from 'config/constants/nftsCollections/types'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const nftsBaseUrl = '/nfts'\n\n// @TODO This will be removed when more collections are added\nexport const pancakeBunniesAddress = getAddress(collections[CollectionKey.PANCAKE].address)\n\n// @TODO Remove after the V1\nexport const TMP_SEE_ALL_LINK = `${nftsBaseUrl}/collections/${pancakeBunniesAddress}`\n","import styled from 'styled-components'\nimport { Box } from 'gol-uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from 'golswap-sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from 'gol-uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState, ProfileAvatarFetchStatus } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: NftToken; hasRegistered: boolean }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const { nft, hasRegistered } = await getProfileAvatar(account)\n    return { account, nft, hasRegistered }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<\n  { account: string; username: string },\n  { account: string; hasRegistered: boolean }\n>('profile/fetchProfileUsername', async ({ account, hasRegistered }) => {\n  if (!hasRegistered) {\n    return { account, username: '' }\n  }\n  const username = await getUsername(account)\n  return { account, username }\n})\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.pending, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: null,\n          nft: null,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username,\n          nft: null,\n          hasRegistered: true,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.rejected, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username: '',\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: '',\n          nft: null,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.pending, (state, action) => {\n      const account = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft, hasRegistered } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n          hasRegistered,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft,\n          hasRegistered,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.rejected, (state, action) => {\n      const account = action.meta.arg\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft: null,\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (e) {\n    console.error(e)\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import tokens from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absence of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '0x8cf13ce42d3a79f4a3655bac3e807fb8615f781a', // Quantum Set Dollar\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0 // pid 0 to 11? con pid 11 aparece finalizada la granja de GOL/BNB\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { SerializedFarm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 3) // BUSD-BNB LP LP precio en la barra\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingGol',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0 // pid 0 to 11? Maradona\n    })\n    // console.log(\"desde state/farms/index.ts 11-es-GOL %o\",farmsWithoutHelperLps) // Maradona\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from 'golswap-sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const golContract = getCakeContract()\n      const supply = await golContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(walletBalance)\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport const useGetCakeBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from 'golswap-sdk'\nimport { BinanceIcon } from 'gol-uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 11,\n    lpSymbol: 'GOL', // CAKE = PID 0\n    lpAddresses: {\n      97: '',\n      56: '0x52f6a03a53840c01470f33a0b016e4c3e3dfe796',\n    },\n    token: serializedTokens.gol,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 0,\n    lpSymbol: 'GOL-BNB LP', // CAKE-BNB = (251)\n    lpAddresses: {\n      97: '',\n      56: '0x813f158efa2f375e1d82c92208c8727b03f05d62',\n    },\n    token: serializedTokens.gol,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'BUSD-BNB LP', // BUSD-BNB = (252)\n    lpAddresses: {\n      97: '',\n      56: '0xc5b252caf7435080d0ba04df2683d710a4d994a0',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'GOL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef1d3deceb43d85d84842032d404ade23eb31b1d', \n    },\n    token: serializedTokens.gol,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'GOL-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xed32931ed14c971de14c596c79e38683a03efdbc', \n    },\n    token: serializedTokens.gol,\n    quoteToken: serializedTokens.usdt,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea3664f0c34645908b2669e3e84defc55d086d2b',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8afd4b199e25a8f19a814a8379aca3137ce691de',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x88121b54d701910e0c8b79898399b037eb82e480',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'BTCB-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c552845e58d608af7f792f73efea0333b7a6f0e',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ff29b32caeab5800e30134a001b08c212433c63',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe6d911fe0059d0be11cda2dbf46e92ccc3309f0e',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'bCFX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4a444ea8a23fe97fa8c74b8053e7ae92cb698693',\n    },\n    token: serializedTokens.bcfx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  { \n    pid: 12,\n    lpSymbol: 'GOL-MILK LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc24f9a0c79b9418410eb9b67a7a4706c5d42e4ec',\n    },\n    token: serializedTokens.gol,\n    quoteToken: serializedTokens.milk,\n    isCommunity: true,\n},\n{\n    pid: 13,\n    lpSymbol: 'MILK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x246cbb99d05e48102370770cef165c7bb2cb6d7e',\n    },\n    token: serializedTokens.milk,\n    quoteToken: serializedTokens.busd,\n    isCommunity: true,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'GOL-bFLUX LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41Bbb75618E94E22b66Fa45fDeE196dE058b3fE5',\n    },\n    token: serializedTokens.gol,\n    quoteToken: serializedTokens.bflux,\n    isCommunity: true,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'bFLUX-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf0044d21a0d29692fbdb67e14ff4dcc5bbed86f2',\n    },\n    token: serializedTokens.bflux,\n    quoteToken: serializedTokens.usdt,\n    isCommunity: true,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'MILK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc3f91f5958d874cd1ce46a98c54088cbdd8d9188',\n    },\n    token: serializedTokens.milk,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n\n]\n\nexport default farms","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of GOL rewards each farm receives, as a proportion of the GOL produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 GOL per block, a 40x farm would receive 40 GOL per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (GOL yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from 'gol-uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from 'gol-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'GOL',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from 'gol-uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { clearAllTransactions } from 'state/transactions/actions'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }, [deactivate, dispatch, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from 'golswap-sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from 'golswap-sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from 'gol-uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from 'golswap-sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from 'golswap-sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'GolSwap',\n  description:\n    'The next generation AMM on BSC by user count! Earn GOL through yield farming or win it in the Lottery, then stake it in $gol Pools to earn more tokens!.',\n  image: 'https://gol.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  let basePath\n  if (path.startsWith('/swap')) {\n    basePath = '/swap'\n  } else if (path.startsWith('/add')) {\n    basePath = '/add'\n  } else if (path.startsWith('/remove')) {\n    basePath = '/remove'\n  } else if (path.startsWith('/teams')) {\n    basePath = '/teams'\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\n    basePath = '/voting/proposal'\n  } else if (path.startsWith('/nfts/collections')) {\n    basePath = '/nfts/collections'\n  } else if (path.startsWith('/nfts/profile')) {\n    basePath = '/nfts/profile'\n  } else {\n    basePath = path\n  }\n\n  switch (basePath) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('GolSwap')}`,\n      }\n    case '/swap':\n      return {\n        title: `${t('Exchange')} | ${t('GolSwap')}`,\n      }\n    case '/add':\n      return {\n        title: `${t('Add Liquidity')} | ${t('GolSwap')}`,\n      }\n    case '/remove':\n      return {\n        title: `${t('Remove Liquidity')} | ${t('GolSwap')}`,\n      }\n    case '/liquidity':\n      return {\n        title: `${t('Liquidity')} | ${t('GolSwap')}`,\n      }\n    case '/find':\n      return {\n        title: `${t('Import Pool')} | ${t('GolSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('GolSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('GolSwap')}`,\n      }\n    case '/prediction/leaderboard':\n      return {\n        title: `${t('Leaderboard')} | ${t('GolSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Fields')} | ${t('GolSwap')}`,\n      }\n    case '/farms/auction':\n      return {\n        title: `${t('Farm Auctions')} | ${t('GolSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('GolSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('GolSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('GolSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('GolSwap')}`,\n      }\n    case '/voting':\n      return {\n        title: `${t('Voting')} | ${t('GolSwap')}`,\n      }\n    case '/voting/proposal':\n      return {\n        title: `${t('Proposals')} | ${t('GolSwap')}`,\n      }\n    case '/voting/proposal/create':\n      return {\n        title: `${t('Make a Proposal')} | ${t('GolSwap')}`,\n      }\n    case '/info':\n      return {\n        title: `${t('Overview')} | ${t('GolSwap Info & Analytics')}`,\n        description: 'View statistics for Golswap exchanges.',\n      }\n    case '/info/pools':\n      return {\n        title: `${t('Pools')} | ${t('GolSwap Info & Analytics')}`,\n        description: 'View statistics for Golswap exchanges.',\n      }\n    case '/info/tokens':\n      return {\n        title: `${t('Tokens')} | ${t('GolSwap Info & Analytics')}`,\n        description: 'View statistics for Golswap exchanges.',\n      }\n    case '/nfts':\n      return {\n        title: `${t('Overview')} | ${t('GolSwap')}`,\n      }\n    case '/nfts/collections':\n      return {\n        title: `${t('Collections')} | ${t('GolSwap')}`,\n      }\n    case '/nfts/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('GolSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = useCakeBusdPrice()\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(2)}` : '$GOL' // precio w/2decimals on tab explorer\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <PageMeta symbol={symbol} />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 11) {\n    const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status // pid 11 golToken\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 11) {\n    const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status // pid 11 golToken\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 11) {\n    const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 11)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from 'gol-uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from 'gol-uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { orderBy } from 'lodash'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\nimport ConnectWalletButton from '../../ConnectWalletButton'\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = orderBy(\n    Object.values(allTransactions).filter(isTransactionRecent),\n    'addedTime',\n    'desc',\n  )\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account ? (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from 'gol-uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from 'gol-uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" placement=\"top-start\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from 'gol-uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\nif (!process.env.REACT_APP_NODE_1 || !process.env.REACT_APP_NODE_2 || !process.env.REACT_APP_NODE_3) {\n  throw Error('One base RPC URL is undefined')\n}\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nif (process.env.NODE_ENV === 'production' && process.env.REACT_APP_NODE_ALT) {\n  nodes.push(process.env.REACT_APP_NODE_ALT)\n}\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from 'golswap-sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from 'golswap-sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { getTeam } from 'state/teams/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getNftApi } from 'state/nftMarket/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: collectionAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    collectionAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n\n    let nft = null\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nft = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n    }\n\n    return { nft, hasRegistered }\n  } catch {\n    return { nft: null, hasRegistered: false }\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n    let nftToken: NftToken\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nftToken = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `${nftToken.image.thumbnail}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      collectionAddress,\n      isActive,\n      nft: nftToken,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto GOL Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n  {\n    id: '516010001',\n    type: 'participation',\n    title: '1 Year',\n    description: 'Joined GolSwap during the first year of our journey!',\n    badge: '1-year.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from 'golswap-sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubstrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> substring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubstrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubstrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from 'golswap-sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from 'golswap-sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { getAchievements } from 'state/achievements/helpers'\nimport { State, ProfileState, Achievement, ProfileAvatarFetchStatus } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\nimport { getProfile, GetProfileResponse } from './helpers'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useProfileForAddress = (address: string) => {\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\n    profile: null,\n    isFetching: true,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      try {\n        const profile = await getProfile(address)\n        setProfileState({ profile, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch profile for address ${address}`, error)\n        setProfileState({ profile: null, isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\n      fetchProfileForAddress()\n    }\n  }, [profileState, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setProfileState({ profile: null, isFetching: true })\n  }, [address])\n\n  return profileState\n}\n\nexport const useAchievementsForAddress = (address: string) => {\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\n    achievements: [],\n    isFetching: false,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      setState({ achievements: [], isFetching: true })\n      try {\n        const achievements = await getAchievements(address)\n        setState({ achievements, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch achievements for address ${address}`, error)\n        setState({ achievements: [], isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\n      fetchProfileForAddress()\n    }\n  }, [state, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setState({ achievements: [], isFetching: true })\n  }, [address])\n\n  return state\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && avatarFetchStatus !== ProfileAvatarFetchStatus.FETCHED && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (\n      !username &&\n      avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED &&\n      usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED &&\n      address\n    ) {\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\n    }\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\n\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\n}\n","import React from 'react'\nimport { Box, BoxProps } from 'gol-uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from 'gol-uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'golswap-sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        {/* <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n          <ButtonMenuItem>V2</ButtonMenuItem>\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.golswap.finance/#/\">\n            {t('V1 (old)')}\n          </ButtonMenuItem>\n        </ButtonMenu> */}\n        <LinkExternal\n          id=\"ercBridge\"\n          href=\"https://www.binance.org/en/bridge?utm_source=GolSwap\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n        >\n          {t('Convert ERC-20 to BEP-20')}\n        </LinkExternal>\n      </Flex>\n      <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://golfinance.gitbook.io/golfinance/protocol/golfinance-v1/golswap\"\n            variant=\"subtle\"\n          >\n            {t('Need help ?')}\n          </Button>\n          <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg>\n        </BubbleWrapper>\n        <Image src=\"/images/help.png\" alt=\"Get some help\" width={145} height={108} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from 'gol-uikit'\nimport Footer from 'components/Menu/Footer'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>\n        {children}\n        <Flex flexGrow={1} />\n        <Footer />\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { Token, ChainId } from 'golswap-sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\n// console.log(cakeBnbLpToken); // maradona\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from 'golswap-sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from 'gol-uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from 'golswap-sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from 'gol-uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from 'golswap-sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from 'gol-uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from 'gol-uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps, ThemeSwitcher } from 'gol-uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\nconst ScrollableContainer = styled(Flex)`\n  flex-direction: column;\n  max-height: 400px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme, isDark, toggleTheme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px' }}\n    >\n      <ScrollableContainer>\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          {/* <Flex justifyContent=\"space-between\">\n            <Text mb=\"24px\">{t('Dark mode')}</Text>\n            <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} />\n          </Flex> */}\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        {/* <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n        </Flex> */}\n      </ScrollableContainer>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from 'gol-uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\n        <CogIcon height={24} width={24} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign, TranslatableText } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from 'golswap-sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { useTranslation } from 'contexts/Localization'\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t('Invalid pair')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t('Enter an amount')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from 'golswap-sdk'\nimport React from 'react'\nimport { Button, Text } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from 'golswap-sdk'\nimport React from 'react'\nimport { Text } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from 'golswap-sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from 'gol-uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field, resetMintState } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else if (currencyIdB) {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    selectedAddress: null,\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/initialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\n      state.leaderboard.selectedAddress = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n  setSelectedAddress,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  getNftsFromCollectionApi,\n  getNftsFromCollectionSg,\n  getNftsMarketData,\n  getCollectionsApi,\n  getCollectionsSg,\n  getUserActivity,\n  combineCollectionData,\n  getCollectionSg,\n  getCollectionApi,\n  getNftsFromDifferentCollectionsApi,\n  getCompleteAccountNftData,\n  getNftsByBunnyIdSg,\n  getMarketDataForTokenIds,\n  getMetadataWithFallback,\n  getPancakeBunniesAttributesField,\n  combineApiAndSgResponseToNftToken,\n} from './helpers'\nimport {\n  State,\n  Collection,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NFTMarketInitializationState,\n  UserNftInitializationState,\n  NftToken,\n  NftLocation,\n  ApiSingleTokenData,\n} from './types'\n\nconst initialState: State = {\n  initializationState: NFTMarketInitializationState.UNINITIALIZED,\n  data: {\n    collections: {},\n    nfts: {},\n    loadingState: {\n      isUpdatingPancakeBunnies: false,\n      latestPancakeBunniesUpdateAt: 0,\n    },\n    users: {},\n    user: {\n      userNftsInitializationState: UserNftInitializationState.UNINITIALIZED,\n      nfts: [],\n      activity: {\n        initializationState: UserNftInitializationState.UNINITIALIZED,\n        askOrderHistory: [],\n        buyTradeHistory: [],\n        sellTradeHistory: [],\n      },\n    },\n  },\n}\n\n/**\n * Fetch all collections data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollections = createAsyncThunk<Record<string, Collection>>('nft/fetchCollections', async () => {\n  const [collections, collectionsMarket] = await Promise.all([getCollectionsApi(), getCollectionsSg()])\n  return combineCollectionData(collections, collectionsMarket)\n})\n\n/**\n * Fetch collection data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollection = createAsyncThunk<Record<string, Collection>, string>(\n  'nft/fetchCollection',\n  async (collectionAddress) => {\n    const [collection, collectionMarket] = await Promise.all([\n      getCollectionApi(collectionAddress),\n      getCollectionSg(collectionAddress),\n    ])\n\n    return combineCollectionData([collection], [collectionMarket])\n  },\n)\n\n/**\n * Fetch all NFT data for a collections by combining data from the API (static metadata)\n * and the Subgraph (dynamic market data)\n * @param collectionAddress\n */\nexport const fetchNftsFromCollections = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; page: number; size: number }\n>('nft/fetchNftsFromCollections', async ({ collectionAddress, page, size }) => {\n  try {\n    if (collectionAddress === pancakeBunniesAddress) {\n      // PancakeBunnies don't need to pre-fetch \"all nfts\" from the collection\n      // When user visits IndividualNFTPage required nfts will be fetched via bunny id\n      return []\n    }\n    const [nfts, nftsMarket] = await Promise.all([\n      getNftsFromCollectionApi(collectionAddress, size, page),\n      getNftsFromCollectionSg(collectionAddress, size, (page - 1) * size), // sg uses a skip value rather than page\n    ])\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    return Object.keys(nfts.data).map((id) => {\n      const apiMetadata = nfts.data[id]\n      const marketData = nftsMarket.find((nft) => nft.tokenId === id)\n      return {\n        tokenId: id,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress,\n        image: apiMetadata.image,\n        marketData,\n        attributes: apiMetadata.attributes,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for ${collectionAddress}`, error)\n    return []\n  }\n})\n\n/**\n * This action keeps data on the individual PancakeBunny page up-to-date. Operation is a twofold\n * 1. Update existing NFTs in the state in case some were sold or got price modified\n * 2. Fetch 30 more NFTs with specified bunny id\n */\nexport const fetchNewPBAndUpdateExisting = createAsyncThunk<\n  NftToken[],\n  {\n    bunnyId: string\n    existingTokensWithBunnyId: string[]\n    allExistingPBTokenIds: string[]\n    existingMetadata: ApiSingleTokenData\n    orderDirection: 'asc' | 'desc'\n  }\n>(\n  'nft/fetchNewPBAndUpdateExisting',\n  async ({ bunnyId, existingTokensWithBunnyId, allExistingPBTokenIds, existingMetadata, orderDirection }) => {\n    try {\n      // 1. Update existing NFTs in the state in case some were sold or got price modified\n      const [updatedNfts, updatedNftsMarket] = await Promise.all([\n        getNftsFromCollectionApi(pancakeBunniesAddress),\n        getMarketDataForTokenIds(pancakeBunniesAddress, allExistingPBTokenIds),\n      ])\n\n      if (!updatedNfts?.data) {\n        return []\n      }\n      const updatedTokens = updatedNftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(updatedNfts.data, marketData.otherId)\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n\n      // 2. Fetch 30 more NFTs with specified bunny id\n      let newNfts = { data: { [bunnyId]: existingMetadata } }\n\n      if (!existingMetadata) {\n        newNfts = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      }\n      const nftsMarket = await getNftsByBunnyIdSg(bunnyId, existingTokensWithBunnyId, orderDirection)\n\n      if (!newNfts?.data) {\n        return updatedTokens\n      }\n\n      const moreTokensWithRequestedBunnyId = nftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(newNfts.data, marketData.otherId)\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n      return [...updatedTokens, ...moreTokensWithRequestedBunnyId]\n    } catch (error) {\n      console.error(`Failed to update PancakeBunnies NFTs`, error)\n      return []\n    }\n  },\n)\n\nexport const fetchUserNfts = createAsyncThunk<\n  NftToken[],\n  { account: string; profileNftWithCollectionAddress?: TokenIdWithCollectionAddress; collections: ApiCollections }\n>('nft/fetchUserNfts', async ({ account, profileNftWithCollectionAddress, collections }) => {\n  const completeNftData = await getCompleteAccountNftData(account, collections, profileNftWithCollectionAddress)\n  return completeNftData\n})\n\nexport const updateUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; location?: NftLocation }\n>('nft/updateUserNft', async ({ tokenId, collectionAddress, location = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({ tokenId_in: [tokenId] })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n  const completeNftData = { ...metadataForNft[0], location, marketData: marketDataForNft[0] }\n\n  return completeNftData\n})\n\nexport const removeUserNft = createAsyncThunk<string, { tokenId: string }>(\n  'nft/removeUserNft',\n  async ({ tokenId }) => tokenId,\n)\n\nexport const addUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; nftLocation?: NftLocation }\n>('nft/addUserNft', async ({ tokenId, collectionAddress, nftLocation = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({ tokenId_in: [tokenId] })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n\n  return {\n    ...metadataForNft[0],\n    location: nftLocation,\n    marketData: marketDataForNft[0],\n  }\n})\n\nexport const fetchUserActivity = createAsyncThunk('nft/fetchUserActivity', async (address: string) => {\n  const userActivity = await getUserActivity(address.toLocaleLowerCase())\n  return userActivity\n})\n\nexport const NftMarket = createSlice({\n  name: 'NftMarket',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCollection.fulfilled, (state, action) => {\n      state.data.collections = { ...state.data.collections, ...action.payload }\n    })\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\n      state.data.collections = action.payload\n      state.initializationState = NFTMarketInitializationState.INITIALIZED\n    })\n    builder.addCase(fetchNftsFromCollections.fulfilled, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      const existingNfts = state.data.nfts[collectionAddress] ?? []\n      state.data.nfts[collectionAddress] = [...existingNfts, ...action.payload]\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.pending, (state) => {\n      state.data.loadingState.isUpdatingPancakeBunnies = true\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.fulfilled, (state, action) => {\n      if (action.payload.length > 0) {\n        state.data.nfts[pancakeBunniesAddress] = action.payload\n      }\n      state.data.loadingState.isUpdatingPancakeBunnies = false\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.rejected, (state) => {\n      state.data.loadingState.isUpdatingPancakeBunnies = false\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchUserNfts.rejected, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserNfts.pending, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZING\n    })\n    builder.addCase(fetchUserNfts.fulfilled, (state, action) => {\n      state.data.user.nfts = action.payload\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZED\n    })\n    builder.addCase(updateUserNft.fulfilled, (state, action) => {\n      const userNftsState: NftToken[] = state.data.user.nfts\n      const nftToUpdate = userNftsState.find((nft) => nft.tokenId === action.payload.tokenId)\n      const indexInState = userNftsState.indexOf(nftToUpdate)\n      state.data.user.nfts[indexInState] = action.payload\n    })\n    builder.addCase(removeUserNft.fulfilled, (state, action) => {\n      const copyOfState: NftToken[] = [...state.data.user.nfts]\n      const nftToRemove = copyOfState.find((nft) => nft.tokenId === action.payload)\n      const indexInState = copyOfState.indexOf(nftToRemove)\n      copyOfState.splice(indexInState, 1)\n      state.data.user.nfts = copyOfState\n    })\n    builder.addCase(addUserNft.fulfilled, (state, action) => {\n      state.data.user.nfts = [...state.data.user.nfts, action.payload]\n    })\n    builder.addCase(fetchUserActivity.fulfilled, (state, action) => {\n      state.data.user.activity = { ...action.payload, initializationState: UserNftInitializationState.INITIALIZED }\n    })\n    builder.addCase(fetchUserActivity.rejected, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserActivity.pending, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.INITIALIZING\n    })\n  },\n})\n\nexport default NftMarket.reducer\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from 'golswap-sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = mainnetTokens.busd\nconst { wbnb: WBNB } = tokens\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WBNB)) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WBNB)\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET)) {\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WBNB)\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const cakeBusdPrice = useBUSDPrice(tokens.gol)\n  return cakeBusdPrice\n}\n\nexport const useBNBBusdPrice = (): Price | undefined => {\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb) // precio\n  return bnbBusdPrice\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from 'gol-uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from 'gol-uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from 'gol-uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from 'golswap-sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from 'gol-uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","const ARCHIVED_FARMS_START_PID = 9000\nconst ARCHIVED_FARMS_END_PID = 9999\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @param farmAddress Farm Address\n * @returns Farm Apr\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = poolWeight ? poolWeight.times(CAKE_PER_YEAR) : new BigNumber(NaN)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const observerRef = useRef<HTMLDivElement>(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      intersectionObserverRef.current.observe(observerRef.current)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from 'golswap-sdk'\nimport { Text } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from 'golswap-sdk'\nimport { Button, Text, CheckmarkCircleIcon } from 'gol-uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from 'golswap-sdk'\nimport { Text } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from 'golswap-sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from 'golswap-sdk'\nimport { Text, Input, Box } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from 'gol-uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from 'golswap-sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from 'gol-uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from 'golswap-sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from 'gol-uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from 'golswap-sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from 'gol-uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n  overflow-y: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from 'gol-uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from 'gol-uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on BscScan')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from 'gol-uikit'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from 'gol-uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\n\nconst useUserAgent = () => {\n  useEffect(() => {\n    document.documentElement.setAttribute('data-useragent', navigator.userAgent)\n  }, [])\n}\n\nexport default useUserAgent\n","import { useEffect } from 'react'\nimport history from 'routerHistory'\n\nconst useScrollOnRouteChange = () => {\n  useEffect(() => {\n    const unlisten = history.listen((args) => {\n      if (args.hash === '') {\n        setTimeout(() => {\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n          })\n        }, 50)\n      }\n    })\n\n    return () => unlisten()\n  }, [])\n}\n\nexport default useScrollOnRouteChange\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from 'gol-uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Poppins', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuItemsType, DropdownMenuItemType } from 'gol-uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n// import { nftsBaseUrl } from 'views/Nft/market/constants'\n\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\n\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\n  {\n    label: t('GolSwap'),\n    icon: 'Swap',\n    href: '/swap',\n    showItemsOnMobile: false,\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/liquidity',\n      },\n    ],\n  },\n  {\n    label: t('GolFarm'),\n    href: '/farms',\n    icon: 'Earn',\n    items: [\n      {\n        label: t('Fields'),\n        href: '/farms',\n      },\n      {\n        label: t('Pools'),\n        href: '/pools',\n      },\n    ],\n  },\n  {\n    label: t('Analytics'),\n    href: '/info',\n    showItemsOnMobile: false,\n    items: [\n      {\n      label: t('Info'),\n      href: '/info',\n      }\n    ],\n  },\n  // {\n  //   label: t('Win'),\n  //   href: '/prediction',\n  //   icon: 'Trophy',\n  //   items: [\n  //     {\n  //       label: t('Prediction (BETA)'),\n  //       href: '/prediction',\n  //     },\n  //     {\n  //       label: t('Lottery'),\n  //       href: '/lottery',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('NFT'),\n  //   href: `${nftsBaseUrl}`,\n  //   icon: 'Nft',\n  //   items: [\n  //     {\n  //       label: t('Overview'),\n  //       href: `${nftsBaseUrl}`,\n  //       status: {\n  //         text: t('Live'),\n  //         color: 'failure',\n  //       },\n  //     },\n  //     {\n  //       label: t('Collections'),\n  //       href: `${nftsBaseUrl}/collections`,\n  //     },\n  //   ],\n  // },\n  {\n    label: '',\n    href: '',\n    icon: 'More',\n    hideSubNav: true,\n    items: [\n      // {\n      //   label: t('Info'),\n      //   href: '/info',\n      // },\n      // {\n      //   label: t('IFO'),\n      //   href: '/ifo',\n      // },\n      // {\n      //   label: t('Voting'),\n      //   href: '/voting',\n      // },\n      // {\n      //   type: DropdownMenuItemType.DIVIDER,\n      // },\n      // {\n      //   label: t('Leaderboard'),\n      //   href: '/teams',\n      // },\n      // {\n      //   type: DropdownMenuItemType.DIVIDER,\n      // },\n      {\n        label: t('Blog'),\n        href: 'https://medium.com/@gol.finance',\n        type: DropdownMenuItemType.EXTERNAL_LINK,\n      },\n      {\n        label: t('Docs'),\n        href: 'https://golfinance.gitbook.io/',\n        type: DropdownMenuItemType.EXTERNAL_LINK,\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from 'gol-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\nimport tokens from 'config/constants/tokens'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.gol.address)\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        {fetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{formatBigNumber(balance, 6)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('GOL Balance')}</Text>\n        {cakeFetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from 'gol-uikit'\nimport { AppDispatch } from 'state'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from 'gol-uikit'\nimport history from 'routerHistory'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile?.nft?.image?.thumbnail\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      {/* <UserMenuItem as=\"button\" onClick={() => history.push(`${nftsBaseUrl}/profile/${account.toLowerCase()}`)}>\n        {t('Your NFTs')}\n      </UserMenuItem>\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider /> */}\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import { ConfigMenuItemsType } from './config/config'\n\nexport const getActiveMenuItem = ({ pathname, menuConfig }: { pathname: string; menuConfig: ConfigMenuItemsType[] }) =>\n  menuConfig.find((menuItem) => pathname.startsWith(menuItem.href) || getActiveSubMenuItem({ menuItem, pathname }))\n\nexport const getActiveSubMenuItem = ({ pathname, menuItem }: { pathname: string; menuItem?: ConfigMenuItemsType }) => {\n  const activeSubMenuItems = menuItem?.items.filter((subMenuItem) => pathname.startsWith(subMenuItem.href)) ?? []\n\n  // Pathname doesn't include any submenu item href - return undefined\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\n    return undefined\n  }\n\n  // Pathname includes one sub menu item href - return it\n  if (activeSubMenuItems.length === 1) {\n    return activeSubMenuItems[0]\n  }\n\n  // Pathname includes multiple sub menu item hrefs - find the most specific match\n  const mostSpecificMatch = activeSubMenuItems.sort(\n    (subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length,\n  )[0]\n\n  return mostSpecificMatch\n}\n","import { FooterLinkType } from 'gol-uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nexport const footerLinks: (t: ContextApi['t']) => FooterLinkType[] = (t) => [\n  {\n    label: t('About'),\n    items: [\n      {\n        label: t('Contact'),\n        href: 'https://golfinance.gitbook.io/golfinance/about-golfinance/contact-us',\n      },\n      {\n        label: t('Blog'),\n        href: 'https://medium.com/@gol.finance',\n      },\n      {\n        label: t('Community'),\n        href: 'https://golfinance.gitbook.io/golfinance/about-golfinance/contact-us/community-and-social-media',\n      },\n      {\n        label: t('GolToken'),\n        href: 'https://golfinance.gitbook.io/golfinance/protocol/golfinance-v1/goltoken/tokenomics',\n      },\n      // {\n      //   label: '—',\n      // },\n      // {\n      //   label: t('Online Store'),\n      //   href: 'https://pancakeswap.creator-spring.com/',\n      //   isHighlighted: true,\n      // },\n    ],\n  },\n  {\n    label: t('Help'),\n    items: [\n      {\n        label: t('Customer Support'),\n        href: 'https://golfinance.gitbook.io/golfinance/about-golfinance/contact-us/customer-support',\n      },\n      {\n        label: t('Troubleshooting'),\n        href: 'https://golfinance.gitbook.io/golfinance/about-golfinance/help/troubleshooting',\n      },\n      {\n        label: t('Guides'),\n        href: 'https://golfinance.gitbook.io/golfinance/about-golfinance/get-started',\n      },\n    ],\n  },\n  {\n    label: t('Developers'),\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/GolFinance',\n      },\n      {\n        label: t('Documentation'),\n        href: 'https://golfinance.gitbook.io/',\n      },\n      {\n        label: t('Bug Bounty'),\n        href: 'https://golfinance.gitbook.io/golfinance/developers/bug-bounty',\n      },\n      {\n        label: t('Audits'),\n        href: 'https://golfinance.gitbook.io/golfinance/about-golfinance/security-and-risks/audits',\n      },\n      {\n        label: t('Careers'),\n        href: 'https://golfinance.gitbook.io/golfinance/community/join-us',\n      },\n    ],\n  },\n]","import React from 'react'\nimport { useLocation } from 'react-router'\nimport { Menu as UikitMenu } from 'gol-uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport config from './config/config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\nimport { getActiveMenuItem, getActiveSubMenuItem } from './utils'\nimport { footerLinks } from './config/footerConfig'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n  const { pathname } = useLocation()\n\n  const activeMenuItem = getActiveMenuItem({ menuConfig: config(t), pathname })\n  const activeSubMenuItem = getActiveSubMenuItem({ menuItem: activeMenuItem, pathname })\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      subLinks={activeMenuItem?.hideSubNav ? [] : activeMenuItem?.items}\n      footerLinks={footerLinks(t)}\n      activeItem={activeMenuItem?.href}\n      activeSubItem={activeSubMenuItem?.href}\n      buyCakeLabel={t('Buy GOL')}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from 'gol-uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useEffect, useState } from 'react'\nimport { AutoRenewIcon, Box, Button, Flex, InjectedModalProps, Modal, Text } from 'gol-uikit'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAnniversaryAchievementContract } from 'hooks/useContract'\nimport { delay } from 'lodash'\n\nconst AnniversaryImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst AnniversaryAchievementModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n  const { claimAnniversaryPoints } = useAnniversaryAchievementContract()\n\n  const handleClick = async () => {\n    setIsLoading(true)\n    try {\n      await claimAnniversaryPoints()\n    } finally {\n      onDismiss()\n    }\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Box>\n          <AnniversaryImage src=\"/images/achievements/1-year.svg\" />\n        </Box>\n        <Text textAlign=\"center\" bold color=\"secondary\" maxWidth=\"400px\" fontSize=\"16px\" mb=\"24px\">\n          {t('You won points for joining GolSwap during the first year of our journey!')}\n        </Text>\n        <Button\n          disabled={isLoading}\n          onClick={handleClick}\n          endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n        >\n          {isLoading ? t('Claiming...') : t('Claim now')}\n        </Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default AnniversaryAchievementModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useModal } from 'gol-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAnniversaryAchievementContract } from 'utils/contractHelpers'\nimport AnniversaryAchievementModal from './AnniversaryAchievementModal'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [canClaimAnniversaryPoints, setCanClaimAnniversaryPoints] = useState(false)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const [onPresentAnniversaryModal] = useModal(<AnniversaryAchievementModal />)\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimAnniversaryStatus = async () => {\n      const { canClaim } = getAnniversaryAchievementContract()\n      const canClaimAnniversary = await canClaim(account)\n      setCanClaimAnniversaryPoints(canClaimAnniversary)\n    }\n\n    if (account) {\n      fetchClaimAnniversaryStatus()\n    }\n  }, [account])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (canClaimAnniversaryPoints && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentAnniversaryModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentAnniversaryModal, canClaimAnniversaryPoints])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, DeserializedPool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { DeserializedPool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s GOL is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from 'gol-uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from 'gol-uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address || ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 11\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            {performanceFee ? (\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            ) : (\n              <Skeleton width=\"90px\" height=\"21px\" />\n            )}\n          </Flex>\n        </Flex>\n      )}\n      {/* <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex> */}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from 'gol-uikit'\nimport { DeserializedPool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: DeserializedPool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from 'gol-uikit'\nimport { mainnetTokens } from 'config/constants/tokens'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.gol.address}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from 'gol-uikit'\nimport { Token } from 'golswap-sdk'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'GOL' && stakingToken.symbol === 'GOL'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn GOL, stake GOL')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve GOL auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'GOL' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from 'gol-uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'gol-uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 11) {\n        await stakeFarm(masterChefContract, 11, amount) // OjO Maradona\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\n  const gasPrice = getGasPrice()\n  const units = parseUnits(amount, decimals)\n\n  const tx = await sousChefContract.withdraw(units.toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 11) {\n        await unstakeFarm(masterChefContract, 11, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from 'gol-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 11) {\n      await harvestFarm(masterChefContract, 11)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'golswap-sdk'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake GOL into pool.')}</Text>\n      <Text>{t('Harvest: collect GOL and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from 'gol-uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'golswap-sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 11\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from 'gol-uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 11}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 11}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from 'gol-uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new GOL in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new GOL in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: DeserializedPool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 GOL or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from 'gol-uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from 'gol-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: DeserializedPool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" GOL\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from 'gol-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent GOL profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: DeserializedPool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.gol}\n        stakingToken={tokens.gol}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from 'gol-uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ViewMode } from 'state/user/actions'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from 'gol-uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Bounty collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('GOL bounty has been sent to your wallet.')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" GOL\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" GOL\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto GOL Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto GOL pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto GOL Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import { Flex, Text } from 'gol-uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 11\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 11 || (sousId === 11 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto GOL')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual GOL')\n    subtitle = `${t('Earn')} GOL ${t('Stake').toLocaleLowerCase()} GOL`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from 'gol-uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 11\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from 'gol-uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from 'gol-uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 11\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n            {/* {console.log(\"TotalStakedCell.tsx %o\", totalStakedBalance)} */}\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from 'gol-uikit'\nimport { getBscScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 11\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from 'gol-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 11\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from 'gol-uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: DeserializedPool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from 'gol-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent GOL profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from 'gol-uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 11\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 11\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        {/* <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex> */}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} GOL ${t('Stake').toLocaleLowerCase()} GOL`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from 'gol-uikit'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent GOL profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" GOL\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from 'gol-uikit'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from 'gol-uikit'\nimport { DeserializedPool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  scroll-margin-top: 64px;\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from 'gol-uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchUserPools,\n  useFetchCakeVault,\n  useCakeVault,\n} from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { DeserializedPool } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\n// import HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 11)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n  useFetchUserPools(account)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 11),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 11) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            {/* <HelpButton /> */}\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"logo.png\"\n          alt=\"Gol Football Soccer illustration\"\n          width={100}\n          height={100}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import { Token } from 'golswap-sdk'\nimport tokens from 'config/constants/tokens'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from 'gol-uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from 'golswap-sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from 'golswap-sdk'\nimport { Button, Text, AutoRenewIcon } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                  <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                  <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                  <Text>- {t('%amount% towards GOL buyback and burn', { amount: '0.05%' })}</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from 'golswap-sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from 'gol-uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from 'golswap-sdk'\nimport { InjectedModalProps } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from 'golswap-sdk'\nimport { Text, Flex, ChevronRightIcon } from 'gol-uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from 'golswap-sdk'\nimport { Text } from 'gol-uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\n          </Text>\n          <QuestionHelper\n            text={t(\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n            )}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Price Impact')}\n          </Text>\n          <QuestionHelper\n            text={t('The difference between the market price and estimated price due to trade size.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Liquidity Provider Fee')}\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                <Text>- {t('%amount% towards GOL buyback and burn', { amount: '0.05%' })}</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const { t } = useTranslation()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    {t('Route')}\n                  </Text>\n                  <QuestionHelper\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from 'golswap-sdk'\nimport { Text, AutoRenewIcon } from 'gol-uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from 'golswap-sdk'\nimport { Modal, InjectedModalProps } from 'gol-uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  const { t } = useTranslation()\n  return (\n    <Modal\n      title={t('Import Token')}\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from 'golswap-sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport truncateHash from 'utils/truncateHash'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? truncateHash(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from 'golswap-sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from 'gol-uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from 'gol-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from 'gol-uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from 'gol-uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from 'golswap-sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from 'gol-uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      return swapCurrency.address === warningTokenData.address\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact Too High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from 'golswap-sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\n          {\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            word: confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\n        {\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from 'gol-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport useUserAgent from 'hooks/useUserAgent'\nimport useScrollOnRouteChange from 'hooks/useScrollOnRouteChange'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport GlobalCheckClaimStatus from './components/GlobalCheckClaimStatus'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Info = lazy(() => import('./views/Info'))\nconst NftMarket = lazy(() => import('./views/Nft/market'))\nconst ProfileCreation = lazy(() => import('./views/ProfileCreation'))\nconst PancakeSquad = lazy(() => import('./views/PancakeSquad'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account } = useWeb3React()\n\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n  useScrollOnRouteChange()\n  useUserAgent()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={[]} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/create-profile\">\n              <ProfileCreation />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* NFT */}\n            <Route path=\"/nfts\">\n              <NftMarket />\n            </Route>\n\n            <Route path=\"/pancake-squad\">\n              <PancakeSquad />\n            </Route>\n\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* <Route path=\"/collectibles\">\n              <Redirect to=\"/nfts\" />\n            </Route> */}\n            <Route path=\"/profile\">\n              <Redirect to={`${nftsBaseUrl}/profile/${account?.toLowerCase() || ''}`} />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from 'gol-uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : dark} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}