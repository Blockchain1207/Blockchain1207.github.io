{"version":3,"sources":["views/Nft/market/hooks/useAllPancakeBunnyNfts.ts","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","views/Nft/market/Collection/Items/CollectionNfts.tsx","views/Nft/market/Collection/Items/PancakeBunniesCollectionNfts.tsx","views/Nft/market/Collection/Items/index.tsx","../node_modules/lodash/times.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/_castFunction.js","components/AddressInputSelect/index.tsx","views/Nft/market/components/GridPlaceholder.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","views/Nft/market/components/PaginationButtons.tsx"],"names":["useAllPancakeBunnyNfts","collectionAddress","useState","allPancakeBunnyNfts","setAllPancakeBunnyNfts","isPBCollection","pancakeBunniesAddress","useEffect","a","getNftsFromCollectionApi","data","bunnyIds","Object","keys","getAllPancakeBunniesLowestPrice","lowestPrices","getAllPancakeBunniesRecentUpdatedAt","latestUpdates","allBunnies","map","bunnyId","tokenId","name","description","collectionName","collection","image","attributes","traitType","value","displayType","meta","currentAskPrice","updatedAt","fetchPancakeBunnies","BackLink","styled","RouterLink","theme","colors","primary","TopBar","t","useTranslation","alignItems","justifyContent","mb","to","nftsBaseUrl","color","width","SearchBar","LowestPriceStatBoxItem","props","lowestPrice","setLowestPrice","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","StatBox","title","symbol","stat","Header","useParams","totalSupply","numberTokensListed","totalVolumeBNB","banner","avatar","useLocation","pathname","hash","volume","parseFloat","itemsConfig","label","href","MarketPageHeader","BannerHeader","bannerImage","large","AvatarImage","src","MarketPageTitle","formatNumber","Number","address","Container","BaseSubMenu","items","activeItem","mt","MAX_ITEMS_PER_PAGE","CollectionNfts","dispatch","useAppDispatch","scrollEl","useRef","currentPage","setCurrentPage","maxPage","setMaxPages","nftsSlice","setNftsSlice","checksummedAddress","getAddress","nftsFromCollection","useNftsFromCollection","shouldFetchMoreNfts","length","isArrowBackDisabled","isArrowForwardDisabled","fetchNftsFromCollections","page","size","requestPage","Math","ceil","fetchMoreNftsFromCollections","max","getMaxPages","slice","getActivitiesSlice","ref","gridGap","gridTemplateColumns","nft","onClick","cursor","current","scrollIntoView","behavior","spin","GridPlaceholder","PancakeBunniesCollectionNfts","sortBy","sortedNfts","orderBy","Items","setSortBy","useGetCollection","toLowerCase","sortByItems","fetchCollection","Page","minWidth","fontSize","textTransform","fontWeight","Select","options","onOptionChange","newOption","baseTimes","require","castFunction","toInteger","MAX_ARRAY_LENGTH","nativeMin","min","module","exports","n","iteratee","index","result","toFinite","remainder","identity","ResultStatus","SubMenu","div","input","inputSecondary","radii","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","NOT_VALID","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","isAddress","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","px","GridPlaceholderItem","height","numItems","times","itemKey","background","useTheme","isDark","StatBoxItem","textAlign","mx","Flex","invertedContrast","cardBorder","card","attrs","alt","borderColor","history","useHistory","push","children","as","scale","SubMenuItems","StyledBannerImage","mediaQueries","sm","md","bannerAlt","flexDirection","pb","BannerImage","bottom","left","PageButtons","Arrow"],"mappings":"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","file":"static/js/11.3ae63af8.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport {\n  getAllPancakeBunniesLowestPrice,\n  getAllPancakeBunniesRecentUpdatedAt,\n  getNftsFromCollectionApi,\n} from 'state/nftMarket/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from '../constants'\n\n// If collection is PancakeBunnies - gets all available bunnies, otherwise - null\nconst useAllPancakeBunnyNfts = (collectionAddress: string) => {\n  const [allPancakeBunnyNfts, setAllPancakeBunnyNfts] = useState<NftToken[]>(null)\n\n  const isPBCollection = collectionAddress === pancakeBunniesAddress\n\n  useEffect(() => {\n    const fetchPancakeBunnies = async () => {\n      // In order to not define special TS type just for PancakeBunnies display we're hacking a little bit into NftToken type.\n      // On this page we just want to display all bunnies with their lowest prices and updates on the market\n      // Since some bunnies might not be on the market at all, we don't refer to the redux nfts state (which stores NftToken with actual token ids)\n      // We merely request from API all available bunny ids with their metadata and query subgraph for lowest price and latest updates.\n      const { data } = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      const bunnyIds = Object.keys(data)\n      const lowestPrices = await getAllPancakeBunniesLowestPrice(bunnyIds)\n      const latestUpdates = await getAllPancakeBunniesRecentUpdatedAt(bunnyIds)\n      const allBunnies: NftToken[] = bunnyIds.map((bunnyId) => {\n        return {\n          // tokenId here is just a dummy one to satisfy TS. TokenID does not play any role in gird display below\n          tokenId: data[bunnyId].name,\n          name: data[bunnyId].name,\n          description: data[bunnyId].description,\n          collectionAddress: pancakeBunniesAddress,\n          collectionName: data[bunnyId].collection.name,\n          image: data[bunnyId].image,\n          attributes: [\n            {\n              traitType: 'bunnyId',\n              value: bunnyId,\n              displayType: null,\n            },\n          ],\n          meta: {\n            currentAskPrice: lowestPrices[bunnyId],\n            updatedAt: latestUpdates[bunnyId],\n          },\n        }\n      })\n      setAllPancakeBunnyNfts(allBunnies)\n    }\n    if (isPBCollection && !allPancakeBunnyNfts) {\n      fetchPancakeBunnies()\n    }\n  }, [isPBCollection, allPancakeBunnyNfts])\n\n  return allPancakeBunnyNfts\n}\n\nexport default useAllPancakeBunnyNfts\n","import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from 'gol-uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={nftsBaseUrl}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from 'gol-uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst DEFAULT_TABS = '#items'\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  })\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem title={t('Items listed')} stat={formatNumber(Number(numberTokensListed), 0, 0)} />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || DEFAULT_TABS}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n","import React, { useEffect, useState, useRef } from 'react'\nimport { ArrowBackIcon, ArrowForwardIcon, AutoRenewIcon, Flex, Grid, Text } from 'gol-uikit'\nimport { getAddress } from '@ethersproject/address'\nimport { useAppDispatch } from 'state'\nimport { useNftsFromCollection } from 'state/nftMarket/hooks'\nimport { Collection, NftToken } from 'state/nftMarket/types'\nimport { fetchNftsFromCollections } from 'state/nftMarket/reducer'\nimport { useTranslation } from 'contexts/Localization'\nimport GridPlaceholder from '../../components/GridPlaceholder'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport { Arrow, PageButtons } from '../../components/PaginationButtons'\n\ninterface CollectionNftsProps {\n  collection: Collection\n}\n\nconst REQUEST_SIZE = 100\nconst MAX_ITEMS_PER_PAGE = 100\n\nconst CollectionNfts: React.FC<CollectionNftsProps> = ({ collection }) => {\n  const dispatch = useAppDispatch()\n  const scrollEl = useRef<HTMLDivElement>(null)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [maxPage, setMaxPages] = useState(1)\n  const [nftsSlice, setNftsSlice] = useState<NftToken[]>([])\n  const { t } = useTranslation()\n\n  const { address, totalSupply } = collection\n\n  const checksummedAddress = getAddress(address)\n\n  const nftsFromCollection = useNftsFromCollection(checksummedAddress)\n\n  const shouldFetchMoreNfts = nftsFromCollection?.length <= currentPage * MAX_ITEMS_PER_PAGE\n  const isArrowBackDisabled = currentPage === 1\n  const isArrowForwardDisabled = currentPage === maxPage || shouldFetchMoreNfts\n\n  const scrollToTop = (): void => {\n    scrollEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  useEffect(() => {\n    // First fetch\n    dispatch(\n      fetchNftsFromCollections({\n        collectionAddress: checksummedAddress,\n        page: 1,\n        size: REQUEST_SIZE,\n      }),\n    )\n  }, [checksummedAddress, dispatch])\n\n  useEffect(() => {\n    // Additional fetches\n    const fetchMoreNftsFromCollections = () => {\n      const requestPage = Math.ceil(nftsFromCollection.length / REQUEST_SIZE) + 1\n      dispatch(\n        fetchNftsFromCollections({\n          collectionAddress: checksummedAddress,\n          page: requestPage,\n          size: REQUEST_SIZE,\n        }),\n      )\n    }\n\n    // NB: TRAIT FILTERS - When trait filter is active, should probably prevent this from firing\n    if (nftsFromCollection?.length > 0 && shouldFetchMoreNfts) {\n      fetchMoreNftsFromCollections()\n    }\n  }, [nftsFromCollection, currentPage, checksummedAddress, shouldFetchMoreNfts, dispatch])\n\n  useEffect(() => {\n    const getMaxPages = () => {\n      // NB: TRAIT FILTERS - changing the `totalSupply` here to the length of the data returned by the traits res should work well for pure FE pagination.\n      const max = Math.ceil(Number(totalSupply) / MAX_ITEMS_PER_PAGE)\n      setMaxPages(max)\n    }\n\n    if (totalSupply) {\n      getMaxPages()\n    }\n  }, [totalSupply])\n\n  // Slice sorted data to paginate in FE\n  useEffect(() => {\n    const getActivitiesSlice = () => {\n      const slice = nftsFromCollection.slice(MAX_ITEMS_PER_PAGE * (currentPage - 1), MAX_ITEMS_PER_PAGE * currentPage)\n      setNftsSlice(slice)\n    }\n\n    if (nftsFromCollection?.length > 0) {\n      getActivitiesSlice()\n    }\n  }, [nftsFromCollection, currentPage])\n\n  if (!nftsSlice.length) {\n    return <GridPlaceholder />\n  }\n\n  return (\n    <>\n      <Grid\n        ref={scrollEl}\n        gridGap=\"16px\"\n        gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n        alignItems=\"start\"\n      >\n        {nftsSlice.map((nft) => {\n          return <CollectibleLinkCard key={`${nft.tokenId}-${nft.collectionName}`} nft={nft} />\n        })}\n      </Grid>\n      {nftsFromCollection?.length > MAX_ITEMS_PER_PAGE && (\n        <Flex mt=\"24px\">\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setCurrentPage(isArrowBackDisabled ? currentPage : currentPage - 1)\n              }}\n            >\n              <ArrowBackIcon\n                color={isArrowBackDisabled ? 'textDisabled' : 'primary'}\n                cursor={isArrowBackDisabled ? 'not-allowed' : 'pointer'}\n              />\n            </Arrow>\n            <Text>{t('Page %page% of %maxPage%', { page: currentPage, maxPage })}</Text>\n            <Arrow\n              onClick={() => {\n                if (!isArrowForwardDisabled) {\n                  scrollToTop()\n                  setCurrentPage(currentPage + 1)\n                }\n              }}\n            >\n              {shouldFetchMoreNfts ? (\n                <AutoRenewIcon spin color=\"textDisabled\" cursor=\"not-allowed\" />\n              ) : (\n                <ArrowForwardIcon\n                  color={isArrowForwardDisabled ? 'textDisabled' : 'primary'}\n                  cursor={isArrowForwardDisabled ? 'not-allowed' : 'pointer'}\n                />\n              )}\n            </Arrow>\n          </PageButtons>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default CollectionNfts\n","import React from 'react'\nimport { Grid } from 'gol-uikit'\nimport orderBy from 'lodash/orderBy'\nimport { Collection } from 'state/nftMarket/types'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport useAllPancakeBunnyNfts from '../../hooks/useAllPancakeBunnyNfts'\nimport GridPlaceholder from '../../components/GridPlaceholder'\n\ninterface CollectionNftsProps {\n  collection: Collection\n  sortBy?: string\n}\n\nconst PancakeBunniesCollectionNfts: React.FC<CollectionNftsProps> = ({ collection, sortBy = 'updatedAt' }) => {\n  const { address } = collection\n  const allPancakeBunnyNfts = useAllPancakeBunnyNfts(address)\n\n  const sortedNfts = allPancakeBunnyNfts\n    ? orderBy(allPancakeBunnyNfts, (nft) => (nft.meta[sortBy] ? Number(nft?.meta[sortBy]) : 0), [\n        sortBy === 'currentAskPrice' ? 'asc' : 'desc',\n      ])\n    : []\n\n  if (!sortedNfts.length) {\n    return <GridPlaceholder />\n  }\n\n  return (\n    <>\n      <Grid\n        gridGap=\"16px\"\n        gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n        alignItems=\"start\"\n      >\n        {sortedNfts.map((nft) => {\n          return <CollectibleLinkCard key={`${nft.tokenId}-${nft.collectionName}`} nft={nft} />\n        })}\n      </Grid>\n    </>\n  )\n}\n\nexport default PancakeBunniesCollectionNfts\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport { Box, Flex, Text } from 'gol-uikit'\nimport { useAppDispatch } from 'state'\nimport { fetchCollection } from 'state/nftMarket/reducer'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Page from 'components/Layout/Page'\nimport { pancakeBunniesAddress } from '../../constants'\nimport CollectionNfts from './CollectionNfts'\nimport PancakeBunniesCollectionNfts from './PancakeBunniesCollectionNfts'\nimport Header from '../Header'\n\nconst Items = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const [sortBy, setSortBy] = useState('updatedAt')\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const collection = useGetCollection(collectionAddress)\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  const { address } = collection || {}\n\n  const sortByItems = [\n    { label: t('Recently listed'), value: 'updatedAt' },\n    { label: t('Lowest price'), value: 'currentAskPrice' },\n  ]\n\n  const handleChange = (newOption: OptionProps) => {\n    setSortBy(newOption.value)\n  }\n\n  useEffect(() => {\n    if (address) {\n      dispatch(fetchCollection(address))\n    }\n  }, [address, dispatch])\n\n  return (\n    <>\n      <Header collection={collection} />\n      <Page>\n        {/* Only PBs can return enough data to viably sort the entire collection */}\n        {isPBCollection && (\n          <Flex alignItems=\"center\" justifyContent={['flex-start', null, null, 'flex-end']} mb=\"24px\">\n            <Box minWidth=\"165px\">\n              <Text fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\n                {t('Sort By')}\n              </Text>\n              <Select options={sortByItems} onOptionChange={handleChange} />\n            </Box>\n          </Flex>\n        )}\n        {isPBCollection ? (\n          <PancakeBunniesCollectionNfts collection={collection} sortBy={sortBy} />\n        ) : (\n          <CollectionNfts collection={collection} />\n        )}\n      </Page>\n    </>\n  )\n}\n\nexport default Items\n","var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from 'gol-uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import React from 'react'\nimport { Box, BoxProps, Grid, GridProps, Skeleton } from 'gol-uikit'\nimport times from 'lodash/times'\n\ninterface GridPlaceholderProps extends GridProps {\n  numItems?: number\n}\n\nexport const GridPlaceholderItem: React.FC<BoxProps> = (props) => (\n  <Box {...props}>\n    <Skeleton height=\"252px\" mb=\"8px\" />\n    <Skeleton width=\"30%\" mb=\"4px\" />\n    <Skeleton width=\"45%\" mb=\"16px\" />\n    <Skeleton />\n  </Box>\n)\n\nconst GridPlaceholder: React.FC<GridPlaceholderProps> = ({ numItems = 12, ...props }) => (\n  <Grid gridGap=\"16px\" gridTemplateColumns={['1fr', null, null, 'repeat(4, 1fr)']} {...props}>\n    {times(numItems).map((itemKey) => (\n      <GridPlaceholderItem key={itemKey} />\n    ))}\n  </Grid>\n)\n\nexport default GridPlaceholder\n","import React from 'react'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\nimport useTheme from 'hooks/useTheme'\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  const { theme } = useTheme()\n  const background = theme.isDark\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\n  return <PageHeader background={background} {...props} />\n}\n\nexport default MarketPageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from 'gol-uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from 'gol-uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from 'gol-uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from 'gol-uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n","import styled from 'styled-components'\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`\n\nexport const Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n"],"sourceRoot":""}